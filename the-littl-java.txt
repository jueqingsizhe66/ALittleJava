Generated on: 2019年5月11日 12:27:06
                                                                     Page 1
                         Data Dictionary Summary Report
===============================================================================

ch01   (Package)
   [LayerD.java, 1]

ch01.Base   (Class)
   [LayerD.java, 14]

ch01.Base.Base(Object _o)   (Public Constructor)
   [LayerD.java, 17]

ch01.Base.Base._o   (Parameter)
   [LayerD.java, 17]

ch01.Base.o1   (Variable)
   [LayerD.java, 16]

ch01.CartesianPt   (Class)
   [PointD.java, 11]

ch01.CartesianPt.CartesianPt(int _x,int _y)   (Public Constructor)
   [PointD.java, 14]

ch01.CartesianPt.CartesianPt._x   (Parameter)
   [PointD.java, 14]

ch01.CartesianPt.CartesianPt._y   (Parameter)
   [PointD.java, 14]

ch01.CartesianPt.x   (Variable)
   [PointD.java, 12]

ch01.CartesianPt.y   (Variable)
   [PointD.java, 13]

ch01.LayerD   (Public Abstract Class)
   [LayerD.java, 4]

ch01.ManHattanPt   (Class)
   [PointD.java, 23]

ch01.ManHattanPt.ManHattanPt(int _x,int _y)   (Public Constructor)
   [PointD.java, 27]

ch01.ManHattanPt.ManHattanPt._x   (Parameter)
   [PointD.java, 27]

ch01.ManHattanPt.ManHattanPt._y   (Parameter)
   [PointD.java, 27]

ch01.ManHattanPt.toString   (Public Method)
   [PointD.java, 34]

ch01.ManHattanPt.x   (Variable)
   [PointD.java, 24]
                                                                     Page 2
                         Data Dictionary Summary Report
===============================================================================

ch01.ManHattanPt.y   (Variable)
   [PointD.java, 25]

ch01.MoreThanOne   (Class)
   [NumD.java, 43]

ch01.MoreThanOne.MoreThanOne(NumD _d)   (Public Constructor)
   [NumD.java, 46]

ch01.MoreThanOne.MoreThanOne._d   (Parameter)
   [NumD.java, 46]

ch01.MoreThanOne.predecessor   (Variable)
   [NumD.java, 45]

ch01.NumD   (Public Abstract Class)
   [NumD.java, 31]

ch01.Pepper   (Class)
   [Seasoning.java, 14]

ch01.PointD   (Abstract Class)
   [PointD.java, 5]

ch01.Sage   (Class)
   [Seasoning.java, 16]

ch01.Salt   (Class)
   [Seasoning.java, 13]

ch01.Seasoning   (Public Abstract Class)
   [Seasoning.java, 9]

ch01.Slice   (Class)
   [LayerD.java, 25]

ch01.Slice.s1   (Variable)
   [LayerD.java, 27]

ch01.Slice.Slice(LayerD _s)   (Public Constructor)
   [LayerD.java, 28]

ch01.Slice.Slice._s   (Parameter)
   [LayerD.java, 28]

ch01.Test   (Public Class)
   [Test.java, 3]

ch01.Test.main(String[] args)   (Public Static Method)
   [Test.java, 5]

ch01.Test.main.args   (Parameter)
   [Test.java, 5]
                                                                     Page 3
                         Data Dictionary Summary Report
===============================================================================

ch01.Test.main.mhpt   (Variable)
   [Test.java, 6]

ch01.TestMain   (Public Class)
   [TestMain.java, 3]

ch01.TestMain.main(String[] args)   (Public Static Method)
   [TestMain.java, 4]

ch01.TestMain.main.args   (Parameter)
   [TestMain.java, 4]

ch01.TestMain.main.pd   (Variable)
   [TestMain.java, 5]

ch01.Thyme   (Class)
   [Seasoning.java, 15]

ch01.Zero   (Class)
   [NumD.java, 37]

ch02   (Package)
   [KaoRou.java, 1]

ch02.Brass   (Class)
   [KaoRouPlates.java, 21]

ch02.CartesianPt   (Class)
   [PointD.java, 20]

ch02.CartesianPt.CartesianPt(int _x,int _y)   (Public Constructor)
   [PointD.java, 23]

ch02.CartesianPt.CartesianPt._x   (Parameter)
   [PointD.java, 23]

ch02.CartesianPt.CartesianPt._y   (Parameter)
   [PointD.java, 23]

ch02.CartesianPt.distanceTo0   (Method)
   [PointD.java, 29]

ch02.CartesianPt.x   (Variable)
   [PointD.java, 21]

ch02.CartesianPt.y   (Variable)
   [PointD.java, 22]

ch02.CartesianPt1   (Class)
   [PointDCloser.java, 15]

ch02.CartesianPt1.CartesianPt1(int _x,int _y)   (Public Constructor)
   [PointDCloser.java, 18]
                                                                     Page 4
                         Data Dictionary Summary Report
===============================================================================

ch02.CartesianPt1.CartesianPt1._x   (Parameter)
   [PointDCloser.java, 18]

ch02.CartesianPt1.CartesianPt1._y   (Parameter)
   [PointDCloser.java, 18]

ch02.CartesianPt1.closerTo0(CartesianPt1 p1)   (Method)
   [PointDCloser.java, 30]

ch02.CartesianPt1.closerTo0.p1   (Parameter)
   [PointDCloser.java, 30]

ch02.CartesianPt1.distanceTo0   (Method)
   [PointDCloser.java, 24]

ch02.CartesianPt1.x   (Variable)
   [PointDCloser.java, 16]

ch02.CartesianPt1.y   (Variable)
   [PointDCloser.java, 17]

ch02.CartesianPt2   (Class)
   [PointDCloserSimplify.java, 22]

ch02.CartesianPt2.CartesianPt2(int _x,int _y)   (Public Constructor)
   [PointDCloserSimplify.java, 25]

ch02.CartesianPt2.CartesianPt2._x   (Parameter)
   [PointDCloserSimplify.java, 25]

ch02.CartesianPt2.CartesianPt2._y   (Parameter)
   [PointDCloserSimplify.java, 25]

ch02.CartesianPt2.distanceTo0   (Method)
   [PointDCloserSimplify.java, 31]

ch02.CartesianPt2.x   (Variable)
   [PointDCloserSimplify.java, 23]

ch02.CartesianPt2.y   (Variable)
   [PointDCloserSimplify.java, 24]

ch02.Copper   (Class)
   [KaoRouPlates.java, 25]

ch02.Dagger   (Class)
   [KaoRouChuan.java, 13]

ch02.Gold   (Class)
   [KaoRouPlates.java, 13]

ch02.Holder   (Class)
   [KaoRou.java, 20]
                                                                     Page 5
                         Data Dictionary Summary Report
===============================================================================

ch02.Holder.Holder(Object _o)   (Public Constructor)
   [KaoRou.java, 23]

ch02.Holder.Holder._o   (Parameter)
   [KaoRou.java, 23]

ch02.Holder.isVeggie   (Method)
   [KaoRou.java, 28]

ch02.Holder.o   (Variable)
   [KaoRou.java, 22]

ch02.Holder.whatHolder   (Method)
   [KaoRou.java, 34]

ch02.KaoRou   (Public Abstract Class)
   [KaoRou.java, 9]

ch02.KaoRou.isVeggie   (Abstract Method)
   [KaoRou.java, 10]

ch02.KaoRou.toString   (Public Method)
   [KaoRou.java, 13]

ch02.KaoRou.whatHolder   (Abstract Method)
   [KaoRou.java, 11]

ch02.KaoRouChuan   (Public Abstract Class)
   [KaoRouChuan.java, 7]

ch02.KaoRouPlates   (Public Abstract Class)
   [KaoRouPlates.java, 7]

ch02.Lamb   (Class)
   [YangRouChuan.java, 70]

ch02.Lamb.isVegetarian   (Method)
   [YangRouChuan.java, 85]

ch02.Lamb.Lamb(YangRouChuan _y)   (Public Constructor)
   [YangRouChuan.java, 73]

ch02.Lamb.Lamb._y   (Parameter)
   [YangRouChuan.java, 73]

ch02.Lamb.onlyOnions   (Method)
   [YangRouChuan.java, 79]

ch02.Lamb.y   (Variable)
   [YangRouChuan.java, 72]

ch02.Main   (Public Class)
   [Main.java, 3]
                                                                     Page 6
                         Data Dictionary Summary Report
===============================================================================

ch02.Main.main(String[] args)   (Public Static Method)
   [Main.java, 4]

ch02.Main.main.args   (Parameter)
   [Main.java, 4]

ch02.Main.main.p   (Variable)
   [Main.java, 5]

ch02.Main.main.p1   (Variable)
   [Main.java, 6]

ch02.ManHattanPt   (Class)
   [PointD.java, 37]

ch02.ManHattanPt.distanceTo0   (Method)
   [PointD.java, 46]

ch02.ManHattanPt.ManHattanPt(int _x,int _y)   (Public Constructor)
   [PointD.java, 40]

ch02.ManHattanPt.ManHattanPt._x   (Parameter)
   [PointD.java, 40]

ch02.ManHattanPt.ManHattanPt._y   (Parameter)
   [PointD.java, 40]

ch02.ManHattanPt.toString   (Public Method)
   [PointD.java, 52]

ch02.ManHattanPt.x   (Variable)
   [PointD.java, 38]

ch02.ManHattanPt.y   (Variable)
   [PointD.java, 39]

ch02.ManHattanPt1   (Class)
   [PointDCloser.java, 38]

ch02.ManHattanPt1.closerTo0(ManHattanPt1 p1)   (Method)
   [PointDCloser.java, 52]

ch02.ManHattanPt1.closerTo0.p1   (Parameter)
   [PointDCloser.java, 52]

ch02.ManHattanPt1.distanceTo0   (Method)
   [PointDCloser.java, 47]

ch02.ManHattanPt1.ManHattanPt1(int _x,int _y)   (Public Constructor)
   [PointDCloser.java, 41]

ch02.ManHattanPt1.ManHattanPt1._x   (Parameter)
   [PointDCloser.java, 41]
                                                                     Page 7
                         Data Dictionary Summary Report
===============================================================================

ch02.ManHattanPt1.ManHattanPt1._y   (Parameter)
   [PointDCloser.java, 41]

ch02.ManHattanPt1.x   (Variable)
   [PointDCloser.java, 39]

ch02.ManHattanPt1.y   (Variable)
   [PointDCloser.java, 40]

ch02.ManHattanPt2   (Class)
   [PointDCloserSimplify.java, 41]

ch02.ManHattanPt2.closerTo0(CartesianPt p1)   (Method)
   [PointDCloserSimplify.java, 55]

ch02.ManHattanPt2.closerTo0.p1   (Parameter)
   [PointDCloserSimplify.java, 55]

ch02.ManHattanPt2.distanceTo0   (Method)
   [PointDCloserSimplify.java, 50]

ch02.ManHattanPt2.ManHattanPt2(int _x,int _y)   (Public Constructor)
   [PointDCloserSimplify.java, 44]

ch02.ManHattanPt2.ManHattanPt2._x   (Parameter)
   [PointDCloserSimplify.java, 44]

ch02.ManHattanPt2.ManHattanPt2._y   (Parameter)
   [PointDCloserSimplify.java, 44]

ch02.ManHattanPt2.x   (Variable)
   [PointDCloserSimplify.java, 42]

ch02.ManHattanPt2.y   (Variable)
   [PointDCloserSimplify.java, 43]

ch02.MoreThanOne   (Class)
   [NumD.java, 43]

ch02.MoreThanOne.MoreThanOne(NumD _d)   (Public Constructor)
   [NumD.java, 46]

ch02.MoreThanOne.MoreThanOne._d   (Parameter)
   [NumD.java, 46]

ch02.MoreThanOne.predecessor   (Variable)
   [NumD.java, 45]

ch02.NumD   (Public Abstract Class)
   [NumD.java, 31]

ch02.Onion   (Class)
   [YangRouChuan.java, 44]
                                                                     Page 8
                         Data Dictionary Summary Report
===============================================================================

ch02.Onion.isVegetarian   (Method)
   [YangRouChuan.java, 58]

ch02.Onion.Onion(YangRouChuan _s)   (Public Constructor)
   [YangRouChuan.java, 47]

ch02.Onion.Onion._s   (Parameter)
   [YangRouChuan.java, 47]

ch02.Onion.onlyOnions   (Method)
   [YangRouChuan.java, 52]

ch02.Onion.s1   (Variable)
   [YangRouChuan.java, 45]

ch02.Onion.toString   (Public Method)
   [YangRouChuan.java, 63]

ch02.Pepper   (Class)
   [KaoRou.java, 92]

ch02.Pepper.isVeggie   (Method)
   [KaoRou.java, 100]

ch02.Pepper.kaoroujia   (Variable)
   [KaoRou.java, 94]

ch02.Pepper.Pepper(KaoRou kaoroujia)   (Public Constructor)
   [KaoRou.java, 95]

ch02.Pepper.Pepper.kaoroujia   (Parameter)
   [KaoRou.java, 95]

ch02.Pepper.whatHolder   (Method)
   [KaoRou.java, 106]

ch02.PointD   (Public Abstract Class)
   [PointD.java, 5]

ch02.PointD.distanceTo0   (Abstract Method)
   [PointD.java, 8]

ch02.PointD.toString   (Public Method)
   [PointD.java, 10]

ch02.PointDCloser   (Public Abstract Class)
   [PointDCloser.java, 6]

ch02.PointDCloser.distanceTo0   (Abstract Method)
   [PointDCloser.java, 9]

ch02.PointDCloserSimplify   (Public Abstract Class)
   [PointDCloserSimplify.java, 8]
                                                                     Page 9
                         Data Dictionary Summary Report
===============================================================================

ch02.PointDCloserSimplify.closerTo0(CartesianPt2 p1)   (Method)
   [PointDCloserSimplify.java, 13]

ch02.PointDCloserSimplify.closerTo0.p1   (Parameter)
   [PointDCloserSimplify.java, 13]

ch02.PointDCloserSimplify.distanceTo0   (Abstract Method)
   [PointDCloserSimplify.java, 11]

ch02.Radish   (Class)
   [KaoRou.java, 74]

ch02.Radish.isVeggie   (Method)
   [KaoRou.java, 82]

ch02.Radish.kaoroujia   (Variable)
   [KaoRou.java, 76]

ch02.Radish.Radish(KaoRou kaoroujia)   (Public Constructor)
   [KaoRou.java, 77]

ch02.Radish.Radish.kaoroujia   (Parameter)
   [KaoRou.java, 77]

ch02.Radish.whatHolder   (Method)
   [KaoRou.java, 88]

ch02.Sabre   (Class)
   [KaoRouChuan.java, 17]

ch02.Shallot   (Class)
   [KaoRou.java, 38]

ch02.Shallot.isVeggie   (Method)
   [KaoRou.java, 46]

ch02.Shallot.kaoroujia   (Variable)
   [KaoRou.java, 40]

ch02.Shallot.Shallot(KaoRou kaoroujia)   (Public Constructor)
   [KaoRou.java, 41]

ch02.Shallot.Shallot.kaoroujia   (Parameter)
   [KaoRou.java, 41]

ch02.Shallot.whatHolder   (Method)
   [KaoRou.java, 52]

ch02.Shrimp   (Class)
   [KaoRou.java, 56]

ch02.Shrimp.isVeggie   (Method)
   [KaoRou.java, 64]
                                                                     Page 10
                         Data Dictionary Summary Report
===============================================================================

ch02.Shrimp.kaoroujia   (Variable)
   [KaoRou.java, 58]

ch02.Shrimp.Shrimp(KaoRou kaoroujia)   (Public Constructor)
   [KaoRou.java, 59]

ch02.Shrimp.Shrimp.kaoroujia   (Parameter)
   [KaoRou.java, 59]

ch02.Shrimp.whatHolder   (Method)
   [KaoRou.java, 70]

ch02.Silver   (Class)
   [KaoRouPlates.java, 17]

ch02.Skewer   (Class)
   [YangRouChuan.java, 26]

ch02.Skewer.isVegetarian   (Method)
   [YangRouChuan.java, 35]

ch02.Skewer.onlyOnions   (Method)
   [YangRouChuan.java, 29]

ch02.Sword   (Class)
   [KaoRouChuan.java, 21]

ch02.Test   (Public Class)
   [Test.java, 3]

ch02.Test.main(String[] args)   (Public Static Method)
   [Test.java, 5]

ch02.Test.main.args   (Parameter)
   [Test.java, 5]

ch02.Test.main.m2   (Variable)
   [Test.java, 9]

ch02.Test.main.m3   (Variable)
   [Test.java, 10]

ch02.Test.main.mhpt   (Variable)
   [Test.java, 6]

ch02.TestTYangRouChuan   (Public Class)
   [TestTYangRouChuan.java, 3]

ch02.TestTYangRouChuan.main(String[] args)   (Public Static Method)
   [TestTYangRouChuan.java, 5]

ch02.TestTYangRouChuan.main.args   (Parameter)
   [TestTYangRouChuan.java, 5]
                                                                     Page 11
                         Data Dictionary Summary Report
===============================================================================

ch02.Tomato   (Class)
   [YangRouChuan.java, 92]

ch02.Tomato.isVegetarian   (Method)
   [YangRouChuan.java, 106]

ch02.Tomato.onlyOnions   (Method)
   [YangRouChuan.java, 100]

ch02.Tomato.Tomato(YangRouChuan _y)   (Public Constructor)
   [YangRouChuan.java, 95]

ch02.Tomato.Tomato._y   (Parameter)
   [YangRouChuan.java, 95]

ch02.Tomato.toString   (Public Method)
   [YangRouChuan.java, 111]

ch02.Tomato.y   (Variable)
   [YangRouChuan.java, 94]

ch02.Wood   (Class)
   [KaoRouPlates.java, 28]

ch02.YangRouChuan   (Public Abstract Class)
   [YangRouChuan.java, 4]

ch02.YangRouChuan.isVegetarian   (Abstract Method)
   [YangRouChuan.java, 7]

ch02.YangRouChuan.onlyOnions   (Abstract Method)
   [YangRouChuan.java, 6]

ch02.YangRouChuan.toString   (Public Method)
   [YangRouChuan.java, 14]

ch02.YangRouChuan.YangRouChuan   (Public Constructor)
   [YangRouChuan.java, 9]

ch02.Zero   (Class)
   [NumD.java, 37]

ch02.Zucchini   (Class)
   [KaoRou.java, 110]

ch02.Zucchini.isVeggie   (Method)
   [KaoRou.java, 118]

ch02.Zucchini.kaoroujia   (Variable)
   [KaoRou.java, 112]

ch02.Zucchini.whatHolder   (Method)
   [KaoRou.java, 124]
                                                                     Page 12
                         Data Dictionary Summary Report
===============================================================================

ch02.Zucchini.Zucchini(KaoRou kaoroujia)   (Public Constructor)
   [KaoRou.java, 113]

ch02.Zucchini.Zucchini.kaoroujia   (Parameter)
   [KaoRou.java, 113]

ch03   (Package)
   [PizzaD.java, 1]

ch03.Anchovy   (Class)
   [PizzaD.java, 96]

ch03.Anchovy.Anchovy(PizzaD _p)   (Public Constructor)
   [PizzaD.java, 99]

ch03.Anchovy.Anchovy._p   (Parameter)
   [PizzaD.java, 99]

ch03.Anchovy.p   (Variable)
   [PizzaD.java, 98]

ch03.Anchovy.remA   (Method)
   [PizzaD.java, 104]

ch03.Anchovy.subAwC   (Method)
   [PizzaD.java, 118]

ch03.Anchovy.topAwC   (Method)
   [PizzaD.java, 112]

ch03.Cheese   (Class)
   [PizzaD.java, 37]

ch03.Cheese.Cheese(PizzaD _p)   (Public Constructor)
   [PizzaD.java, 40]

ch03.Cheese.Cheese._p   (Parameter)
   [PizzaD.java, 40]

ch03.Cheese.p   (Variable)
   [PizzaD.java, 39]

ch03.Cheese.remA   (Method)
   [PizzaD.java, 45]

ch03.Cheese.subAwC   (Method)
   [PizzaD.java, 57]

ch03.Cheese.topAwC   (Method)
   [PizzaD.java, 51]

ch03.Crust   (Class)
   [PizzaD.java, 13]
                                                                     Page 13
                         Data Dictionary Summary Report
===============================================================================

ch03.Crust.remA   (Method)
   [PizzaD.java, 16]

ch03.Crust.subAwC   (Method)
   [PizzaD.java, 28]

ch03.Crust.topAwC   (Method)
   [PizzaD.java, 22]

ch03.Olive   (Class)
   [PizzaD.java, 67]

ch03.Olive.Olive(PizzaD _p)   (Public Constructor)
   [PizzaD.java, 70]

ch03.Olive.Olive._p   (Parameter)
   [PizzaD.java, 70]

ch03.Olive.p   (Variable)
   [PizzaD.java, 69]

ch03.Olive.remA   (Method)
   [PizzaD.java, 75]

ch03.Olive.subAwC   (Method)
   [PizzaD.java, 87]

ch03.Olive.topAwC   (Method)
   [PizzaD.java, 81]

ch03.PizzaD   (Public Abstract Class)
   [PizzaD.java, 4]

ch03.PizzaD.remA   (Abstract Method)
   [PizzaD.java, 5]

ch03.PizzaD.subAwC   (Abstract Method)
   [PizzaD.java, 7]

ch03.PizzaD.topAwC   (Abstract Method)
   [PizzaD.java, 6]

ch03.Sausage   (Class)
   [PizzaD.java, 127]

ch03.Sausage.p   (Variable)
   [PizzaD.java, 129]

ch03.Sausage.remA   (Method)
   [PizzaD.java, 135]

ch03.Sausage.Sausage(PizzaD _p)   (Public Constructor)
   [PizzaD.java, 130]
                                                                     Page 14
                         Data Dictionary Summary Report
===============================================================================

ch03.Sausage.Sausage._p   (Parameter)
   [PizzaD.java, 130]

ch03.Sausage.subAwC   (Method)
   [PizzaD.java, 147]

ch03.Sausage.topAwC   (Method)
   [PizzaD.java, 141]

ch03.Spinach   (Class)
   [PizzaD.java, 164]

ch03.Spinach.p   (Variable)
   [PizzaD.java, 166]

ch03.Spinach.remA   (Method)
   [PizzaD.java, 172]

ch03.Spinach.Spinach(PizzaD _p)   (Public Constructor)
   [PizzaD.java, 167]

ch03.Spinach.Spinach._p   (Parameter)
   [PizzaD.java, 167]

ch03.Spinach.subAwC   (Method)
   [PizzaD.java, 184]

ch03.Spinach.topAwC   (Method)
   [PizzaD.java, 178]

ch04   (Package)
   [YangRouChuan.java, 1]

ch04.IsVegetarianV   (Class)
   [YangRouChuan.java, 20]

ch04.IsVegetarianV.forLamb(YangRouChuan y)   (Method)
   [YangRouChuan.java, 27]

ch04.IsVegetarianV.forLamb.y   (Parameter)
   [YangRouChuan.java, 27]

ch04.IsVegetarianV.forOnion(YangRouChuan y)   (Method)
   [YangRouChuan.java, 24]

ch04.IsVegetarianV.forOnion.y   (Parameter)
   [YangRouChuan.java, 24]

ch04.IsVegetarianV.forSkewer   (Method)
   [YangRouChuan.java, 21]

ch04.IsVegetarianV.forTomato(YangRouChuan y)   (Method)
   [YangRouChuan.java, 30]
                                                                     Page 15
                         Data Dictionary Summary Report
===============================================================================

ch04.IsVegetarianV.forTomato.y   (Parameter)
   [YangRouChuan.java, 30]

ch04.Lamb   (Class)
   [YangRouChuan.java, 89]

ch04.Lamb.isVegetarian   (Method)
   [YangRouChuan.java, 104]

ch04.Lamb.Lamb(YangRouChuan _y)   (Public Constructor)
   [YangRouChuan.java, 92]

ch04.Lamb.Lamb._y   (Parameter)
   [YangRouChuan.java, 92]

ch04.Lamb.onlyOnions   (Method)
   [YangRouChuan.java, 98]

ch04.Lamb.y   (Variable)
   [YangRouChuan.java, 91]

ch04.Onion   (Class)
   [YangRouChuan.java, 67]

ch04.Onion.isVegetarian   (Method)
   [YangRouChuan.java, 81]

ch04.Onion.Onion(YangRouChuan _s)   (Public Constructor)
   [YangRouChuan.java, 70]

ch04.Onion.Onion._s   (Parameter)
   [YangRouChuan.java, 70]

ch04.Onion.onlyOnions   (Method)
   [YangRouChuan.java, 75]

ch04.Onion.s1   (Variable)
   [YangRouChuan.java, 68]

ch04.OnlyOnionsV   (Class)
   [YangRouChuan.java, 5]

ch04.OnlyOnionsV.forLamb(YangRouChuan y)   (Method)
   [YangRouChuan.java, 12]

ch04.OnlyOnionsV.forLamb.y   (Parameter)
   [YangRouChuan.java, 12]

ch04.OnlyOnionsV.forOnion(YangRouChuan y)   (Method)
   [YangRouChuan.java, 9]

ch04.OnlyOnionsV.forOnion.y   (Parameter)
   [YangRouChuan.java, 9]
                                                                     Page 16
                         Data Dictionary Summary Report
===============================================================================

ch04.OnlyOnionsV.forSkewer   (Method)
   [YangRouChuan.java, 6]

ch04.OnlyOnionsV.forTomato(YangRouChuan y)   (Method)
   [YangRouChuan.java, 15]

ch04.OnlyOnionsV.forTomato.y   (Parameter)
   [YangRouChuan.java, 15]

ch04.Skewer   (Class)
   [YangRouChuan.java, 49]

ch04.Skewer.isVegetarian   (Method)
   [YangRouChuan.java, 58]

ch04.Skewer.onlyOnions   (Method)
   [YangRouChuan.java, 52]

ch04.Tomato   (Class)
   [YangRouChuan.java, 111]

ch04.Tomato.isVegetarian   (Method)
   [YangRouChuan.java, 125]

ch04.Tomato.onlyOnions   (Method)
   [YangRouChuan.java, 119]

ch04.Tomato.Tomato(YangRouChuan _y)   (Public Constructor)
   [YangRouChuan.java, 114]

ch04.Tomato.Tomato._y   (Parameter)
   [YangRouChuan.java, 114]

ch04.Tomato.y   (Variable)
   [YangRouChuan.java, 113]

ch04.YangRouChuan   (Public Abstract Class)
   [YangRouChuan.java, 34]

ch04.YangRouChuan.isVegetarian   (Abstract Method)
   [YangRouChuan.java, 40]

ch04.YangRouChuan.ivFn   (Variable)
   [YangRouChuan.java, 38]

ch04.YangRouChuan.onlyOnions   (Abstract Method)
   [YangRouChuan.java, 39]

ch04.YangRouChuan.ooFn   (Variable)
   [YangRouChuan.java, 37]

ch05   (Package)
   [NumD.java, 1]
                                                                     Page 17
                         Data Dictionary Summary Report
===============================================================================

ch05.AnchovyFish   (Class)
   [PieD.java, 9]

ch05.AnchovyFish.equals(Object o)   (Public Method)
   [PieD.java, 12]

ch05.AnchovyFish.equals.o   (Parameter)
   [PieD.java, 12]

ch05.Bot   (Class)
   [PieD.java, 76]

ch05.Bot.remA   (Method)
   [PieD.java, 79]

ch05.Bot.remFish(FishD f)   (Method)
   [PieD.java, 85]

ch05.Bot.remFish.f   (Parameter)
   [PieD.java, 85]

ch05.Bot1   (Class)
   [PieDGeneral.java, 57]

ch05.Bot1.remA(Object o)   (Method)
   [PieDGeneral.java, 60]

ch05.Bot1.remA.o   (Parameter)
   [PieDGeneral.java, 60]

ch05.FishD   (Abstract Class)
   [PieD.java, 5]

ch05.FishD.equals(Object o)   (Public Abstract Method)
   [PieD.java, 6]

ch05.FishD.equals.o   (Parameter)
   [PieD.java, 6]

ch05.MoreThanOne   (Class)
   [NumD.java, 45]

ch05.MoreThanOne.equals(Object o)   (Public Method)
   [NumD.java, 53]

ch05.MoreThanOne.equals.o   (Parameter)
   [NumD.java, 53]

ch05.MoreThanOne.MoreThanOne(NumD _d)   (Public Constructor)
   [NumD.java, 48]

ch05.MoreThanOne.MoreThanOne._d   (Parameter)
   [NumD.java, 48]
                                                                     Page 18
                         Data Dictionary Summary Report
===============================================================================

ch05.MoreThanOne.predecessor   (Variable)
   [NumD.java, 47]

ch05.NumD   (Public Abstract Class)
   [NumD.java, 31]

ch05.PieD   (Public Abstract Class)
   [PieD.java, 67]

ch05.PieD.raFn   (Variable)
   [PieD.java, 70]

ch05.PieD.remA   (Abstract Method)
   [PieD.java, 72]

ch05.PieD.remFish(FishD f)   (Abstract Method)
   [PieD.java, 73]

ch05.PieD.remFish.f   (Parameter)
   [PieD.java, 73]

ch05.PieD.rfFn   (Variable)
   [PieD.java, 71]

ch05.PieDGeneral   (Public Abstract Class)
   [PieDGeneral.java, 50]

ch05.PieDGeneral.remA(Object o)   (Abstract Method)
   [PieDGeneral.java, 54]

ch05.PieDGeneral.remA.o   (Parameter)
   [PieDGeneral.java, 54]

ch05.PieDGeneral.remFn   (Variable)
   [PieDGeneral.java, 53]

ch05.RemAV   (Class)
   [PieD.java, 41]

ch05.RemAV.forBot   (Method)
   [PieD.java, 42]

ch05.RemAV.forTop(Object t,PieD r)   (Method)
   [PieD.java, 45]

ch05.RemAV.forTop.r   (Parameter)
   [PieD.java, 45]

ch05.RemAV.forTop.t   (Parameter)
   [PieD.java, 45]

ch05.RemFishInt   (Class)
   [PieDGeneral.java, 21]
                                                                     Page 19
                         Data Dictionary Summary Report
===============================================================================

ch05.RemFishInt.forBot(FishD f)   (Method)
   [PieDGeneral.java, 22]

ch05.RemFishInt.forBot.f   (Parameter)
   [PieDGeneral.java, 22]

ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)   (Method)
   [PieDGeneral.java, 26]

ch05.RemFishInt.forTop.f   (Parameter)
   [PieDGeneral.java, 26]

ch05.RemFishInt.forTop.r   (Parameter)
   [PieDGeneral.java, 26]

ch05.RemFishInt.forTop.t   (Parameter)
   [PieDGeneral.java, 26]

ch05.RemFishV   (Class)
   [PieD.java, 54]

ch05.RemFishV.forBot(FishD f)   (Method)
   [PieD.java, 55]

ch05.RemFishV.forBot.f   (Parameter)
   [PieD.java, 55]

ch05.RemFishV.forTop(Object t,PieD r,FishD f)   (Method)
   [PieD.java, 59]

ch05.RemFishV.forTop.f   (Parameter)
   [PieD.java, 59]

ch05.RemFishV.forTop.r   (Parameter)
   [PieD.java, 59]

ch05.RemFishV.forTop.t   (Parameter)
   [PieD.java, 59]

ch05.RemFishV1   (Class)
   [PieDGeneral.java, 6]

ch05.RemFishV1.forBot(FishD f)   (Method)
   [PieDGeneral.java, 7]

ch05.RemFishV1.forBot.f   (Parameter)
   [PieDGeneral.java, 7]

ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)   (Method)
   [PieDGeneral.java, 11]

ch05.RemFishV1.forTop.f   (Parameter)
   [PieDGeneral.java, 11]
                                                                     Page 20
                         Data Dictionary Summary Report
===============================================================================

ch05.RemFishV1.forTop.r   (Parameter)
   [PieDGeneral.java, 11]

ch05.RemFishV1.forTop.t   (Parameter)
   [PieDGeneral.java, 11]

ch05.RemV   (Class)
   [PieDGeneral.java, 37]

ch05.RemV.forBot(Object f)   (Method)
   [PieDGeneral.java, 38]

ch05.RemV.forBot.f   (Parameter)
   [PieDGeneral.java, 38]

ch05.RemV.forTop(Object t,PieDGeneral r,Object f)   (Method)
   [PieDGeneral.java, 42]

ch05.RemV.forTop.f   (Parameter)
   [PieDGeneral.java, 42]

ch05.RemV.forTop.r   (Parameter)
   [PieDGeneral.java, 42]

ch05.RemV.forTop.t   (Parameter)
   [PieDGeneral.java, 42]

ch05.SalmonFish   (Class)
   [PieD.java, 19]

ch05.SalmonFish.equals(Object o)   (Public Method)
   [PieD.java, 22]

ch05.SalmonFish.equals.o   (Parameter)
   [PieD.java, 22]

ch05.Top   (Class)
   [PieD.java, 93]

ch05.Top.r   (Variable)
   [PieD.java, 96]

ch05.Top.remA   (Method)
   [PieD.java, 104]

ch05.Top.remFish(FishD f)   (Method)
   [PieD.java, 110]

ch05.Top.remFish.f   (Parameter)
   [PieD.java, 110]

ch05.Top.t   (Variable)
   [PieD.java, 95]
                                                                     Page 21
                         Data Dictionary Summary Report
===============================================================================

ch05.Top.Top(Object t,PieD r)   (Public Constructor)
   [PieD.java, 97]

ch05.Top.Top.r   (Parameter)
   [PieD.java, 97]

ch05.Top.Top.t   (Parameter)
   [PieD.java, 97]

ch05.Top1   (Class)
   [PieDGeneral.java, 67]

ch05.Top1.r   (Variable)
   [PieDGeneral.java, 70]

ch05.Top1.remA(Object f)   (Method)
   [PieDGeneral.java, 77]

ch05.Top1.remA.f   (Parameter)
   [PieDGeneral.java, 77]

ch05.Top1.t   (Variable)
   [PieDGeneral.java, 69]

ch05.Top1.Top1(Object t,PieDGeneral r)   (Public Constructor)
   [PieDGeneral.java, 71]

ch05.Top1.Top1.r   (Parameter)
   [PieDGeneral.java, 71]

ch05.Top1.Top1.t   (Parameter)
   [PieDGeneral.java, 71]

ch05.TunaFish   (Class)
   [PieD.java, 29]

ch05.TunaFish.equals(Object o)   (Public Method)
   [PieD.java, 32]

ch05.TunaFish.equals.o   (Parameter)
   [PieD.java, 32]

ch05.Zero   (Class)
   [NumD.java, 37]

ch05.Zero.equals(Object o)   (Public Method)
   [NumD.java, 38]

ch05.Zero.equals.o   (Parameter)
   [NumD.java, 38]

ch051   (Package)
   [PieD.java, 1]
                                                                     Page 22
                         Data Dictionary Summary Report
===============================================================================

ch051.AnchovyFish   (Class)
   [PieD.java, 10]

ch051.AnchovyFish.equals(Object o)   (Public Method)
   [PieD.java, 13]

ch051.AnchovyFish.equals.o   (Parameter)
   [PieD.java, 13]

ch051.Bot   (Class)
   [PieD.java, 141]

ch051.Bot.remA(Object o)   (Method)
   [PieD.java, 144]

ch051.Bot.remA.o   (Parameter)
   [PieD.java, 144]

ch051.Bot.substFish(Object n,Object o)   (Method)
   [PieD.java, 150]

ch051.Bot.substFish.n   (Parameter)
   [PieD.java, 150]

ch051.Bot.substFish.o   (Parameter)
   [PieD.java, 150]

ch051.FishD   (Abstract Class)
   [PieD.java, 6]

ch051.FishD.equals(Object o)   (Public Abstract Method)
   [PieD.java, 7]

ch051.FishD.equals.o   (Parameter)
   [PieD.java, 7]

ch051.PieD   (Public Abstract Class)
   [PieD.java, 132]

ch051.PieD.remA(Object o)   (Abstract Method)
   [PieD.java, 137]

ch051.PieD.remA.o   (Parameter)
   [PieD.java, 137]

ch051.PieD.remFn   (Variable)
   [PieD.java, 135]

ch051.PieD.subFn   (Variable)
   [PieD.java, 136]

ch051.PieD.substFish(Object n,Object o)   (Abstract Method)
   [PieD.java, 138]
                                                                     Page 23
                         Data Dictionary Summary Report
===============================================================================

ch051.PieD.substFish.n   (Parameter)
   [PieD.java, 138]

ch051.PieD.substFish.o   (Parameter)
   [PieD.java, 138]

ch051.RemFishInt   (Class)
   [PieD.java, 57]

ch051.RemFishInt.forBot(FishD f)   (Method)
   [PieD.java, 58]

ch051.RemFishInt.forBot.f   (Parameter)
   [PieD.java, 58]

ch051.RemFishInt.forTop(Object t,PieD r,Integer f)   (Method)
   [PieD.java, 62]

ch051.RemFishInt.forTop.f   (Parameter)
   [PieD.java, 62]

ch051.RemFishInt.forTop.r   (Parameter)
   [PieD.java, 62]

ch051.RemFishInt.forTop.t   (Parameter)
   [PieD.java, 62]

ch051.RemFishV   (Class)
   [PieD.java, 42]

ch051.RemFishV.forBot(FishD f)   (Method)
   [PieD.java, 43]

ch051.RemFishV.forBot.f   (Parameter)
   [PieD.java, 43]

ch051.RemFishV.forTop(Object t,PieD r,FishD f)   (Method)
   [PieD.java, 47]

ch051.RemFishV.forTop.f   (Parameter)
   [PieD.java, 47]

ch051.RemFishV.forTop.r   (Parameter)
   [PieD.java, 47]

ch051.RemFishV.forTop.t   (Parameter)
   [PieD.java, 47]

ch051.RemV   (Class)
   [PieD.java, 73]

ch051.RemV.forBot(Object f)   (Method)
   [PieD.java, 74]
                                                                     Page 24
                         Data Dictionary Summary Report
===============================================================================

ch051.RemV.forBot.f   (Parameter)
   [PieD.java, 74]

ch051.RemV.forTop(Object t,PieD r,Object f)   (Method)
   [PieD.java, 78]

ch051.RemV.forTop.f   (Parameter)
   [PieD.java, 78]

ch051.RemV.forTop.r   (Parameter)
   [PieD.java, 78]

ch051.RemV.forTop.t   (Parameter)
   [PieD.java, 78]

ch051.SalmonFish   (Class)
   [PieD.java, 20]

ch051.SalmonFish.equals(Object o)   (Public Method)
   [PieD.java, 23]

ch051.SalmonFish.equals.o   (Parameter)
   [PieD.java, 23]

ch051.SubstFishV   (Class)
   [PieD.java, 89]

ch051.SubstFishV.forBot(FishD n,FishD o)   (Method)
   [PieD.java, 90]

ch051.SubstFishV.forBot.n   (Parameter)
   [PieD.java, 90]

ch051.SubstFishV.forBot.o   (Parameter)
   [PieD.java, 90]

ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)   (Method)
   [PieD.java, 94]

ch051.SubstFishV.forTop.n   (Parameter)
   [PieD.java, 94]

ch051.SubstFishV.forTop.o   (Parameter)
   [PieD.java, 94]

ch051.SubstFishV.forTop.r   (Parameter)
   [PieD.java, 94]

ch051.SubstFishV.forTop.t   (Parameter)
   [PieD.java, 94]

ch051.SubstIntV   (Class)
   [PieD.java, 104]
                                                                     Page 25
                         Data Dictionary Summary Report
===============================================================================

ch051.SubstIntV.forBot(Integer n,Integer o)   (Method)
   [PieD.java, 105]

ch051.SubstIntV.forBot.n   (Parameter)
   [PieD.java, 105]

ch051.SubstIntV.forBot.o   (Parameter)
   [PieD.java, 105]

ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)   (Method)
   [PieD.java, 109]

ch051.SubstIntV.forTop.n   (Parameter)
   [PieD.java, 109]

ch051.SubstIntV.forTop.o   (Parameter)
   [PieD.java, 109]

ch051.SubstIntV.forTop.r   (Parameter)
   [PieD.java, 109]

ch051.SubstIntV.forTop.t   (Parameter)
   [PieD.java, 109]

ch051.SubstV   (Class)
   [PieD.java, 118]

ch051.SubstV.forBot(Object n,Object o)   (Method)
   [PieD.java, 119]

ch051.SubstV.forBot.n   (Parameter)
   [PieD.java, 119]

ch051.SubstV.forBot.o   (Parameter)
   [PieD.java, 119]

ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)   (Method)
   [PieD.java, 123]

ch051.SubstV.forTop.n   (Parameter)
   [PieD.java, 123]

ch051.SubstV.forTop.o   (Parameter)
   [PieD.java, 123]

ch051.SubstV.forTop.r   (Parameter)
   [PieD.java, 123]

ch051.SubstV.forTop.t   (Parameter)
   [PieD.java, 123]

ch051.Top   (Class)
   [PieD.java, 157]
                                                                     Page 26
                         Data Dictionary Summary Report
===============================================================================

ch051.Top.r   (Variable)
   [PieD.java, 160]

ch051.Top.remA(Object f)   (Method)
   [PieD.java, 167]

ch051.Top.remA.f   (Parameter)
   [PieD.java, 167]

ch051.Top.substFish(Object n,Object o)   (Method)
   [PieD.java, 172]

ch051.Top.substFish.n   (Parameter)
   [PieD.java, 172]

ch051.Top.substFish.o   (Parameter)
   [PieD.java, 172]

ch051.Top.t   (Variable)
   [PieD.java, 159]

ch051.Top.Top(Object t,PieD r)   (Public Constructor)
   [PieD.java, 161]

ch051.Top.Top.r   (Parameter)
   [PieD.java, 161]

ch051.Top.Top.t   (Parameter)
   [PieD.java, 161]

ch051.TunaFish   (Class)
   [PieD.java, 30]

ch051.TunaFish.equals(Object o)   (Public Method)
   [PieD.java, 33]

ch051.TunaFish.equals.o   (Parameter)
   [PieD.java, 33]

ch06   (Package)
   [PieD.java, 1]

ch06.AnchovyFish   (Class)
   [PieD.java, 10]

ch06.AnchovyFish.equals(Object o)   (Public Method)
   [PieD.java, 13]

ch06.AnchovyFish.equals.o   (Parameter)
   [PieD.java, 13]

ch06.Bot   (Class)
   [PieD.java, 141]
                                                                     Page 27
                         Data Dictionary Summary Report
===============================================================================

ch06.Bot.remA(RemV remFn,Object o)   (Method)
   [PieD.java, 144]

ch06.Bot.remA.o   (Parameter)
   [PieD.java, 144]

ch06.Bot.remA.remFn   (Parameter)
   [PieD.java, 144]

ch06.Bot.substFish(SubstV subFn,Object n,Object o)   (Method)
   [PieD.java, 150]

ch06.Bot.substFish.n   (Parameter)
   [PieD.java, 150]

ch06.Bot.substFish.o   (Parameter)
   [PieD.java, 150]

ch06.Bot.substFish.subFn   (Parameter)
   [PieD.java, 150]

ch06.FishD   (Abstract Class)
   [PieD.java, 6]

ch06.FishD.equals(Object o)   (Public Abstract Method)
   [PieD.java, 7]

ch06.FishD.equals.o   (Parameter)
   [PieD.java, 7]

ch06.PieD   (Public Abstract Class)
   [PieD.java, 132]

ch06.PieD.remA(RemV remFn,Object o)   (Abstract Method)
   [PieD.java, 137]

ch06.PieD.remA.o   (Parameter)
   [PieD.java, 137]

ch06.PieD.remA.remFn   (Parameter)
   [PieD.java, 137]

ch06.PieD.substFish(SubstV subFn,Object n,Object o)   (Abstract Method)
   [PieD.java, 138]

ch06.PieD.substFish.n   (Parameter)
   [PieD.java, 138]

ch06.PieD.substFish.o   (Parameter)
   [PieD.java, 138]

ch06.PieD.substFish.subFn   (Parameter)
   [PieD.java, 138]
                                                                     Page 28
                         Data Dictionary Summary Report
===============================================================================

ch06.RemV   (Class)
   [PieD.java, 73]

ch06.RemV.forBot(Object f)   (Method)
   [PieD.java, 74]

ch06.RemV.forBot.f   (Parameter)
   [PieD.java, 74]

ch06.RemV.forTop(Object t,PieD r,Object f)   (Method)
   [PieD.java, 78]

ch06.RemV.forTop.f   (Parameter)
   [PieD.java, 78]

ch06.RemV.forTop.r   (Parameter)
   [PieD.java, 78]

ch06.RemV.forTop.t   (Parameter)
   [PieD.java, 78]

ch06.SalmonFish   (Class)
   [PieD.java, 20]

ch06.SalmonFish.equals(Object o)   (Public Method)
   [PieD.java, 23]

ch06.SalmonFish.equals.o   (Parameter)
   [PieD.java, 23]

ch06.SubstV   (Class)
   [PieD.java, 118]

ch06.SubstV.forBot(Object n,Object o)   (Method)
   [PieD.java, 119]

ch06.SubstV.forBot.n   (Parameter)
   [PieD.java, 119]

ch06.SubstV.forBot.o   (Parameter)
   [PieD.java, 119]

ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)   (Method)
   [PieD.java, 123]

ch06.SubstV.forTop.n   (Parameter)
   [PieD.java, 123]

ch06.SubstV.forTop.o   (Parameter)
   [PieD.java, 123]

ch06.SubstV.forTop.r   (Parameter)
   [PieD.java, 123]
                                                                     Page 29
                         Data Dictionary Summary Report
===============================================================================

ch06.SubstV.forTop.t   (Parameter)
   [PieD.java, 123]

ch06.Top   (Class)
   [PieD.java, 157]

ch06.Top.r   (Variable)
   [PieD.java, 160]

ch06.Top.remA(RemV remFn,Object f)   (Method)
   [PieD.java, 167]

ch06.Top.remA.f   (Parameter)
   [PieD.java, 167]

ch06.Top.remA.remFn   (Parameter)
   [PieD.java, 167]

ch06.Top.substFish(SubstV subFn,Object n,Object o)   (Method)
   [PieD.java, 172]

ch06.Top.substFish.n   (Parameter)
   [PieD.java, 172]

ch06.Top.substFish.o   (Parameter)
   [PieD.java, 172]

ch06.Top.substFish.subFn   (Parameter)
   [PieD.java, 172]

ch06.Top.t   (Variable)
   [PieD.java, 159]

ch06.Top.Top(Object t,PieD r)   (Public Constructor)
   [PieD.java, 161]

ch06.Top.Top.r   (Parameter)
   [PieD.java, 161]

ch06.Top.Top.t   (Parameter)
   [PieD.java, 161]

ch06.TunaFish   (Class)
   [PieD.java, 30]

ch06.TunaFish.equals(Object o)   (Public Method)
   [PieD.java, 33]

ch06.TunaFish.equals.o   (Parameter)
   [PieD.java, 33]

ch061   (Package)
   [PieD.java, 1]
                                                                     Page 30
                         Data Dictionary Summary Report
===============================================================================

ch061.AnchovyFish   (Class)
   [PieD.java, 10]

ch061.AnchovyFish.equals(Object o)   (Public Method)
   [PieD.java, 13]

ch061.AnchovyFish.equals.o   (Parameter)
   [PieD.java, 13]

ch061.Bot   (Class)
   [PieD.java, 92]

ch061.Bot.Bot(Object _t,PieD _r)   (Public Constructor)
   [PieD.java, 96]

ch061.Bot.Bot._r   (Parameter)
   [PieD.java, 96]

ch061.Bot.Bot._t   (Parameter)
   [PieD.java, 96]

ch061.Bot.r   (Variable)
   [PieD.java, 95]

ch061.Bot.remA(RemV remFn)   (Method)
   [PieD.java, 102]

ch061.Bot.remA.remFn   (Parameter)
   [PieD.java, 102]

ch061.Bot.substFish(SubstV subFn)   (Method)
   [PieD.java, 108]

ch061.Bot.substFish.subFn   (Parameter)
   [PieD.java, 108]

ch061.Bot.t   (Variable)
   [PieD.java, 94]

ch061.FishD   (Abstract Class)
   [PieD.java, 6]

ch061.FishD.equals(Object o)   (Public Abstract Method)
   [PieD.java, 7]

ch061.FishD.equals.o   (Parameter)
   [PieD.java, 7]

ch061.PieD   (Public Abstract Class)
   [PieD.java, 83]

ch061.PieD.remA(RemV remFn)   (Abstract Method)
   [PieD.java, 88]
                                                                     Page 31
                         Data Dictionary Summary Report
===============================================================================

ch061.PieD.remA.remFn   (Parameter)
   [PieD.java, 88]

ch061.PieD.substFish(SubstV subFn)   (Abstract Method)
   [PieD.java, 89]

ch061.PieD.substFish.subFn   (Parameter)
   [PieD.java, 89]

ch061.RemV   (Class)
   [PieD.java, 42]

ch061.RemV.forBot(Object t,PieD r)   (Method)
   [PieD.java, 48]

ch061.RemV.forBot.r   (Parameter)
   [PieD.java, 48]

ch061.RemV.forBot.t   (Parameter)
   [PieD.java, 48]

ch061.RemV.forTop(Object t,PieD r)   (Method)
   [PieD.java, 52]

ch061.RemV.forTop.r   (Parameter)
   [PieD.java, 52]

ch061.RemV.forTop.t   (Parameter)
   [PieD.java, 52]

ch061.RemV.o   (Variable)
   [PieD.java, 43]

ch061.RemV.RemV(Object _o)   (Public Constructor)
   [PieD.java, 44]

ch061.RemV.RemV._o   (Parameter)
   [PieD.java, 44]

ch061.SalmonFish   (Class)
   [PieD.java, 20]

ch061.SalmonFish.equals(Object o)   (Public Method)
   [PieD.java, 23]

ch061.SalmonFish.equals.o   (Parameter)
   [PieD.java, 23]

ch061.SubstV   (Class)
   [PieD.java, 62]

ch061.SubstV.forBot(Object t,PieD r)   (Method)
   [PieD.java, 70]
                                                                     Page 32
                         Data Dictionary Summary Report
===============================================================================

ch061.SubstV.forBot.r   (Parameter)
   [PieD.java, 70]

ch061.SubstV.forBot.t   (Parameter)
   [PieD.java, 70]

ch061.SubstV.forTop(Object t,PieD r)   (Method)
   [PieD.java, 74]

ch061.SubstV.forTop.r   (Parameter)
   [PieD.java, 74]

ch061.SubstV.forTop.t   (Parameter)
   [PieD.java, 74]

ch061.SubstV.n   (Variable)
   [PieD.java, 63]

ch061.SubstV.o   (Variable)
   [PieD.java, 64]

ch061.SubstV.SubstV(Object _n,Object _o)   (Public Constructor)
   [PieD.java, 65]

ch061.SubstV.SubstV._n   (Parameter)
   [PieD.java, 65]

ch061.SubstV.SubstV._o   (Parameter)
   [PieD.java, 65]

ch061.Top   (Class)
   [PieD.java, 115]

ch061.Top.r   (Variable)
   [PieD.java, 118]

ch061.Top.remA(RemV remFn)   (Method)
   [PieD.java, 125]

ch061.Top.remA.remFn   (Parameter)
   [PieD.java, 125]

ch061.Top.substFish(SubstV subFn)   (Method)
   [PieD.java, 130]

ch061.Top.substFish.subFn   (Parameter)
   [PieD.java, 130]

ch061.Top.t   (Variable)
   [PieD.java, 117]

ch061.Top.Top(Object t,PieD r)   (Public Constructor)
   [PieD.java, 119]
                                                                     Page 33
                         Data Dictionary Summary Report
===============================================================================

ch061.Top.Top.r   (Parameter)
   [PieD.java, 119]

ch061.Top.Top.t   (Parameter)
   [PieD.java, 119]

ch061.TunaFish   (Class)
   [PieD.java, 30]

ch061.TunaFish.equals(Object o)   (Public Method)
   [PieD.java, 33]

ch061.TunaFish.equals.o   (Parameter)
   [PieD.java, 33]

ch062   (Package)
   [PieD.java, 1]

ch062.Bot   (Class)
   [PieD.java, 93]

ch062.Bot.accept(PieVistor1 ask)   (Method)
   [PieD.java, 96]

ch062.Bot.accept.ask   (Parameter)
   [PieD.java, 96]

ch062.LtSubstV   (Class)
   [PieD.java, 52]

ch062.LtSubstV.c   (Variable)
   [PieD.java, 54]

ch062.LtSubstV.forBot   (Public Method)
   [PieD.java, 64]

ch062.LtSubstV.forTop(Object t,PieD r)   (Public Method)
   [PieD.java, 70]

ch062.LtSubstV.forTop.r   (Parameter)
   [PieD.java, 70]

ch062.LtSubstV.forTop.t   (Parameter)
   [PieD.java, 70]

ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)   (Public Constructor)
   [PieD.java, 57]

ch062.LtSubstV.LtSubstV._c   (Parameter)
   [PieD.java, 57]

ch062.LtSubstV.LtSubstV._n   (Parameter)
   [PieD.java, 57]
                                                                     Page 34
                         Data Dictionary Summary Report
===============================================================================

ch062.LtSubstV.LtSubstV._o   (Parameter)
   [PieD.java, 57]

ch062.LtSubstV.n   (Variable)
   [PieD.java, 55]

ch062.LtSubstV.o   (Variable)
   [PieD.java, 56]

ch062.PieD   (Public Abstract Class)
   [PieD.java, 85]

ch062.PieD.accept(PieVistor1 ask)   (Abstract Method)
   [PieD.java, 90]

ch062.PieD.accept.ask   (Parameter)
   [PieD.java, 90]

ch062.PieVistor1   (Interface)
   [PieD.java, 5]

ch062.PieVistor1.forBot   (Abstract Method)
   [PieD.java, 6]

ch062.PieVistor1.forTop(Object t,PieD r)   (Abstract Method)
   [PieD.java, 7]

ch062.PieVistor1.forTop.r   (Parameter)
   [PieD.java, 7]

ch062.PieVistor1.forTop.t   (Parameter)
   [PieD.java, 7]

ch062.RemV   (Class)
   [PieD.java, 10]

ch062.RemV.forBot   (Public Method)
   [PieD.java, 17]

ch062.RemV.forTop(Object t,PieD r)   (Public Method)
   [PieD.java, 21]

ch062.RemV.forTop.r   (Parameter)
   [PieD.java, 21]

ch062.RemV.forTop.t   (Parameter)
   [PieD.java, 21]

ch062.RemV.o   (Variable)
   [PieD.java, 11]

ch062.RemV.RemV(Object _o)   (Public Constructor)
   [PieD.java, 12]
                                                                     Page 35
                         Data Dictionary Summary Report
===============================================================================

ch062.RemV.RemV._o   (Parameter)
   [PieD.java, 12]

ch062.SubstV   (Class)
   [PieD.java, 31]

ch062.SubstV.forBot   (Public Method)
   [PieD.java, 39]

ch062.SubstV.forTop(Object t,PieD r)   (Public Method)
   [PieD.java, 43]

ch062.SubstV.forTop.r   (Parameter)
   [PieD.java, 43]

ch062.SubstV.forTop.t   (Parameter)
   [PieD.java, 43]

ch062.SubstV.n   (Variable)
   [PieD.java, 32]

ch062.SubstV.o   (Variable)
   [PieD.java, 33]

ch062.SubstV.SubstV(Object _n,Object _o)   (Public Constructor)
   [PieD.java, 34]

ch062.SubstV.SubstV._n   (Parameter)
   [PieD.java, 34]

ch062.SubstV.SubstV._o   (Parameter)
   [PieD.java, 34]

ch062.Top   (Class)
   [PieD.java, 104]

ch062.Top.accept(PieVistor1 ask)   (Method)
   [PieD.java, 114]

ch062.Top.accept.ask   (Parameter)
   [PieD.java, 114]

ch062.Top.r   (Variable)
   [PieD.java, 107]

ch062.Top.t   (Variable)
   [PieD.java, 106]

ch062.Top.Top(Object t,PieD r)   (Public Constructor)
   [PieD.java, 108]

ch062.Top.Top.r   (Parameter)
   [PieD.java, 108]
                                                                     Page 36
                         Data Dictionary Summary Report
===============================================================================

ch062.Top.Top.t   (Parameter)
   [PieD.java, 108]

ch07   (Package)
   [FruitD.java, 1]

ch07.Apple   (Class)
   [FruitD.java, 11]

ch07.Apple.equals(Object o)   (Public Method)
   [FruitD.java, 12]

ch07.Apple.equals.o   (Parameter)
   [FruitD.java, 12]

ch07.BHasFruitV   (Class)
   [TreeD.java, 153]

ch07.BHasFruitV.forBud   (Public Method)
   [TreeD.java, 155]

ch07.BHasFruitV.forFlat(FruitD f,TreeD t)   (Public Method)
   [TreeD.java, 161]

ch07.BHasFruitV.forFlat.f   (Parameter)
   [TreeD.java, 161]

ch07.BHasFruitV.forFlat.t   (Parameter)
   [TreeD.java, 161]

ch07.BHasFruitV.forSplit(TreeD l,TreeD t)   (Public Method)
   [TreeD.java, 167]

ch07.BHasFruitV.forSplit.l   (Parameter)
   [TreeD.java, 167]

ch07.BHasFruitV.forSplit.t   (Parameter)
   [TreeD.java, 167]

ch07.BIsFlatV   (Class)
   [TreeD.java, 98]

ch07.BIsFlatV.forBud   (Public Method)
   [TreeD.java, 101]

ch07.BIsFlatV.forFlat(FruitD f,TreeD t)   (Public Method)
   [TreeD.java, 107]

ch07.BIsFlatV.forFlat.f   (Parameter)
   [TreeD.java, 107]

ch07.BIsFlatV.forFlat.t   (Parameter)
   [TreeD.java, 107]
                                                                     Page 37
                         Data Dictionary Summary Report
===============================================================================

ch07.BIsFlatV.forSplit(TreeD l,TreeD t)   (Public Method)
   [TreeD.java, 113]

ch07.BIsFlatV.forSplit.l   (Parameter)
   [TreeD.java, 113]

ch07.BIsFlatV.forSplit.t   (Parameter)
   [TreeD.java, 113]

ch07.BIsSplitV   (Class)
   [TreeD.java, 121]

ch07.BIsSplitV.forBud   (Public Method)
   [TreeD.java, 124]

ch07.BIsSplitV.forFlat(FruitD f,TreeD t)   (Public Method)
   [TreeD.java, 130]

ch07.BIsSplitV.forFlat.f   (Parameter)
   [TreeD.java, 130]

ch07.BIsSplitV.forFlat.t   (Parameter)
   [TreeD.java, 130]

ch07.BIsSplitV.forSplit(TreeD l,TreeD t)   (Public Method)
   [TreeD.java, 136]

ch07.BIsSplitV.forSplit.l   (Parameter)
   [TreeD.java, 136]

ch07.BIsSplitV.forSplit.t   (Parameter)
   [TreeD.java, 136]

ch07.BTreeVisitorI   (Interface)
   [TreeD.java, 92]

ch07.BTreeVisitorI.forBud   (Abstract Method)
   [TreeD.java, 93]

ch07.BTreeVisitorI.forFlat(FruitD f,TreeD t)   (Abstract Method)
   [TreeD.java, 94]

ch07.BTreeVisitorI.forFlat.f   (Parameter)
   [TreeD.java, 94]

ch07.BTreeVisitorI.forFlat.t   (Parameter)
   [TreeD.java, 94]

ch07.BTreeVisitorI.forSplit(TreeD l,TreeD t)   (Abstract Method)
   [TreeD.java, 95]

ch07.BTreeVisitorI.forSplit.l   (Parameter)
   [TreeD.java, 95]
                                                                     Page 38
                         Data Dictionary Summary Report
===============================================================================

ch07.BTreeVisitorI.forSplit.t   (Parameter)
   [TreeD.java, 95]

ch07.Bud   (Class)
   [TreeD.java, 9]

ch07.Bud.accept(BTreeVisitorI ask)   (Method)
   [TreeD.java, 12]

ch07.Bud.accept(ITreeVisitorI ask)   (Method)
   [TreeD.java, 18]

ch07.Bud.accept(TTreeVisitorI ask)   (Method)
   [TreeD.java, 24]

ch07.Bud.accept.ask   (Parameter)
   [TreeD.java, 12]

ch07.Bud.accept.ask   (Parameter)
   [TreeD.java, 18]

ch07.Bud.accept.ask   (Parameter)
   [TreeD.java, 24]

ch07.Fig   (Class)
   [FruitD.java, 29]

ch07.Fig.equals(Object o)   (Public Method)
   [FruitD.java, 30]

ch07.Fig.equals.o   (Parameter)
   [FruitD.java, 30]

ch07.Flat   (Class)
   [TreeD.java, 31]

ch07.Flat.accept(BTreeVisitorI ask)   (Method)
   [TreeD.java, 43]

ch07.Flat.accept(ITreeVisitorI ask)   (Method)
   [TreeD.java, 49]

ch07.Flat.accept(TTreeVisitorI ask)   (Method)
   [TreeD.java, 55]

ch07.Flat.accept.ask   (Parameter)
   [TreeD.java, 43]

ch07.Flat.accept.ask   (Parameter)
   [TreeD.java, 49]

ch07.Flat.accept.ask   (Parameter)
   [TreeD.java, 55]
                                                                     Page 39
                         Data Dictionary Summary Report
===============================================================================

ch07.Flat.f   (Variable)
   [TreeD.java, 33]

ch07.Flat.Flat(FruitD _f,TreeD _t)   (Public Constructor)
   [TreeD.java, 36]

ch07.Flat.Flat._f   (Parameter)
   [TreeD.java, 36]

ch07.Flat.Flat._t   (Parameter)
   [TreeD.java, 36]

ch07.Flat.t   (Variable)
   [TreeD.java, 34]

ch07.FruitD   (Abstract Class)
   [FruitD.java, 3]

ch07.IHeightV   (Class)
   [TreeD.java, 173]

ch07.IHeightV.forBud   (Public Method)
   [TreeD.java, 176]

ch07.IHeightV.forFlat(FruitD f,TreeD t)   (Public Method)
   [TreeD.java, 182]

ch07.IHeightV.forFlat.f   (Parameter)
   [TreeD.java, 182]

ch07.IHeightV.forFlat.t   (Parameter)
   [TreeD.java, 182]

ch07.IHeightV.forSplit(TreeD l,TreeD t)   (Public Method)
   [TreeD.java, 188]

ch07.IHeightV.forSplit.l   (Parameter)
   [TreeD.java, 188]

ch07.IHeightV.forSplit.t   (Parameter)
   [TreeD.java, 188]

ch07.IOccursV   (Class)
   [TreeD.java, 197]

ch07.IOccursV.a   (Variable)
   [TreeD.java, 199]

ch07.IOccursV.forBud   (Public Method)
   [TreeD.java, 206]

ch07.IOccursV.forFlat(FruitD f,TreeD t)   (Public Method)
   [TreeD.java, 212]
                                                                     Page 40
                         Data Dictionary Summary Report
===============================================================================

ch07.IOccursV.forFlat.f   (Parameter)
   [TreeD.java, 212]

ch07.IOccursV.forFlat.t   (Parameter)
   [TreeD.java, 212]

ch07.IOccursV.forSplit(TreeD l,TreeD t)   (Public Method)
   [TreeD.java, 224]

ch07.IOccursV.forSplit.l   (Parameter)
   [TreeD.java, 224]

ch07.IOccursV.forSplit.t   (Parameter)
   [TreeD.java, 224]

ch07.IOccursV.IOccursV(FruitD _a)   (Public Constructor)
   [TreeD.java, 200]

ch07.IOccursV.IOccursV._a   (Parameter)
   [TreeD.java, 200]

ch07.ITreeVisitorI   (Interface)
   [TreeD.java, 145]

ch07.ITreeVisitorI.forBud   (Abstract Method)
   [TreeD.java, 146]

ch07.ITreeVisitorI.forFlat(FruitD f,TreeD t)   (Abstract Method)
   [TreeD.java, 147]

ch07.ITreeVisitorI.forFlat.f   (Parameter)
   [TreeD.java, 147]

ch07.ITreeVisitorI.forFlat.t   (Parameter)
   [TreeD.java, 147]

ch07.ITreeVisitorI.forSplit(TreeD l,TreeD t)   (Abstract Method)
   [TreeD.java, 148]

ch07.ITreeVisitorI.forSplit.l   (Parameter)
   [TreeD.java, 148]

ch07.ITreeVisitorI.forSplit.t   (Parameter)
   [TreeD.java, 148]

ch07.Lemon   (Class)
   [FruitD.java, 23]

ch07.Lemon.equals(Object o)   (Public Method)
   [FruitD.java, 24]

ch07.Lemon.equals.o   (Parameter)
   [FruitD.java, 24]
                                                                     Page 41
                         Data Dictionary Summary Report
===============================================================================

ch07.Peach   (Class)
   [FruitD.java, 5]

ch07.Peach.equals(Object o)   (Public Method)
   [FruitD.java, 6]

ch07.Peach.equals.o   (Parameter)
   [FruitD.java, 6]

ch07.Pear   (Class)
   [FruitD.java, 17]

ch07.Pear.equals(Object o)   (Public Method)
   [FruitD.java, 18]

ch07.Pear.equals.o   (Parameter)
   [FruitD.java, 18]

ch07.Split   (Class)
   [TreeD.java, 63]

ch07.Split.accept(BTreeVisitorI ask)   (Method)
   [TreeD.java, 74]

ch07.Split.accept(ITreeVisitorI ask)   (Method)
   [TreeD.java, 80]

ch07.Split.accept(TTreeVisitorI ask)   (Method)
   [TreeD.java, 86]

ch07.Split.accept.ask   (Parameter)
   [TreeD.java, 74]

ch07.Split.accept.ask   (Parameter)
   [TreeD.java, 80]

ch07.Split.accept.ask   (Parameter)
   [TreeD.java, 86]

ch07.Split.l   (Variable)
   [TreeD.java, 65]

ch07.Split.Split(TreeD _l,TreeD _t)   (Public Constructor)
   [TreeD.java, 67]

ch07.Split.Split._l   (Parameter)
   [TreeD.java, 67]

ch07.Split.Split._t   (Parameter)
   [TreeD.java, 67]

ch07.Split.t   (Variable)
   [TreeD.java, 66]
                                                                     Page 42
                         Data Dictionary Summary Report
===============================================================================

ch07.TreeD   (Abstract Class)
   [TreeD.java, 3]

ch07.TreeD.accept(BTreeVisitorI ask)   (Abstract Method)
   [TreeD.java, 4]

ch07.TreeD.accept(ITreeVisitorI ask)   (Abstract Method)
   [TreeD.java, 5]

ch07.TreeD.accept(TTreeVisitorI ask)   (Abstract Method)
   [TreeD.java, 6]

ch07.TreeD.accept.ask   (Parameter)
   [TreeD.java, 4]

ch07.TreeD.accept.ask   (Parameter)
   [TreeD.java, 5]

ch07.TreeD.accept.ask   (Parameter)
   [TreeD.java, 6]

ch07.TSubstsV   (Class)
   [TreeD.java, 238]

ch07.TSubstsV.forBud   (Public Method)
   [TreeD.java, 248]

ch07.TSubstsV.forFlat(FruitD f,TreeD t)   (Public Method)
   [TreeD.java, 254]

ch07.TSubstsV.forFlat.f   (Parameter)
   [TreeD.java, 254]

ch07.TSubstsV.forFlat.t   (Parameter)
   [TreeD.java, 254]

ch07.TSubstsV.forSplit(TreeD l,TreeD t)   (Public Method)
   [TreeD.java, 264]

ch07.TSubstsV.forSplit.l   (Parameter)
   [TreeD.java, 264]

ch07.TSubstsV.forSplit.t   (Parameter)
   [TreeD.java, 264]

ch07.TSubstsV.n   (Variable)
   [TreeD.java, 240]

ch07.TSubstsV.o   (Variable)
   [TreeD.java, 241]

ch07.TSubstsV.TSubstsV(FruitD _n,FruitD _o)   (Public Constructor)
   [TreeD.java, 242]
                                                                     Page 43
                         Data Dictionary Summary Report
===============================================================================

ch07.TSubstsV.TSubstsV._n   (Parameter)
   [TreeD.java, 242]

ch07.TSubstsV.TSubstsV._o   (Parameter)
   [TreeD.java, 242]

ch07.TTreeVisitorI   (Interface)
   [TreeD.java, 231]

ch07.TTreeVisitorI.forBud   (Abstract Method)
   [TreeD.java, 232]

ch07.TTreeVisitorI.forFlat(FruitD f,TreeD t)   (Abstract Method)
   [TreeD.java, 233]

ch07.TTreeVisitorI.forFlat.f   (Parameter)
   [TreeD.java, 233]

ch07.TTreeVisitorI.forFlat.t   (Parameter)
   [TreeD.java, 233]

ch07.TTreeVisitorI.forSplit(TreeD l,TreeD t)   (Abstract Method)
   [TreeD.java, 234]

ch07.TTreeVisitorI.forSplit.l   (Parameter)
   [TreeD.java, 234]

ch07.TTreeVisitorI.forSplit.t   (Parameter)
   [TreeD.java, 234]

ch071   (Package)
   [FruitD.java, 1]

ch071.Apple   (Class)
   [FruitD.java, 11]

ch071.Apple.equals(Object o)   (Public Method)
   [FruitD.java, 12]

ch071.Apple.equals.o   (Parameter)
   [FruitD.java, 12]

ch071.Bud   (Class)
   [TreeD.java, 8]

ch071.Bud.accept(TreeVisitorI ask)   (Method)
   [TreeD.java, 11]

ch071.Bud.accept.ask   (Parameter)
   [TreeD.java, 11]

ch071.Fig   (Class)
   [FruitD.java, 29]
                                                                     Page 44
                         Data Dictionary Summary Report
===============================================================================

ch071.Fig.equals(Object o)   (Public Method)
   [FruitD.java, 30]

ch071.Fig.equals.o   (Parameter)
   [FruitD.java, 30]

ch071.Flat   (Class)
   [TreeD.java, 20]

ch071.Flat.accept(TreeVisitorI ask)   (Method)
   [TreeD.java, 32]

ch071.Flat.accept.ask   (Parameter)
   [TreeD.java, 32]

ch071.Flat.f   (Variable)
   [TreeD.java, 22]

ch071.Flat.Flat(FruitD _f,TreeD _t)   (Public Constructor)
   [TreeD.java, 25]

ch071.Flat.Flat._f   (Parameter)
   [TreeD.java, 25]

ch071.Flat.Flat._t   (Parameter)
   [TreeD.java, 25]

ch071.Flat.t   (Variable)
   [TreeD.java, 23]

ch071.FruitD   (Abstract Class)
   [FruitD.java, 3]

ch071.HasFruitV   (Class)
   [TreeD.java, 119]

ch071.HasFruitV.forBud   (Public Method)
   [TreeD.java, 121]

ch071.HasFruitV.forFlat(FruitD f,TreeD t)   (Public Method)
   [TreeD.java, 127]

ch071.HasFruitV.forFlat.f   (Parameter)
   [TreeD.java, 127]

ch071.HasFruitV.forFlat.t   (Parameter)
   [TreeD.java, 127]

ch071.HasFruitV.forSplit(TreeD l,TreeD t)   (Public Method)
   [TreeD.java, 133]

ch071.HasFruitV.forSplit.l   (Parameter)
   [TreeD.java, 133]
                                                                     Page 45
                         Data Dictionary Summary Report
===============================================================================

ch071.HasFruitV.forSplit.t   (Parameter)
   [TreeD.java, 133]

ch071.IHeightV   (Class)
   [TreeD.java, 140]

ch071.IHeightV.forBud   (Public Method)
   [TreeD.java, 143]

ch071.IHeightV.forFlat(FruitD f,TreeD t)   (Public Method)
   [TreeD.java, 149]

ch071.IHeightV.forFlat.f   (Parameter)
   [TreeD.java, 149]

ch071.IHeightV.forFlat.t   (Parameter)
   [TreeD.java, 149]

ch071.IHeightV.forSplit(TreeD l,TreeD t)   (Public Method)
   [TreeD.java, 155]

ch071.IHeightV.forSplit.l   (Parameter)
   [TreeD.java, 155]

ch071.IHeightV.forSplit.t   (Parameter)
   [TreeD.java, 155]

ch071.IOccursV   (Class)
   [TreeD.java, 164]

ch071.IOccursV.a   (Variable)
   [TreeD.java, 166]

ch071.IOccursV.forBud   (Public Method)
   [TreeD.java, 173]

ch071.IOccursV.forFlat(FruitD f,TreeD t)   (Public Method)
   [TreeD.java, 179]

ch071.IOccursV.forFlat.f   (Parameter)
   [TreeD.java, 179]

ch071.IOccursV.forFlat.t   (Parameter)
   [TreeD.java, 179]

ch071.IOccursV.forSplit(TreeD l,TreeD t)   (Public Method)
   [TreeD.java, 191]

ch071.IOccursV.forSplit.l   (Parameter)
   [TreeD.java, 191]

ch071.IOccursV.forSplit.t   (Parameter)
   [TreeD.java, 191]
                                                                     Page 46
                         Data Dictionary Summary Report
===============================================================================

ch071.IOccursV.IOccursV(FruitD _a)   (Public Constructor)
   [TreeD.java, 167]

ch071.IOccursV.IOccursV._a   (Parameter)
   [TreeD.java, 167]

ch071.IsFlatV   (Class)
   [TreeD.java, 66]

ch071.IsFlatV.forBud   (Public Method)
   [TreeD.java, 69]

ch071.IsFlatV.forFlat(FruitD f,TreeD t)   (Public Method)
   [TreeD.java, 75]

ch071.IsFlatV.forFlat.f   (Parameter)
   [TreeD.java, 75]

ch071.IsFlatV.forFlat.t   (Parameter)
   [TreeD.java, 75]

ch071.IsFlatV.forSplit(TreeD l,TreeD t)   (Public Method)
   [TreeD.java, 81]

ch071.IsFlatV.forSplit.l   (Parameter)
   [TreeD.java, 81]

ch071.IsFlatV.forSplit.t   (Parameter)
   [TreeD.java, 81]

ch071.IsSplitV   (Class)
   [TreeD.java, 91]

ch071.IsSplitV.forBud   (Public Method)
   [TreeD.java, 94]

ch071.IsSplitV.forFlat(FruitD f,TreeD t)   (Public Method)
   [TreeD.java, 100]

ch071.IsSplitV.forFlat.f   (Parameter)
   [TreeD.java, 100]

ch071.IsSplitV.forFlat.t   (Parameter)
   [TreeD.java, 100]

ch071.IsSplitV.forSplit(TreeD l,TreeD t)   (Public Method)
   [TreeD.java, 106]

ch071.IsSplitV.forSplit.l   (Parameter)
   [TreeD.java, 106]

ch071.IsSplitV.forSplit.t   (Parameter)
   [TreeD.java, 106]
                                                                     Page 47
                         Data Dictionary Summary Report
===============================================================================

ch071.Lemon   (Class)
   [FruitD.java, 23]

ch071.Lemon.equals(Object o)   (Public Method)
   [FruitD.java, 24]

ch071.Lemon.equals.o   (Parameter)
   [FruitD.java, 24]

ch071.Peach   (Class)
   [FruitD.java, 5]

ch071.Peach.equals(Object o)   (Public Method)
   [FruitD.java, 6]

ch071.Peach.equals.o   (Parameter)
   [FruitD.java, 6]

ch071.Pear   (Class)
   [FruitD.java, 17]

ch071.Pear.equals(Object o)   (Public Method)
   [FruitD.java, 18]

ch071.Pear.equals.o   (Parameter)
   [FruitD.java, 18]

ch071.Split   (Class)
   [TreeD.java, 42]

ch071.Split.accept(TreeVisitorI ask)   (Method)
   [TreeD.java, 52]

ch071.Split.accept.ask   (Parameter)
   [TreeD.java, 52]

ch071.Split.l   (Variable)
   [TreeD.java, 44]

ch071.Split.Split(TreeD _l,TreeD _t)   (Public Constructor)
   [TreeD.java, 46]

ch071.Split.Split._l   (Parameter)
   [TreeD.java, 46]

ch071.Split.Split._t   (Parameter)
   [TreeD.java, 46]

ch071.Split.t   (Variable)
   [TreeD.java, 45]

ch071.TreeD   (Abstract Class)
   [TreeD.java, 3]
                                                                     Page 48
                         Data Dictionary Summary Report
===============================================================================

ch071.TreeD.accept(TreeVisitorI ask)   (Abstract Method)
   [TreeD.java, 4]

ch071.TreeD.accept.ask   (Parameter)
   [TreeD.java, 4]

ch071.TreeVisitorI   (Interface)
   [TreeD.java, 60]

ch071.TreeVisitorI.forBud   (Abstract Method)
   [TreeD.java, 61]

ch071.TreeVisitorI.forFlat(FruitD f,TreeD t)   (Abstract Method)
   [TreeD.java, 62]

ch071.TreeVisitorI.forFlat.f   (Parameter)
   [TreeD.java, 62]

ch071.TreeVisitorI.forFlat.t   (Parameter)
   [TreeD.java, 62]

ch071.TreeVisitorI.forSplit(TreeD l,TreeD t)   (Abstract Method)
   [TreeD.java, 63]

ch071.TreeVisitorI.forSplit.l   (Parameter)
   [TreeD.java, 63]

ch071.TreeVisitorI.forSplit.t   (Parameter)
   [TreeD.java, 63]

ch071.TSubstsV   (Class)
   [TreeD.java, 200]

ch071.TSubstsV.forBud   (Public Method)
   [TreeD.java, 210]

ch071.TSubstsV.forFlat(FruitD f,TreeD t)   (Public Method)
   [TreeD.java, 216]

ch071.TSubstsV.forFlat.f   (Parameter)
   [TreeD.java, 216]

ch071.TSubstsV.forFlat.t   (Parameter)
   [TreeD.java, 216]

ch071.TSubstsV.forSplit(TreeD l,TreeD t)   (Public Method)
   [TreeD.java, 226]

ch071.TSubstsV.forSplit.l   (Parameter)
   [TreeD.java, 226]

ch071.TSubstsV.forSplit.t   (Parameter)
   [TreeD.java, 226]
                                                                     Page 49
                         Data Dictionary Summary Report
===============================================================================

ch071.TSubstsV.n   (Variable)
   [TreeD.java, 202]

ch071.TSubstsV.o   (Variable)
   [TreeD.java, 203]

ch071.TSubstsV.TSubstsV(FruitD _n,FruitD _o)   (Public Constructor)
   [TreeD.java, 204]

ch071.TSubstsV.TSubstsV._n   (Parameter)
   [TreeD.java, 204]

ch071.TSubstsV.TSubstsV._o   (Parameter)
   [TreeD.java, 204]

ch08   (Package)
   [ExprD.java, 1]

ch08.Add   (Class)
   [SetD.java, 48]

ch08.Add.Add(Integer _i,SetD _s)   (Public Constructor)
   [SetD.java, 52]

ch08.Add.Add._i   (Parameter)
   [SetD.java, 52]

ch08.Add.Add._s   (Parameter)
   [SetD.java, 52]

ch08.Add.diff(SetD t)   (Method)
   [SetD.java, 74]

ch08.Add.diff.t   (Parameter)
   [SetD.java, 74]

ch08.Add.i   (Variable)
   [SetD.java, 50]

ch08.Add.mem(Integer n)   (Method)
   [SetD.java, 58]

ch08.Add.mem.n   (Parameter)
   [SetD.java, 58]

ch08.Add.plus(SetD t)   (Method)
   [SetD.java, 68]

ch08.Add.plus.t   (Parameter)
   [SetD.java, 68]

ch08.Add.prod(SetD t)   (Method)
   [SetD.java, 84]
                                                                     Page 50
                         Data Dictionary Summary Report
===============================================================================

ch08.Add.prod.t   (Parameter)
   [SetD.java, 84]

ch08.Add.s   (Variable)
   [SetD.java, 51]

ch08.Const   (Class)
   [ExprD.java, 102]

ch08.Const.accpet(ExprVisitorI ask)   (Method)
   [ExprD.java, 109]

ch08.Const.accpet.ask   (Parameter)
   [ExprD.java, 109]

ch08.Const.c   (Variable)
   [ExprD.java, 103]

ch08.Const.Const(Object _c)   (Public Constructor)
   [ExprD.java, 104]

ch08.Const.Const._c   (Parameter)
   [ExprD.java, 104]

ch08.Diff   (Class)
   [ExprD.java, 71]

ch08.Diff.accpet(ExprVisitorI ask)   (Method)
   [ExprD.java, 80]

ch08.Diff.accpet.ask   (Parameter)
   [ExprD.java, 80]

ch08.Diff.Diff(ExprD _l,ExprD _r)   (Public Constructor)
   [ExprD.java, 74]

ch08.Diff.Diff._l   (Parameter)
   [ExprD.java, 74]

ch08.Diff.Diff._r   (Parameter)
   [ExprD.java, 74]

ch08.Diff.l   (Variable)
   [ExprD.java, 72]

ch08.Diff.r   (Variable)
   [ExprD.java, 73]

ch08.Empty   (Class)
   [SetD.java, 19]

ch08.Empty.diff(SetD s)   (Method)
   [SetD.java, 34]
                                                                     Page 51
                         Data Dictionary Summary Report
===============================================================================

ch08.Empty.diff.s   (Parameter)
   [SetD.java, 34]

ch08.Empty.mem(Integer i)   (Method)
   [SetD.java, 22]

ch08.Empty.mem.i   (Parameter)
   [SetD.java, 22]

ch08.Empty.plus(SetD s)   (Method)
   [SetD.java, 28]

ch08.Empty.plus.s   (Parameter)
   [SetD.java, 28]

ch08.Empty.prod(SetD s)   (Method)
   [SetD.java, 40]

ch08.Empty.prod.s   (Parameter)
   [SetD.java, 40]

ch08.ExprD   (Abstract Class)
   [ExprD.java, 47]

ch08.ExprD.accpet(ExprVisitorI ask)   (Abstract Method)
   [ExprD.java, 48]

ch08.ExprD.accpet.ask   (Parameter)
   [ExprD.java, 48]

ch08.ExprVisitorI   (Interface)
   [ExprD.java, 3]

ch08.ExprVisitorI.forConst(Object c)   (Abstract Method)
   [ExprD.java, 7]

ch08.ExprVisitorI.forConst.c   (Parameter)
   [ExprD.java, 7]

ch08.ExprVisitorI.forDiff(ExprD l,ExprD r)   (Abstract Method)
   [ExprD.java, 5]

ch08.ExprVisitorI.forDiff.l   (Parameter)
   [ExprD.java, 5]

ch08.ExprVisitorI.forDiff.r   (Parameter)
   [ExprD.java, 5]

ch08.ExprVisitorI.forPlus(ExprD l,ExprD r)   (Abstract Method)
   [ExprD.java, 4]

ch08.ExprVisitorI.forPlus.l   (Parameter)
   [ExprD.java, 4]
                                                                     Page 52
                         Data Dictionary Summary Report
===============================================================================

ch08.ExprVisitorI.forPlus.r   (Parameter)
   [ExprD.java, 4]

ch08.ExprVisitorI.forProd(ExprD l,ExprD r)   (Abstract Method)
   [ExprD.java, 6]

ch08.ExprVisitorI.forProd.l   (Parameter)
   [ExprD.java, 6]

ch08.ExprVisitorI.forProd.r   (Parameter)
   [ExprD.java, 6]

ch08.IntEvalV   (Class)
   [ExprD.java, 10]

ch08.IntEvalV.diff(Object l,Object r)   (Method)
   [ExprD.java, 39]

ch08.IntEvalV.diff.l   (Parameter)
   [ExprD.java, 39]

ch08.IntEvalV.diff.r   (Parameter)
   [ExprD.java, 39]

ch08.IntEvalV.forConst(Object c)   (Public Method)
   [ExprD.java, 31]

ch08.IntEvalV.forConst.c   (Parameter)
   [ExprD.java, 31]

ch08.IntEvalV.forDiff(ExprD l,ExprD r)   (Public Method)
   [ExprD.java, 19]

ch08.IntEvalV.forDiff.l   (Parameter)
   [ExprD.java, 19]

ch08.IntEvalV.forDiff.r   (Parameter)
   [ExprD.java, 19]

ch08.IntEvalV.forPlus(ExprD l,ExprD r)   (Public Method)
   [ExprD.java, 13]

ch08.IntEvalV.forPlus.l   (Parameter)
   [ExprD.java, 13]

ch08.IntEvalV.forPlus.r   (Parameter)
   [ExprD.java, 13]

ch08.IntEvalV.forProd(ExprD l,ExprD r)   (Public Method)
   [ExprD.java, 25]

ch08.IntEvalV.forProd.l   (Parameter)
   [ExprD.java, 25]
                                                                     Page 53
                         Data Dictionary Summary Report
===============================================================================

ch08.IntEvalV.forProd.r   (Parameter)
   [ExprD.java, 25]

ch08.IntEvalV.plus(Object l,Object r)   (Method)
   [ExprD.java, 36]

ch08.IntEvalV.plus.l   (Parameter)
   [ExprD.java, 36]

ch08.IntEvalV.plus.r   (Parameter)
   [ExprD.java, 36]

ch08.IntEvalV.prod(Object l,Object r)   (Method)
   [ExprD.java, 42]

ch08.IntEvalV.prod.l   (Parameter)
   [ExprD.java, 42]

ch08.IntEvalV.prod.r   (Parameter)
   [ExprD.java, 42]

ch08.Plus   (Class)
   [ExprD.java, 54]

ch08.Plus.accpet(ExprVisitorI ask)   (Method)
   [ExprD.java, 64]

ch08.Plus.accpet.ask   (Parameter)
   [ExprD.java, 64]

ch08.Plus.l   (Variable)
   [ExprD.java, 56]

ch08.Plus.Plus(ExprD _l,ExprD _r)   (Public Constructor)
   [ExprD.java, 58]

ch08.Plus.Plus._l   (Parameter)
   [ExprD.java, 58]

ch08.Plus.Plus._r   (Parameter)
   [ExprD.java, 58]

ch08.Plus.r   (Variable)
   [ExprD.java, 57]

ch08.Prod   (Class)
   [ExprD.java, 86]

ch08.Prod.accpet(ExprVisitorI ask)   (Method)
   [ExprD.java, 95]

ch08.Prod.accpet.ask   (Parameter)
   [ExprD.java, 95]
                                                                     Page 54
                         Data Dictionary Summary Report
===============================================================================

ch08.Prod.l   (Variable)
   [ExprD.java, 87]

ch08.Prod.Prod(ExprD _l,ExprD _r)   (Public Constructor)
   [ExprD.java, 89]

ch08.Prod.Prod._l   (Parameter)
   [ExprD.java, 89]

ch08.Prod.Prod._r   (Parameter)
   [ExprD.java, 89]

ch08.Prod.r   (Variable)
   [ExprD.java, 88]

ch08.SetD   (Abstract Class)
   [SetD.java, 3]

ch08.SetD.add(Integer i)   (Method)
   [SetD.java, 4]

ch08.SetD.add.i   (Parameter)
   [SetD.java, 4]

ch08.SetD.diff(SetD s)   (Abstract Method)
   [SetD.java, 14]

ch08.SetD.diff.s   (Parameter)
   [SetD.java, 14]

ch08.SetD.mem(Integer i)   (Abstract Method)
   [SetD.java, 12]

ch08.SetD.mem.i   (Parameter)
   [SetD.java, 12]

ch08.SetD.plus(SetD s)   (Abstract Method)
   [SetD.java, 13]

ch08.SetD.plus.s   (Parameter)
   [SetD.java, 13]

ch08.SetD.prod(SetD s)   (Abstract Method)
   [SetD.java, 15]

ch08.SetD.prod.s   (Parameter)
   [SetD.java, 15]

ch08.SetEvalV   (Class)
   [SetD.java, 96]

ch08.SetEvalV.diff(Object l,Object r)   (Method)
   [SetD.java, 103]
                                                                     Page 55
                         Data Dictionary Summary Report
===============================================================================

ch08.SetEvalV.diff.l   (Parameter)
   [SetD.java, 103]

ch08.SetEvalV.diff.r   (Parameter)
   [SetD.java, 103]

ch08.SetEvalV.plus(Object l,Object r)   (Method)
   [SetD.java, 98]

ch08.SetEvalV.plus.l   (Parameter)
   [SetD.java, 98]

ch08.SetEvalV.plus.r   (Parameter)
   [SetD.java, 98]

ch08.SetEvalV.prod(Object l,Object r)   (Method)
   [SetD.java, 108]

ch08.SetEvalV.prod.l   (Parameter)
   [SetD.java, 108]

ch08.SetEvalV.prod.r   (Parameter)
   [SetD.java, 108]

ch0801That   (Package)
   [PieDUpdate.java, 1]

ch0801That.Bot   (Class)
   [PieDUpdate.java, 10]

ch0801That.Bot.accept(PieVistor1 ask)   (Method)
   [PieDUpdate.java, 13]

ch0801That.Bot.accept.ask   (Parameter)
   [PieDUpdate.java, 13]

ch0801That.Bot.toString   (Public Method)
   [PieDUpdate.java, 18]

ch0801That.LtSubstV   (Class)
   [PieDUpdate.java, 90]

ch0801That.LtSubstV.c   (Variable)
   [PieDUpdate.java, 92]

ch0801That.LtSubstV.forBot(Bot that)   (Public Method)
   [PieDUpdate.java, 102]

ch0801That.LtSubstV.forBot.that   (Parameter)
   [PieDUpdate.java, 102]

ch0801That.LtSubstV.forTop(Top that)   (Public Method)
   [PieDUpdate.java, 108]
                                                                     Page 56
                         Data Dictionary Summary Report
===============================================================================

ch0801That.LtSubstV.forTop.that   (Parameter)
   [PieDUpdate.java, 108]

ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)   (Public Constructor)
   [PieDUpdate.java, 95]

ch0801That.LtSubstV.LtSubstV._c   (Parameter)
   [PieDUpdate.java, 95]

ch0801That.LtSubstV.LtSubstV._n   (Parameter)
   [PieDUpdate.java, 95]

ch0801That.LtSubstV.LtSubstV._o   (Parameter)
   [PieDUpdate.java, 95]

ch0801That.LtSubstV.n   (Variable)
   [PieDUpdate.java, 93]

ch0801That.LtSubstV.o   (Variable)
   [PieDUpdate.java, 94]

ch0801That.PieDUpdate   (Public Abstract Class)
   [PieDUpdate.java, 3]

ch0801That.PieDUpdate.accept(PieVistor1 ask)   (Abstract Method)
   [PieDUpdate.java, 8]

ch0801That.PieDUpdate.accept.ask   (Parameter)
   [PieDUpdate.java, 8]

ch0801That.PieVistor1   (Interface)
   [PieDUpdate.java, 43]

ch0801That.PieVistor1.forBot(Bot that)   (Abstract Method)
   [PieDUpdate.java, 44]

ch0801That.PieVistor1.forBot.that   (Parameter)
   [PieDUpdate.java, 44]

ch0801That.PieVistor1.forTop(Top that)   (Abstract Method)
   [PieDUpdate.java, 45]

ch0801That.PieVistor1.forTop.that   (Parameter)
   [PieDUpdate.java, 45]

ch0801That.RemV   (Class)
   [PieDUpdate.java, 48]

ch0801That.RemV.forBot(Bot that)   (Public Method)
   [PieDUpdate.java, 55]

ch0801That.RemV.forBot.that   (Parameter)
   [PieDUpdate.java, 55]
                                                                     Page 57
                         Data Dictionary Summary Report
===============================================================================

ch0801That.RemV.forTop(Top that)   (Public Method)
   [PieDUpdate.java, 60]

ch0801That.RemV.forTop.that   (Parameter)
   [PieDUpdate.java, 60]

ch0801That.RemV.o   (Variable)
   [PieDUpdate.java, 49]

ch0801That.RemV.RemV(Object _o)   (Public Constructor)
   [PieDUpdate.java, 50]

ch0801That.RemV.RemV._o   (Parameter)
   [PieDUpdate.java, 50]

ch0801That.SubstV   (Class)
   [PieDUpdate.java, 69]

ch0801That.SubstV.forBot(Bot that)   (Public Method)
   [PieDUpdate.java, 77]

ch0801That.SubstV.forBot.that   (Parameter)
   [PieDUpdate.java, 77]

ch0801That.SubstV.forTop(Top that)   (Public Method)
   [PieDUpdate.java, 81]

ch0801That.SubstV.forTop.that   (Parameter)
   [PieDUpdate.java, 81]

ch0801That.SubstV.n   (Variable)
   [PieDUpdate.java, 70]

ch0801That.SubstV.o   (Variable)
   [PieDUpdate.java, 71]

ch0801That.SubstV.SubstV(Object _n,Object _o)   (Public Constructor)
   [PieDUpdate.java, 72]

ch0801That.SubstV.SubstV._n   (Parameter)
   [PieDUpdate.java, 72]

ch0801That.SubstV.SubstV._o   (Parameter)
   [PieDUpdate.java, 72]

ch0801That.TestThat   (Public Class)
   [TestThat.java, 3]

ch0801That.TestThat.main(String[] args)   (Public Static Method)
   [TestThat.java, 4]

ch0801That.TestThat.main.args   (Parameter)
   [TestThat.java, 4]
                                                                     Page 58
                         Data Dictionary Summary Report
===============================================================================

ch0801That.Top   (Class)
   [PieDUpdate.java, 23]

ch0801That.Top.accept(PieVistor1 ask)   (Method)
   [PieDUpdate.java, 33]

ch0801That.Top.accept.ask   (Parameter)
   [PieDUpdate.java, 33]

ch0801That.Top.r   (Variable)
   [PieDUpdate.java, 26]

ch0801That.Top.t   (Variable)
   [PieDUpdate.java, 25]

ch0801That.Top.Top(Object t,PieDUpdate r)   (Public Constructor)
   [PieDUpdate.java, 27]

ch0801That.Top.Top.r   (Parameter)
   [PieDUpdate.java, 27]

ch0801That.Top.Top.t   (Parameter)
   [PieDUpdate.java, 27]

ch0801That.Top.toString   (Public Method)
   [PieDUpdate.java, 37]

ch081   (Package)
   [ExprD.java, 1]

ch081.Add   (Class)
   [SetD.java, 48]

ch081.Add.Add(Integer _i,SetD _s)   (Public Constructor)
   [SetD.java, 52]

ch081.Add.Add._i   (Parameter)
   [SetD.java, 52]

ch081.Add.Add._s   (Parameter)
   [SetD.java, 52]

ch081.Add.diff(SetD t)   (Method)
   [SetD.java, 74]

ch081.Add.diff.t   (Parameter)
   [SetD.java, 74]

ch081.Add.i   (Variable)
   [SetD.java, 50]

ch081.Add.mem(Integer n)   (Method)
   [SetD.java, 58]
                                                                     Page 59
                         Data Dictionary Summary Report
===============================================================================

ch081.Add.mem.n   (Parameter)
   [SetD.java, 58]

ch081.Add.plus(SetD t)   (Method)
   [SetD.java, 68]

ch081.Add.plus.t   (Parameter)
   [SetD.java, 68]

ch081.Add.prod(SetD t)   (Method)
   [SetD.java, 84]

ch081.Add.prod.t   (Parameter)
   [SetD.java, 84]

ch081.Add.s   (Variable)
   [SetD.java, 51]

ch081.Bot   (Class)
   [PieD.java, 93]

ch081.Bot.accept(PieVistor1 ask)   (Method)
   [PieD.java, 96]

ch081.Bot.accept.ask   (Parameter)
   [PieD.java, 96]

ch081.Bot.toString   (Public Method)
   [PieD.java, 101]

ch081.Const   (Class)
   [ExprD.java, 108]

ch081.Const.accpet(ExprVisitorI ask)   (Method)
   [ExprD.java, 115]

ch081.Const.accpet.ask   (Parameter)
   [ExprD.java, 115]

ch081.Const.c   (Variable)
   [ExprD.java, 109]

ch081.Const.Const(Object _c)   (Public Constructor)
   [ExprD.java, 110]

ch081.Const.Const._c   (Parameter)
   [ExprD.java, 110]

ch081.Diff   (Class)
   [ExprD.java, 77]

ch081.Diff.accpet(ExprVisitorI ask)   (Method)
   [ExprD.java, 86]
                                                                     Page 60
                         Data Dictionary Summary Report
===============================================================================

ch081.Diff.accpet.ask   (Parameter)
   [ExprD.java, 86]

ch081.Diff.Diff(ExprD _l,ExprD _r)   (Public Constructor)
   [ExprD.java, 80]

ch081.Diff.Diff._l   (Parameter)
   [ExprD.java, 80]

ch081.Diff.Diff._r   (Parameter)
   [ExprD.java, 80]

ch081.Diff.l   (Variable)
   [ExprD.java, 78]

ch081.Diff.r   (Variable)
   [ExprD.java, 79]

ch081.Empty   (Class)
   [SetD.java, 19]

ch081.Empty.diff(SetD s)   (Method)
   [SetD.java, 34]

ch081.Empty.diff.s   (Parameter)
   [SetD.java, 34]

ch081.Empty.mem(Integer i)   (Method)
   [SetD.java, 22]

ch081.Empty.mem.i   (Parameter)
   [SetD.java, 22]

ch081.Empty.plus(SetD s)   (Method)
   [SetD.java, 28]

ch081.Empty.plus.s   (Parameter)
   [SetD.java, 28]

ch081.Empty.prod(SetD s)   (Method)
   [SetD.java, 40]

ch081.Empty.prod.s   (Parameter)
   [SetD.java, 40]

ch081.EvalV   (Abstract Class)
   [ExprD.java, 10]

ch081.EvalV.diff(Object l,Object r)   (Abstract Method)
   [ExprD.java, 36]

ch081.EvalV.diff.l   (Parameter)
   [ExprD.java, 36]
                                                                     Page 61
                         Data Dictionary Summary Report
===============================================================================

ch081.EvalV.diff.r   (Parameter)
   [ExprD.java, 36]

ch081.EvalV.forConst(Object c)   (Public Method)
   [ExprD.java, 30]

ch081.EvalV.forConst.c   (Parameter)
   [ExprD.java, 30]

ch081.EvalV.forDiff(ExprD l,ExprD r)   (Public Method)
   [ExprD.java, 18]

ch081.EvalV.forDiff.l   (Parameter)
   [ExprD.java, 18]

ch081.EvalV.forDiff.r   (Parameter)
   [ExprD.java, 18]

ch081.EvalV.forPlus(ExprD l,ExprD r)   (Public Method)
   [ExprD.java, 12]

ch081.EvalV.forPlus.l   (Parameter)
   [ExprD.java, 12]

ch081.EvalV.forPlus.r   (Parameter)
   [ExprD.java, 12]

ch081.EvalV.forProd(ExprD l,ExprD r)   (Public Method)
   [ExprD.java, 24]

ch081.EvalV.forProd.l   (Parameter)
   [ExprD.java, 24]

ch081.EvalV.forProd.r   (Parameter)
   [ExprD.java, 24]

ch081.EvalV.plus(Object l,Object r)   (Abstract Method)
   [ExprD.java, 35]

ch081.EvalV.plus.l   (Parameter)
   [ExprD.java, 35]

ch081.EvalV.plus.r   (Parameter)
   [ExprD.java, 35]

ch081.EvalV.prod(Object l,Object r)   (Abstract Method)
   [ExprD.java, 37]

ch081.EvalV.prod.l   (Parameter)
   [ExprD.java, 37]

ch081.EvalV.prod.r   (Parameter)
   [ExprD.java, 37]
                                                                     Page 62
                         Data Dictionary Summary Report
===============================================================================

ch081.ExprD   (Abstract Class)
   [ExprD.java, 53]

ch081.ExprD.accpet(ExprVisitorI ask)   (Abstract Method)
   [ExprD.java, 54]

ch081.ExprD.accpet.ask   (Parameter)
   [ExprD.java, 54]

ch081.ExprVisitorI   (Interface)
   [ExprD.java, 3]

ch081.ExprVisitorI.forConst(Object c)   (Abstract Method)
   [ExprD.java, 7]

ch081.ExprVisitorI.forConst.c   (Parameter)
   [ExprD.java, 7]

ch081.ExprVisitorI.forDiff(ExprD l,ExprD r)   (Abstract Method)
   [ExprD.java, 5]

ch081.ExprVisitorI.forDiff.l   (Parameter)
   [ExprD.java, 5]

ch081.ExprVisitorI.forDiff.r   (Parameter)
   [ExprD.java, 5]

ch081.ExprVisitorI.forPlus(ExprD l,ExprD r)   (Abstract Method)
   [ExprD.java, 4]

ch081.ExprVisitorI.forPlus.l   (Parameter)
   [ExprD.java, 4]

ch081.ExprVisitorI.forPlus.r   (Parameter)
   [ExprD.java, 4]

ch081.ExprVisitorI.forProd(ExprD l,ExprD r)   (Abstract Method)
   [ExprD.java, 6]

ch081.ExprVisitorI.forProd.l   (Parameter)
   [ExprD.java, 6]

ch081.ExprVisitorI.forProd.r   (Parameter)
   [ExprD.java, 6]

ch081.IntEvalV   (Class)
   [ExprD.java, 39]

ch081.IntEvalV.diff(Object l,Object r)   (Method)
   [ExprD.java, 44]

ch081.IntEvalV.diff.l   (Parameter)
   [ExprD.java, 44]
                                                                     Page 63
                         Data Dictionary Summary Report
===============================================================================

ch081.IntEvalV.diff.r   (Parameter)
   [ExprD.java, 44]

ch081.IntEvalV.plus(Object l,Object r)   (Method)
   [ExprD.java, 41]

ch081.IntEvalV.plus.l   (Parameter)
   [ExprD.java, 41]

ch081.IntEvalV.plus.r   (Parameter)
   [ExprD.java, 41]

ch081.IntEvalV.prod(Object l,Object r)   (Method)
   [ExprD.java, 47]

ch081.IntEvalV.prod.l   (Parameter)
   [ExprD.java, 47]

ch081.IntEvalV.prod.r   (Parameter)
   [ExprD.java, 47]

ch081.LtSubstV   (Class)
   [PieD.java, 52]

ch081.LtSubstV.c   (Variable)
   [PieD.java, 54]

ch081.LtSubstV.forBot   (Public Method)
   [PieD.java, 64]

ch081.LtSubstV.forTop(Object t,PieD r)   (Public Method)
   [PieD.java, 70]

ch081.LtSubstV.forTop.r   (Parameter)
   [PieD.java, 70]

ch081.LtSubstV.forTop.t   (Parameter)
   [PieD.java, 70]

ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)   (Public Constructor)
   [PieD.java, 57]

ch081.LtSubstV.LtSubstV._c   (Parameter)
   [PieD.java, 57]

ch081.LtSubstV.LtSubstV._n   (Parameter)
   [PieD.java, 57]

ch081.LtSubstV.LtSubstV._o   (Parameter)
   [PieD.java, 57]

ch081.LtSubstV.n   (Variable)
   [PieD.java, 55]
                                                                     Page 64
                         Data Dictionary Summary Report
===============================================================================

ch081.LtSubstV.o   (Variable)
   [PieD.java, 56]

ch081.LtSubstV1   (Class)
   [SubstD.java, 42]

ch081.LtSubstV1.c   (Variable)
   [SubstD.java, 43]

ch081.LtSubstV1.forTop(Object t,PieD r)   (Public Method)
   [SubstD.java, 50]

ch081.LtSubstV1.forTop.r   (Parameter)
   [SubstD.java, 50]

ch081.LtSubstV1.forTop.t   (Parameter)
   [SubstD.java, 50]

ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)   (Public Constructor)
   [SubstD.java, 44]

ch081.LtSubstV1.LtSubstV1._n   (Parameter)
   [SubstD.java, 44]

ch081.LtSubstV1.LtSubstV1._o   (Parameter)
   [SubstD.java, 44]

ch081.LtSubstV1.LtSubstV1.c   (Parameter)
   [SubstD.java, 44]

ch081.LtSubstV2   (Class)
   [SubstVExt.java, 30]

ch081.LtSubstV2.c   (Variable)
   [SubstVExt.java, 31]

ch081.LtSubstV2.forTop(Object t,PieD r)   (Public Method)
   [SubstVExt.java, 38]

ch081.LtSubstV2.forTop.r   (Parameter)
   [SubstVExt.java, 38]

ch081.LtSubstV2.forTop.t   (Parameter)
   [SubstVExt.java, 38]

ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)   (Public Constructor)
   [SubstVExt.java, 32]

ch081.LtSubstV2.LtSubstV2._n   (Parameter)
   [SubstVExt.java, 32]

ch081.LtSubstV2.LtSubstV2._o   (Parameter)
   [SubstVExt.java, 32]
                                                                     Page 65
                         Data Dictionary Summary Report
===============================================================================

ch081.LtSubstV2.LtSubstV2.c   (Parameter)
   [SubstVExt.java, 32]

ch081.PieD   (Public Abstract Class)
   [PieD.java, 85]

ch081.PieD.accept(PieVistor1 ask)   (Abstract Method)
   [PieD.java, 90]

ch081.PieD.accept.ask   (Parameter)
   [PieD.java, 90]

ch081.PieVistor1   (Interface)
   [PieD.java, 5]

ch081.PieVistor1.forBot   (Abstract Method)
   [PieD.java, 6]

ch081.PieVistor1.forTop(Object t,PieD r)   (Abstract Method)
   [PieD.java, 7]

ch081.PieVistor1.forTop.r   (Parameter)
   [PieD.java, 7]

ch081.PieVistor1.forTop.t   (Parameter)
   [PieD.java, 7]

ch081.Plus   (Class)
   [ExprD.java, 60]

ch081.Plus.accpet(ExprVisitorI ask)   (Method)
   [ExprD.java, 70]

ch081.Plus.accpet.ask   (Parameter)
   [ExprD.java, 70]

ch081.Plus.l   (Variable)
   [ExprD.java, 62]

ch081.Plus.Plus(ExprD _l,ExprD _r)   (Public Constructor)
   [ExprD.java, 64]

ch081.Plus.Plus._l   (Parameter)
   [ExprD.java, 64]

ch081.Plus.Plus._r   (Parameter)
   [ExprD.java, 64]

ch081.Plus.r   (Variable)
   [ExprD.java, 63]

ch081.Prod   (Class)
   [ExprD.java, 92]
                                                                     Page 66
                         Data Dictionary Summary Report
===============================================================================

ch081.Prod.accpet(ExprVisitorI ask)   (Method)
   [ExprD.java, 101]

ch081.Prod.accpet.ask   (Parameter)
   [ExprD.java, 101]

ch081.Prod.l   (Variable)
   [ExprD.java, 93]

ch081.Prod.Prod(ExprD _l,ExprD _r)   (Public Constructor)
   [ExprD.java, 95]

ch081.Prod.Prod._l   (Parameter)
   [ExprD.java, 95]

ch081.Prod.Prod._r   (Parameter)
   [ExprD.java, 95]

ch081.Prod.r   (Variable)
   [ExprD.java, 94]

ch081.RemV   (Class)
   [PieD.java, 10]

ch081.RemV.forBot   (Public Method)
   [PieD.java, 17]

ch081.RemV.forTop(Object t,PieD r)   (Public Method)
   [PieD.java, 21]

ch081.RemV.forTop.r   (Parameter)
   [PieD.java, 21]

ch081.RemV.forTop.t   (Parameter)
   [PieD.java, 21]

ch081.RemV.o   (Variable)
   [PieD.java, 11]

ch081.RemV.RemV(Object _o)   (Public Constructor)
   [PieD.java, 12]

ch081.RemV.RemV._o   (Parameter)
   [PieD.java, 12]

ch081.SetD   (Abstract Class)
   [SetD.java, 3]

ch081.SetD.add(Integer i)   (Method)
   [SetD.java, 4]

ch081.SetD.add.i   (Parameter)
   [SetD.java, 4]
                                                                     Page 67
                         Data Dictionary Summary Report
===============================================================================

ch081.SetD.diff(SetD s)   (Abstract Method)
   [SetD.java, 14]

ch081.SetD.diff.s   (Parameter)
   [SetD.java, 14]

ch081.SetD.mem(Integer i)   (Abstract Method)
   [SetD.java, 12]

ch081.SetD.mem.i   (Parameter)
   [SetD.java, 12]

ch081.SetD.plus(SetD s)   (Abstract Method)
   [SetD.java, 13]

ch081.SetD.plus.s   (Parameter)
   [SetD.java, 13]

ch081.SetD.prod(SetD s)   (Abstract Method)
   [SetD.java, 15]

ch081.SetD.prod.s   (Parameter)
   [SetD.java, 15]

ch081.SetEvalV   (Class)
   [SetD.java, 97]

ch081.SetEvalV.diff(Object l,Object r)   (Method)
   [SetD.java, 104]

ch081.SetEvalV.diff.l   (Parameter)
   [SetD.java, 104]

ch081.SetEvalV.diff.r   (Parameter)
   [SetD.java, 104]

ch081.SetEvalV.plus(Object l,Object r)   (Method)
   [SetD.java, 99]

ch081.SetEvalV.plus.l   (Parameter)
   [SetD.java, 99]

ch081.SetEvalV.plus.r   (Parameter)
   [SetD.java, 99]

ch081.SetEvalV.prod(Object l,Object r)   (Method)
   [SetD.java, 109]

ch081.SetEvalV.prod.l   (Parameter)
   [SetD.java, 109]

ch081.SetEvalV.prod.r   (Parameter)
   [SetD.java, 109]
                                                                     Page 68
                         Data Dictionary Summary Report
===============================================================================

ch081.SubstD   (Abstract Class)
   [SubstD.java, 4]

ch081.SubstD.forBot   (Public Method)
   [SubstD.java, 14]

ch081.SubstD.forTop(Object t,PieD r)   (Public Abstract Method)
   [SubstD.java, 19]

ch081.SubstD.forTop.r   (Parameter)
   [SubstD.java, 19]

ch081.SubstD.forTop.t   (Parameter)
   [SubstD.java, 19]

ch081.SubstD.n   (Variable)
   [SubstD.java, 6]

ch081.SubstD.o   (Variable)
   [SubstD.java, 7]

ch081.SubstD.SubstD(Object _n,Object _o)   (Public Constructor)
   [SubstD.java, 8]

ch081.SubstD.SubstD._n   (Parameter)
   [SubstD.java, 8]

ch081.SubstD.SubstD._o   (Parameter)
   [SubstD.java, 8]

ch081.SubstV   (Class)
   [PieD.java, 31]

ch081.SubstV.forBot   (Public Method)
   [PieD.java, 39]

ch081.SubstV.forTop(Object t,PieD r)   (Public Method)
   [PieD.java, 43]

ch081.SubstV.forTop.r   (Parameter)
   [PieD.java, 43]

ch081.SubstV.forTop.t   (Parameter)
   [PieD.java, 43]

ch081.SubstV.n   (Variable)
   [PieD.java, 32]

ch081.SubstV.o   (Variable)
   [PieD.java, 33]

ch081.SubstV.SubstV(Object _n,Object _o)   (Public Constructor)
   [PieD.java, 34]
                                                                     Page 69
                         Data Dictionary Summary Report
===============================================================================

ch081.SubstV.SubstV._n   (Parameter)
   [PieD.java, 34]

ch081.SubstV.SubstV._o   (Parameter)
   [PieD.java, 34]

ch081.SubstV1   (Class)
   [SubstD.java, 23]

ch081.SubstV1.forTop(Object t,PieD r)   (Public Method)
   [SubstD.java, 30]

ch081.SubstV1.forTop.r   (Parameter)
   [SubstD.java, 30]

ch081.SubstV1.forTop.t   (Parameter)
   [SubstD.java, 30]

ch081.SubstV1.SubstV1(Object _n,Object _o)   (Public Constructor)
   [SubstD.java, 25]

ch081.SubstV1.SubstV1._n   (Parameter)
   [SubstD.java, 25]

ch081.SubstV1.SubstV1._o   (Parameter)
   [SubstD.java, 25]

ch081.SubstVExt   (Abstract Class)
   [SubstVExt.java, 4]

ch081.SubstVExt.forBot   (Public Method)
   [SubstVExt.java, 14]

ch081.SubstVExt.forTop(Object t,PieD r)   (Public Method)
   [SubstVExt.java, 19]

ch081.SubstVExt.forTop.r   (Parameter)
   [SubstVExt.java, 19]

ch081.SubstVExt.forTop.t   (Parameter)
   [SubstVExt.java, 19]

ch081.SubstVExt.n   (Variable)
   [SubstVExt.java, 6]

ch081.SubstVExt.o   (Variable)
   [SubstVExt.java, 7]

ch081.SubstVExt.SubstVExt(Object _n,Object _o)   (Public Constructor)
   [SubstVExt.java, 8]

ch081.SubstVExt.SubstVExt._n   (Parameter)
   [SubstVExt.java, 8]
                                                                     Page 70
                         Data Dictionary Summary Report
===============================================================================

ch081.SubstVExt.SubstVExt._o   (Parameter)
   [SubstVExt.java, 8]

ch081.TestPieD   (Public Class)
   [TestPieD.java, 3]

ch081.TestPieD.main(String[] args)   (Public Static Method)
   [TestPieD.java, 4]

ch081.TestPieD.main.args   (Parameter)
   [TestPieD.java, 4]

ch081.Top   (Class)
   [PieD.java, 107]

ch081.Top.accept(PieVistor1 ask)   (Method)
   [PieD.java, 117]

ch081.Top.accept.ask   (Parameter)
   [PieD.java, 117]

ch081.Top.r   (Variable)
   [PieD.java, 110]

ch081.Top.t   (Variable)
   [PieD.java, 109]

ch081.Top.Top(Object t,PieD r)   (Public Constructor)
   [PieD.java, 111]

ch081.Top.Top.r   (Parameter)
   [PieD.java, 111]

ch081.Top.Top.t   (Parameter)
   [PieD.java, 111]

ch081.Top.toString   (Public Method)
   [PieD.java, 121]

ch09   (Package)
   [PointDCloserSimplify.java, 1]

ch09.CartesianPt2   (Class)
   [PointDCloserSimplify.java, 32]

ch09.CartesianPt2.CartesianPt2(int _x,int _y)   (Public Constructor)
   [PointDCloserSimplify.java, 36]

ch09.CartesianPt2.CartesianPt2._x   (Parameter)
   [PointDCloserSimplify.java, 36]

ch09.CartesianPt2.CartesianPt2._y   (Parameter)
   [PointDCloserSimplify.java, 36]
                                                                     Page 71
                         Data Dictionary Summary Report
===============================================================================

ch09.CartesianPt2.distanceTo0   (Method)
   [PointDCloserSimplify.java, 46]

ch09.CartesianPt2.x   (Variable)
   [PointDCloserSimplify.java, 33]

ch09.CartesianPt2.y   (Variable)
   [PointDCloserSimplify.java, 34]

ch09.Circle   (Class)
   [ShapeD.java, 14]

ch09.Circle.accept(ShapeVisitorI ask)   (Method)
   [ShapeD.java, 22]

ch09.Circle.accept.ask   (Parameter)
   [ShapeD.java, 22]

ch09.Circle.Circle(int _r)   (Public Constructor)
   [ShapeD.java, 17]

ch09.Circle.Circle._r   (Parameter)
   [ShapeD.java, 17]

ch09.Circle.r   (Variable)
   [ShapeD.java, 16]

ch09.HasPtV   (Class)
   [ShapeD.java, 58]

ch09.HasPtV.forCircle(int r)   (Public Method)
   [ShapeD.java, 66]

ch09.HasPtV.forCircle.r   (Parameter)
   [ShapeD.java, 66]

ch09.HasPtV.forSquare(int s)   (Public Method)
   [ShapeD.java, 72]

ch09.HasPtV.forSquare.s   (Parameter)
   [ShapeD.java, 72]

ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)   (Public Method)
   [ShapeD.java, 78]

ch09.HasPtV.forTrans.q   (Parameter)
   [ShapeD.java, 78]

ch09.HasPtV.forTrans.s   (Parameter)
   [ShapeD.java, 78]

ch09.HasPtV.HasPtV(PointDCloserSimplify _p)   (Public Constructor)
   [ShapeD.java, 61]
                                                                     Page 72
                         Data Dictionary Summary Report
===============================================================================

ch09.HasPtV.HasPtV._p   (Parameter)
   [ShapeD.java, 61]

ch09.HasPtV.p   (Variable)
   [ShapeD.java, 60]

ch09.ManHattanPt2   (Class)
   [PointDCloserSimplify.java, 56]

ch09.ManHattanPt2.closerTo0(CartesianPt2 p1)   (Method)
   [PointDCloserSimplify.java, 74]

ch09.ManHattanPt2.closerTo0.p1   (Parameter)
   [PointDCloserSimplify.java, 74]

ch09.ManHattanPt2.distanceTo0   (Method)
   [PointDCloserSimplify.java, 69]

ch09.ManHattanPt2.ManHattanPt2(int _x,int _y)   (Public Constructor)
   [PointDCloserSimplify.java, 64]

ch09.ManHattanPt2.ManHattanPt2._x   (Parameter)
   [PointDCloserSimplify.java, 64]

ch09.ManHattanPt2.ManHattanPt2._y   (Parameter)
   [PointDCloserSimplify.java, 64]

ch09.ManHattanPt2.x   (Variable)
   [PointDCloserSimplify.java, 57]

ch09.ManHattanPt2.y   (Variable)
   [PointDCloserSimplify.java, 58]

ch09.PointDCloserSimplify   (Public Abstract Class)
   [PointDCloserSimplify.java, 7]

ch09.PointDCloserSimplify.closerTo0(CartesianPt2 p1)   (Method)
   [PointDCloserSimplify.java, 19]

ch09.PointDCloserSimplify.closerTo0.p1   (Parameter)
   [PointDCloserSimplify.java, 19]

ch09.PointDCloserSimplify.distanceTo0   (Abstract Method)
   [PointDCloserSimplify.java, 17]

ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)   (Method)
   [PointDCloserSimplify.java, 23]

ch09.PointDCloserSimplify.minus.p   (Parameter)
   [PointDCloserSimplify.java, 23]

ch09.PointDCloserSimplify.PointDCloserSimplify(int _x,int _y)   (Public Constructor)
   [PointDCloserSimplify.java, 11]
                                                                     Page 73
                         Data Dictionary Summary Report
===============================================================================

ch09.PointDCloserSimplify.PointDCloserSimplify._x   (Parameter)
   [PointDCloserSimplify.java, 11]

ch09.PointDCloserSimplify.PointDCloserSimplify._y   (Parameter)
   [PointDCloserSimplify.java, 11]

ch09.PointDCloserSimplify.x   (Variable)
   [PointDCloserSimplify.java, 9]

ch09.PointDCloserSimplify.y   (Variable)
   [PointDCloserSimplify.java, 10]

ch09.ShadowCartesian   (Class)
   [ShadowCartesian.java, 8]

ch09.ShadowCartesian.distanceTo0   (Method)
   [ShadowCartesian.java, 20]

ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)   (Public Constructor)
   [ShadowCartesian.java, 11]

ch09.ShadowCartesian.ShadowCartesian._tx   (Parameter)
   [ShadowCartesian.java, 11]

ch09.ShadowCartesian.ShadowCartesian._ty   (Parameter)
   [ShadowCartesian.java, 11]

ch09.ShadowCartesian.ShadowCartesian._x   (Parameter)
   [ShadowCartesian.java, 11]

ch09.ShadowCartesian.ShadowCartesian._y   (Parameter)
   [ShadowCartesian.java, 11]

ch09.ShadowCartesian.tx   (Variable)
   [ShadowCartesian.java, 9]

ch09.ShadowCartesian.ty   (Variable)
   [ShadowCartesian.java, 10]

ch09.ShapeD   (Abstract Class)
   [ShapeD.java, 3]

ch09.ShapeD.accept(ShapeVisitorI ask)   (Abstract Method)
   [ShapeD.java, 4]

ch09.ShapeD.accept.ask   (Parameter)
   [ShapeD.java, 4]

ch09.ShapeVisitorI   (Interface)
   [ShapeD.java, 7]

ch09.ShapeVisitorI.forCircle(int r)   (Abstract Method)
   [ShapeD.java, 8]
                                                                     Page 74
                         Data Dictionary Summary Report
===============================================================================

ch09.ShapeVisitorI.forCircle.r   (Parameter)
   [ShapeD.java, 8]

ch09.ShapeVisitorI.forSquare(int s)   (Abstract Method)
   [ShapeD.java, 9]

ch09.ShapeVisitorI.forSquare.s   (Parameter)
   [ShapeD.java, 9]

ch09.ShapeVisitorI.forTrans(PointDCloserSimplify q,ShapeD s)   (Abstract Method)
   [ShapeD.java, 10]

ch09.ShapeVisitorI.forTrans.q   (Parameter)
   [ShapeD.java, 10]

ch09.ShapeVisitorI.forTrans.s   (Parameter)
   [ShapeD.java, 10]

ch09.Square   (Class)
   [ShapeD.java, 29]

ch09.Square.accept(ShapeVisitorI ask)   (Method)
   [ShapeD.java, 36]

ch09.Square.accept.ask   (Parameter)
   [ShapeD.java, 36]

ch09.Square.s   (Variable)
   [ShapeD.java, 30]

ch09.Square.Square(int _s)   (Public Constructor)
   [ShapeD.java, 31]

ch09.Square.Square._s   (Parameter)
   [ShapeD.java, 31]

ch09.Test   (Public Class)
   [Test.java, 3]

ch09.Test.main(String[] args)   (Public Static Method)
   [Test.java, 5]

ch09.Test.main.args   (Parameter)
   [Test.java, 5]

ch09.Test.main.mhpt   (Variable)
   [Test.java, 6]

ch09.Trans   (Class)
   [ShapeD.java, 42]

ch09.Trans.accept(ShapeVisitorI ask)   (Method)
   [ShapeD.java, 51]
                                                                     Page 75
                         Data Dictionary Summary Report
===============================================================================

ch09.Trans.accept.ask   (Parameter)
   [ShapeD.java, 51]

ch09.Trans.q   (Variable)
   [ShapeD.java, 43]

ch09.Trans.s   (Variable)
   [ShapeD.java, 44]

ch09.Trans.Trans(PointDCloserSimplify _q,ShapeD _s)   (Public Constructor)
   [ShapeD.java, 45]

ch09.Trans.Trans._q   (Parameter)
   [ShapeD.java, 45]

ch09.Trans.Trans._s   (Parameter)
   [ShapeD.java, 45]

ch09.Union   (Class)
   [Union.java, 3]

ch09.Union.accept(ShapeVisitorI ask)   (Method)
   [Union.java, 12]

ch09.Union.accept.ask   (Parameter)
   [Union.java, 12]

ch09.Union.s   (Variable)
   [Union.java, 4]

ch09.Union.t   (Variable)
   [Union.java, 5]

ch09.Union.Union(ShapeD _s,ShapeD _t)   (Public Constructor)
   [Union.java, 6]

ch09.Union.Union._s   (Parameter)
   [Union.java, 6]

ch09.Union.Union._t   (Parameter)
   [Union.java, 6]

ch09.UnionHasPtV   (Class)
   [Union.java, 23]

ch09.UnionHasPtV.forUnion(ShapeD s,ShapeD t)   (Public Method)
   [Union.java, 30]

ch09.UnionHasPtV.forUnion.s   (Parameter)
   [Union.java, 30]

ch09.UnionHasPtV.forUnion.t   (Parameter)
   [Union.java, 30]
                                                                     Page 76
                         Data Dictionary Summary Report
===============================================================================

ch09.UnionHasPtV.UnionHasPtV(CartesianPt2 _p)   (Public Constructor)
   [Union.java, 25]

ch09.UnionHasPtV.UnionHasPtV._p   (Parameter)
   [Union.java, 25]

ch09.UnionVisitorI   (Interface)
   [Union.java, 19]

ch09.UnionVisitorI.forUnion(ShapeD s,ShapeD t)   (Abstract Method)
   [Union.java, 20]

ch09.UnionVisitorI.forUnion.s   (Parameter)
   [Union.java, 20]

ch09.UnionVisitorI.forUnion.t   (Parameter)
   [Union.java, 20]

ch10   (Package)
   [Mian.java, 1]

ch10.AnchovyFish   (Class)
   [PieD.java, 129]

ch10.AnchovyFish.equals(Object o)   (Public Method)
   [PieD.java, 132]

ch10.AnchovyFish.equals.o   (Parameter)
   [PieD.java, 132]

ch10.AnchovyFish.toString   (Public Method)
   [PieD.java, 137]

ch10.Bot   (Class)
   [PieD.java, 95]

ch10.Bot.accept(PieVistor1 ask)   (Method)
   [PieD.java, 98]

ch10.Bot.accept.ask   (Parameter)
   [PieD.java, 98]

ch10.FishD   (Abstract Class)
   [PieD.java, 125]

ch10.FishD.equals(Object o)   (Public Abstract Method)
   [PieD.java, 126]

ch10.FishD.equals.o   (Parameter)
   [PieD.java, 126]

ch10.LtSubstV   (Class)
   [PieD.java, 54]
                                                                     Page 77
                         Data Dictionary Summary Report
===============================================================================

ch10.LtSubstV.c   (Variable)
   [PieD.java, 56]

ch10.LtSubstV.forBot   (Public Method)
   [PieD.java, 66]

ch10.LtSubstV.forTop(Object t,PieD r)   (Public Method)
   [PieD.java, 72]

ch10.LtSubstV.forTop.r   (Parameter)
   [PieD.java, 72]

ch10.LtSubstV.forTop.t   (Parameter)
   [PieD.java, 72]

ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)   (Public Constructor)
   [PieD.java, 59]

ch10.LtSubstV.LtSubstV._c   (Parameter)
   [PieD.java, 59]

ch10.LtSubstV.LtSubstV._n   (Parameter)
   [PieD.java, 59]

ch10.LtSubstV.LtSubstV._o   (Parameter)
   [PieD.java, 59]

ch10.LtSubstV.n   (Variable)
   [PieD.java, 57]

ch10.LtSubstV.o   (Variable)
   [PieD.java, 58]

ch10.Mian   (Public Class)
   [Mian.java, 3]

ch10.Mian.main(String[] args)   (Public Static Method)
   [Mian.java, 4]

ch10.Mian.main.args   (Parameter)
   [Mian.java, 4]

ch10.Mian.main.y   (Variable)
   [Mian.java, 6]

ch10.OccursV   (Class)
   [PiemanM.java, 52]

ch10.OccursV.a   (Variable)
   [PiemanM.java, 54]

ch10.OccursV.forBot   (Public Method)
   [PiemanM.java, 61]
                                                                     Page 78
                         Data Dictionary Summary Report
===============================================================================

ch10.OccursV.forTop(Object t,PieD r)   (Public Method)
   [PiemanM.java, 67]

ch10.OccursV.forTop.r   (Parameter)
   [PiemanM.java, 67]

ch10.OccursV.forTop.t   (Parameter)
   [PiemanM.java, 67]

ch10.OccursV.OccursV(Object _a)   (Public Constructor)
   [PiemanM.java, 55]

ch10.OccursV.OccursV._a   (Parameter)
   [PiemanM.java, 55]

ch10.PieD   (Public Abstract Class)
   [PieD.java, 87]

ch10.PieD.accept(PieVistor1 ask)   (Abstract Method)
   [PieD.java, 92]

ch10.PieD.accept.ask   (Parameter)
   [PieD.java, 92]

ch10.PiemanI   (Interface)
   [PiemanM.java, 3]

ch10.PiemanI.addTop(Object t)   (Abstract Method)
   [PiemanM.java, 5]

ch10.PiemanI.addTop.t   (Parameter)
   [PiemanM.java, 5]

ch10.PiemanI.occTop(Object o)   (Abstract Method)
   [PiemanM.java, 8]

ch10.PiemanI.occTop.o   (Parameter)
   [PiemanM.java, 8]

ch10.PiemanI.remTop(Object t)   (Abstract Method)
   [PiemanM.java, 6]

ch10.PiemanI.remTop.t   (Parameter)
   [PiemanM.java, 6]

ch10.PiemanI.substTop(Object n,Object o)   (Abstract Method)
   [PiemanM.java, 7]

ch10.PiemanI.substTop.n   (Parameter)
   [PiemanM.java, 7]

ch10.PiemanI.substTop.o   (Parameter)
   [PiemanM.java, 7]
                                                                     Page 79
                         Data Dictionary Summary Report
===============================================================================

ch10.PiemanM   (Class)
   [PiemanM.java, 10]

ch10.PiemanM.addTop(Object t)   (Public Method)
   [PiemanM.java, 18]

ch10.PiemanM.addTop.t   (Parameter)
   [PiemanM.java, 18]

ch10.PiemanM.occTop(Object o)   (Public Method)
   [PiemanM.java, 39]

ch10.PiemanM.occTop.o   (Parameter)
   [PiemanM.java, 39]

ch10.PiemanM.p   (Variable)
   [PiemanM.java, 12]

ch10.PiemanM.PiemanM(PieD _p)   (Public Constructor)
   [PiemanM.java, 13]

ch10.PiemanM.PiemanM._p   (Parameter)
   [PiemanM.java, 13]

ch10.PiemanM.remTop(Object t)   (Public Method)
   [PiemanM.java, 25]

ch10.PiemanM.remTop.t   (Parameter)
   [PiemanM.java, 25]

ch10.PiemanM.substTop(Object n,Object o)   (Public Method)
   [PiemanM.java, 32]

ch10.PiemanM.substTop.n   (Parameter)
   [PiemanM.java, 32]

ch10.PiemanM.substTop.o   (Parameter)
   [PiemanM.java, 32]

ch10.PiemanM.toString   (Public Method)
   [PiemanM.java, 45]

ch10.PieVistor1   (Interface)
   [PieD.java, 7]

ch10.PieVistor1.forBot   (Abstract Method)
   [PieD.java, 8]

ch10.PieVistor1.forTop(Object t,PieD r)   (Abstract Method)
   [PieD.java, 9]

ch10.PieVistor1.forTop.r   (Parameter)
   [PieD.java, 9]
                                                                     Page 80
                         Data Dictionary Summary Report
===============================================================================

ch10.PieVistor1.forTop.t   (Parameter)
   [PieD.java, 9]

ch10.RemV   (Class)
   [PieD.java, 12]

ch10.RemV.forBot   (Public Method)
   [PieD.java, 19]

ch10.RemV.forTop(Object t,PieD r)   (Public Method)
   [PieD.java, 23]

ch10.RemV.forTop.r   (Parameter)
   [PieD.java, 23]

ch10.RemV.forTop.t   (Parameter)
   [PieD.java, 23]

ch10.RemV.o   (Variable)
   [PieD.java, 13]

ch10.RemV.RemV(Object _o)   (Public Constructor)
   [PieD.java, 14]

ch10.RemV.RemV._o   (Parameter)
   [PieD.java, 14]

ch10.SalmonFish   (Class)
   [PieD.java, 144]

ch10.SalmonFish.equals(Object o)   (Public Method)
   [PieD.java, 147]

ch10.SalmonFish.equals.o   (Parameter)
   [PieD.java, 147]

ch10.SubstV   (Class)
   [PieD.java, 33]

ch10.SubstV.forBot   (Public Method)
   [PieD.java, 41]

ch10.SubstV.forTop(Object t,PieD r)   (Public Method)
   [PieD.java, 45]

ch10.SubstV.forTop.r   (Parameter)
   [PieD.java, 45]

ch10.SubstV.forTop.t   (Parameter)
   [PieD.java, 45]

ch10.SubstV.n   (Variable)
   [PieD.java, 34]
                                                                     Page 81
                         Data Dictionary Summary Report
===============================================================================

ch10.SubstV.o   (Variable)
   [PieD.java, 35]

ch10.SubstV.SubstV(Object _n,Object _o)   (Public Constructor)
   [PieD.java, 36]

ch10.SubstV.SubstV._n   (Parameter)
   [PieD.java, 36]

ch10.SubstV.SubstV._o   (Parameter)
   [PieD.java, 36]

ch10.Top   (Class)
   [PieD.java, 106]

ch10.Top.accept(PieVistor1 ask)   (Method)
   [PieD.java, 116]

ch10.Top.accept.ask   (Parameter)
   [PieD.java, 116]

ch10.Top.r   (Variable)
   [PieD.java, 109]

ch10.Top.t   (Variable)
   [PieD.java, 108]

ch10.Top.Top(Object t,PieD r)   (Public Constructor)
   [PieD.java, 110]

ch10.Top.Top.r   (Parameter)
   [PieD.java, 110]

ch10.Top.Top.t   (Parameter)
   [PieD.java, 110]

ch10.TunaFish   (Class)
   [PieD.java, 154]

ch10.TunaFish.equals(Object o)   (Public Method)
   [PieD.java, 157]

ch10.TunaFish.equals.o   (Parameter)
   [PieD.java, 157]

java.lang.Object.getClass   (Unresolved Method)
   [Object.java, 63]

ReCall   (Package)
   [Callback.java, 1]

ReCall.Callback   (Public Interface)
   [Callback.java, 3]
                                                                     Page 82
                         Data Dictionary Summary Report
===============================================================================

receive(String result)   (Public Abstract Method)
   [Callback.java, 8]

receive.result   (Parameter)
   [Callback.java, 8]

ReCall.Stranger   (Public Class)
   [Stranger.java, 3]

receive(String result)   (Public Method)
   [Stranger.java, 34]

receive.result   (Parameter)
   [Stranger.java, 34]

ReCall.Stranger.askQuestion(String question)   (Public Method)
   [Stranger.java, 10]

ReCall.Stranger.askQuestion.(Anon_1)   (Anonymous Class)
   [Stranger.java, 11]

ReCall.Stranger.askQuestion.(Anon_1).run   (Public Method)
   [Stranger.java, 13]

ReCall.Stranger.askQuestion.question   (Parameter)
   [Stranger.java, 10]

ReCall.Stranger.play   (Private Method)
   [Stranger.java, 29]

ReCall.Stranger.Stranger(Ye ye)   (Public Constructor)
   [Stranger.java, 5]

ReCall.Stranger.Stranger.ye   (Parameter)
   [Stranger.java, 5]

ReCall.Stranger.ye   (Private Variable)
   [Stranger.java, 4]

ReCall.Test   (Public Class)
   [Test.java, 3]

ReCall.Test.main(String[] args)   (Public Static Method)
   [Test.java, 4]

ReCall.Test.main.args   (Parameter)
   [Test.java, 4]

ReCall.Test.main.stranger   (Variable)
   [Test.java, 9]

ReCall.Test.main.xiaodong   (Variable)
   [Test.java, 8]
                                                                     Page 83
                         Data Dictionary Summary Report
===============================================================================

ReCall.Test.main.zhaoliang   (Variable)
   [Test.java, 5]

ReCall.Wang   (Public Class)
   [Wang.java, 3]

receive(String result)   (Public Method)
   [Wang.java, 45]

receive.result   (Parameter)
   [Wang.java, 45]

ReCall.Wang.askQuestion(String question)   (Public Method)
   [Wang.java, 21]

ReCall.Wang.askQuestion.(Anon_1)   (Anonymous Class)
   [Wang.java, 22]

ReCall.Wang.askQuestion.(Anon_1).run   (Public Method)
   [Wang.java, 24]

ReCall.Wang.askQuestion.question   (Parameter)
   [Wang.java, 21]

ReCall.Wang.play   (Private Method)
   [Wang.java, 40]

ReCall.Wang.Wang(Ye ye)   (Public Constructor)
   [Wang.java, 13]

ReCall.Wang.Wang.ye   (Parameter)
   [Wang.java, 13]

ReCall.Wang.ye   (Private Variable)
   [Wang.java, 7]

ReCall.Ye   (Public Class)
   [Ye.java, 3]

accept(Callback callback,String question)   (Public Method)
   [Ye.java, 10]

accept.(for_loop_1).i   (Variable)
   [Ye.java, 16]

accept.(for_loop_2).i   (Variable)
   [Ye.java, 31]

accept.callback   (Parameter)
   [Ye.java, 10]

accept.question   (Parameter)
   [Ye.java, 10]
                                                                     Page 84
                         Data Dictionary Summary Report
===============================================================================

accept.result   (Variable)
   [Ye.java, 23]

YeRestaurant   (Package)
   [Food.java, 1]

YeRestaurant.Cai   (Package)
   [Apple.java, 1]

YeRestaurant.Cai.Apple   (Public Class)
   [Apple.java, 5]

YeRestaurant.Cai.Apple.getFoodName   (Public Method)
   [Apple.java, 7]

YeRestaurant.Cai.Banana   (Public Class)
   [Banana.java, 5]

YeRestaurant.Cai.Banana.getFoodName   (Public Method)
   [Banana.java, 7]

YeRestaurant.Cai.HongShaoRou   (Public Class)
   [HongShaoRou.java, 5]

YeRestaurant.Cai.HongShaoRou.getFoodName   (Public Method)
   [HongShaoRou.java, 7]

YeRestaurant.Cai.QingJiaoRouSi   (Public Class)
   [QingJiaoRouSi.java, 5]

YeRestaurant.Cai.QingJiaoRouSi.getFoodName   (Public Method)
   [QingJiaoRouSi.java, 7]

YeRestaurant.Cai.SuanTaiChaoRou   (Public Class)
   [SuanTaiChaoRou.java, 5]

YeRestaurant.Cai.SuanTaiChaoRou.getFoodName   (Public Method)
   [SuanTaiChaoRou.java, 7]

YeRestaurant.Cai.TangCuLiYu   (Public Class)
   [TangCuLiYu.java, 5]

YeRestaurant.Cai.TangCuLiYu.getFoodName   (Public Method)
   [TangCuLiYu.java, 7]

YeRestaurant.Food   (Public Interface)
   [Food.java, 3]

YeRestaurant.Food.getFoodName   (Abstract Method)
   [Food.java, 4]

YeRestaurant.Restaurant   (Public Class)
   [Restaurant.java, 9]
                                                                     Page 85
                         Data Dictionary Summary Report
===============================================================================

YeRestaurant.Restaurant.foods   (Private Variable)
   [Restaurant.java, 36]

YeRestaurant.Restaurant.init   (Public Method)
   [Restaurant.java, 42]

YeRestaurant.Restaurant.init.(catch_1).e   (Catch Parameter)
   [Restaurant.java, 59]

YeRestaurant.Restaurant.init.(catch_2).e   (Catch Parameter)
   [Restaurant.java, 74]

YeRestaurant.Restaurant.init.(catch_3).e   (Catch Parameter)
   [Restaurant.java, 78]

YeRestaurant.Restaurant.init.(catch_4).e   (Catch Parameter)
   [Restaurant.java, 82]

YeRestaurant.Restaurant.init.(for_loop_1).food   (Variable)
   [Restaurant.java, 71]

YeRestaurant.Restaurant.init.(for_loop_1).foodClassName   (Variable)
   [Restaurant.java, 65]

YeRestaurant.Restaurant.init.(for_loop_1).temp   (Variable)
   [Restaurant.java, 67]

YeRestaurant.Restaurant.init.coll1   (Variable)
   [Restaurant.java, 64]

YeRestaurant.Restaurant.init.is   (Variable)
   [Restaurant.java, 46]

YeRestaurant.Restaurant.init.prop   (Variable)
   [Restaurant.java, 47]

YeRestaurant.Restaurant.main(String[] args)   (Public Static Method)
   [Restaurant.java, 97]

YeRestaurant.Restaurant.main.args   (Parameter)
   [Restaurant.java, 97]

YeRestaurant.Restaurant.main.res   (Variable)
   [Restaurant.java, 101]

YeRestaurant.Restaurant.Restaurant   (Public Constructor)
   [Restaurant.java, 39]

YeRestaurant.Restaurant.showFoods   (Public Method)
   [Restaurant.java, 89]

YeRestaurant.Restaurant.showFoods.(for_loop_2).temp   (Variable)
   [Restaurant.java, 91]
                                                                     Page 86
                              File Contents Report
===============================================================================

Apple.java
  Classes
    YeRestaurant.Cai.Apple

Banana.java
  Classes
    YeRestaurant.Cai.Banana

Callback.java
  Interfaces
    ReCall.Callback

ExprD.java
  Classes
    ch081.Const
    ch081.Diff
    ch081.EvalV
    ch081.ExprD
    ch081.IntEvalV
    ch081.Plus
    ch081.Prod
  Interfaces
    ch081.ExprVisitorI

ExprD.java
  Classes
    ch08.Const
    ch08.Diff
    ch08.ExprD
    ch08.IntEvalV
    ch08.Plus
    ch08.Prod
  Interfaces
    ch08.ExprVisitorI

Food.java
  Interfaces
    YeRestaurant.Food

FruitD.java
  Classes
    ch07.Apple
    ch07.Fig
    ch07.FruitD
    ch07.Lemon
    ch07.Peach
    ch07.Pear

FruitD.java
  Classes
    ch071.Apple
    ch071.Fig
    ch071.FruitD
    ch071.Lemon
    ch071.Peach
    ch071.Pear

HongShaoRou.java
  Classes
    YeRestaurant.Cai.HongShaoRou

KaoRou.java
  Classes
    ch02.Holder
    ch02.KaoRou
    ch02.Pepper
    ch02.Radish
    ch02.Shallot
    ch02.Shrimp
    ch02.Zucchini

KaoRouChuan.java
  Classes
    ch02.Dagger
    ch02.KaoRouChuan
    ch02.Sabre
    ch02.Sword

KaoRouPlates.java
  Classes
    ch02.Brass
    ch02.Copper
    ch02.Gold
    ch02.KaoRouPlates
    ch02.Silver
    ch02.Wood

LayerD.java
  Classes
    ch01.Base
    ch01.LayerD
    ch01.Slice

Main.java
  Classes
    ch02.Main

Mian.java
  Classes
    ch10.Mian

NumD.java
  Classes
    ch02.MoreThanOne
    ch02.NumD
    ch02.Zero

NumD.java
  Classes
    ch01.MoreThanOne
    ch01.NumD
    ch01.Zero

NumD.java
  Classes
    ch05.MoreThanOne
    ch05.NumD
    ch05.Zero

PieD.java
  Classes
    ch06.AnchovyFish
    ch06.Bot
    ch06.FishD
    ch06.PieD
    ch06.RemV
    ch06.SalmonFish
    ch06.SubstV
    ch06.Top
    ch06.TunaFish

PieD.java
  Classes
    ch081.Bot
    ch081.LtSubstV
    ch081.PieD
    ch081.RemV
    ch081.SubstV
    ch081.Top
  Interfaces
    ch081.PieVistor1

PieD.java
  Classes
    ch061.AnchovyFish
    ch061.Bot
    ch061.FishD
    ch061.PieD
    ch061.RemV
    ch061.SalmonFish
    ch061.SubstV
    ch061.Top
    ch061.TunaFish

PieD.java
  Classes
    ch05.AnchovyFish
    ch05.Bot
    ch05.FishD
    ch05.PieD
    ch05.RemAV
    ch05.RemFishV
    ch05.SalmonFish
    ch05.Top
    ch05.TunaFish

PieD.java
  Classes
    ch062.Bot
    ch062.LtSubstV
    ch062.PieD
    ch062.RemV
    ch062.SubstV
    ch062.Top
  Interfaces
    ch062.PieVistor1

PieD.java
  Classes
    ch10.AnchovyFish
    ch10.Bot
    ch10.FishD
    ch10.LtSubstV
    ch10.PieD
    ch10.RemV
    ch10.SalmonFish
    ch10.SubstV
    ch10.Top
    ch10.TunaFish
  Interfaces
    ch10.PieVistor1

PieD.java
  Classes
    ch051.AnchovyFish
    ch051.Bot
    ch051.FishD
    ch051.PieD
    ch051.RemFishInt
    ch051.RemFishV
    ch051.RemV
    ch051.SalmonFish
    ch051.SubstFishV
    ch051.SubstIntV
    ch051.SubstV
    ch051.Top
    ch051.TunaFish

PieDGeneral.java
  Classes
    ch05.Bot1
    ch05.PieDGeneral
    ch05.RemFishInt
    ch05.RemFishV1
    ch05.RemV
    ch05.Top1

PieDUpdate.java
  Classes
    ch0801That.Bot
    ch0801That.LtSubstV
    ch0801That.PieDUpdate
    ch0801That.RemV
    ch0801That.SubstV
    ch0801That.Top
  Interfaces
    ch0801That.PieVistor1

PiemanM.java
  Classes
    ch10.OccursV
    ch10.PiemanM
  Interfaces
    ch10.PiemanI

PizzaD.java
  Classes
    ch03.Anchovy
    ch03.Cheese
    ch03.Crust
    ch03.Olive
    ch03.PizzaD
    ch03.Sausage
    ch03.Spinach

PointD.java
  Classes
    ch01.CartesianPt
    ch01.ManHattanPt
    ch01.PointD

PointD.java
  Classes
    ch02.CartesianPt
    ch02.ManHattanPt
    ch02.PointD

PointDCloser.java
  Classes
    ch02.CartesianPt1
    ch02.ManHattanPt1
    ch02.PointDCloser

PointDCloserSimplify.java
  Classes
    ch02.CartesianPt2
    ch02.ManHattanPt2
    ch02.PointDCloserSimplify

PointDCloserSimplify.java
  Classes
    ch09.CartesianPt2
    ch09.ManHattanPt2
    ch09.PointDCloserSimplify

QingJiaoRouSi.java
  Classes
    YeRestaurant.Cai.QingJiaoRouSi

Restaurant.java
  Classes
    YeRestaurant.Restaurant

Seasoning.java
  Classes
    ch01.Pepper
    ch01.Sage
    ch01.Salt
    ch01.Seasoning
    ch01.Thyme

SetD.java
  Classes
    ch08.Add
    ch08.Empty
    ch08.SetD
    ch08.SetEvalV

SetD.java
  Classes
    ch081.Add
    ch081.Empty
    ch081.SetD
    ch081.SetEvalV

ShadowCartesian.java
  Classes
    ch09.ShadowCartesian

ShapeD.java
  Classes
    ch09.Circle
    ch09.HasPtV
    ch09.ShapeD
    ch09.Square
    ch09.Trans
  Interfaces
    ch09.ShapeVisitorI

Stranger.java
  Classes
    ReCall.Stranger

SuanTaiChaoRou.java
  Classes
    YeRestaurant.Cai.SuanTaiChaoRou

SubstD.java
  Classes
    ch081.LtSubstV1
    ch081.SubstD
    ch081.SubstV1

SubstVExt.java
  Classes
    ch081.LtSubstV2
    ch081.SubstVExt

TangCuLiYu.java
  Classes
    YeRestaurant.Cai.TangCuLiYu

Test.java
  Classes
    ch02.Test

Test.java
  Classes
    ReCall.Test

Test.java
  Classes
    ch09.Test

Test.java
  Classes
    ch01.Test

TestMain.java
  Classes
    ch01.TestMain

TestPieD.java
  Classes
    ch081.TestPieD

TestThat.java
  Classes
    ch0801That.TestThat

TestTYangRouChuan.java
  Classes
    ch02.TestTYangRouChuan

TreeD.java
  Classes
    ch071.Bud
    ch071.Flat
    ch071.HasFruitV
    ch071.IHeightV
    ch071.IOccursV
    ch071.IsFlatV
    ch071.IsSplitV
    ch071.Split
    ch071.TreeD
    ch071.TSubstsV
  Interfaces
    ch071.TreeVisitorI

TreeD.java
  Classes
    ch07.BHasFruitV
    ch07.BIsFlatV
    ch07.BIsSplitV
    ch07.Bud
    ch07.Flat
    ch07.IHeightV
    ch07.IOccursV
    ch07.Split
    ch07.TreeD
    ch07.TSubstsV
  Interfaces
    ch07.BTreeVisitorI
    ch07.ITreeVisitorI
    ch07.TTreeVisitorI

Union.java
  Classes
    ch09.Union
    ch09.UnionHasPtV
  Interfaces
    ch09.UnionVisitorI

Wang.java
  Classes
    ReCall.Wang

YangRouChuan.java
  Classes
    ch04.IsVegetarianV
    ch04.Lamb
    ch04.Onion
    ch04.OnlyOnionsV
    ch04.Skewer
    ch04.Tomato
    ch04.YangRouChuan

YangRouChuan.java
  Classes
    ch02.Lamb
    ch02.Onion
    ch02.Skewer
    ch02.Tomato
    ch02.YangRouChuan

Ye.java
  Classes
    ReCall.Ye
                                                                     Page 87
                      Program Unit Cross Reference Report
===============================================================================

ch01   (Package)
    Define [LayerD.java, 1]          LayerD.java
    Declare [LayerD.java, 1]         LayerD.java
    Define [NumD.java, 1]            NumD.java
    Declare [NumD.java, 1]           NumD.java
    Define [Seasoning.java, 1]       Seasoning.java
    Declare [Seasoning.java, 1]      Seasoning.java
    Define [Test.java, 1]            Test.java
    Declare [Test.java, 1]           Test.java
    Define [PointD.java, 1]          PointD.java
    Declare [PointD.java, 1]         PointD.java
    Define [TestMain.java, 1]        TestMain.java
    Declare [TestMain.java, 1]       TestMain.java

ch01.Base.Base(Object _o)   (Public Constructor)
    Define [LayerD.java, 17]         ch01.Base

ch01.CartesianPt.CartesianPt(int _x,int _y)   (Public Constructor)
    Define [PointD.java, 14]         ch01.CartesianPt

ch01.ManHattanPt.ManHattanPt(int _x,int _y)   (Public Constructor)
    Define [PointD.java, 27]         ch01.ManHattanPt
    Call [Test.java, 6]              ch01.Test.main(String[] args)
    Call [TestMain.java, 5]          ch01.TestMain.main(String[] args)

ch01.ManHattanPt.toString   (Public Method)
  Declared as: String
    Define [PointD.java, 34]         ch01.ManHattanPt
    Override [PointD.java, 34]       java.lang.Object.toString

ch01.MoreThanOne.MoreThanOne(NumD _d)   (Public Constructor)
    Define [NumD.java, 46]           ch01.MoreThanOne

ch01.Slice.Slice(LayerD _s)   (Public Constructor)
    Define [LayerD.java, 28]         ch01.Slice

ch01.Test.main(String[] args)   (Public Static Method)
  Declared as: void
    Define [Test.java, 5]            ch01.Test

ch01.TestMain.main(String[] args)   (Public Static Method)
  Declared as: void
    Define [TestMain.java, 4]        ch01.TestMain

ch02   (Package)
    Define [KaoRou.java, 1]          KaoRou.java
    Declare [KaoRou.java, 1]         KaoRou.java
    Define [Test.java, 1]            Test.java
    Declare [Test.java, 1]           Test.java
    Define [TestTYangRouChuan.java, 1]   TestTYangRouChuan.java
    Declare [TestTYangRouChuan.java, 1]   TestTYangRouChuan.java
    Define [NumD.java, 1]            NumD.java
    Declare [NumD.java, 1]           NumD.java
    Define [YangRouChuan.java, 1]    YangRouChuan.java
    Declare [YangRouChuan.java, 1]   YangRouChuan.java
                                                                     Page 88
                      Program Unit Cross Reference Report
===============================================================================
    Define [PointDCloserSimplify.java, 1]   PointDCloserSimplify.java
    Declare [PointDCloserSimplify.java, 1]   PointDCloserSimplify.java
    Define [PointDCloser.java, 1]    PointDCloser.java
    Declare [PointDCloser.java, 1]   PointDCloser.java
    Define [Main.java, 1]            Main.java
    Declare [Main.java, 1]           Main.java
    Define [KaoRouPlates.java, 1]    KaoRouPlates.java
    Declare [KaoRouPlates.java, 1]   KaoRouPlates.java
    Define [KaoRouChuan.java, 1]     KaoRouChuan.java
    Declare [KaoRouChuan.java, 1]    KaoRouChuan.java
    Define [PointD.java, 1]          PointD.java
    Declare [PointD.java, 1]         PointD.java

ch02.CartesianPt.CartesianPt(int _x,int _y)   (Public Constructor)
    Define [PointD.java, 23]         ch02.CartesianPt
    Call [Main.java, 6]              ch02.Main.main(String[] args)

ch02.CartesianPt.distanceTo0   (Method)
  Declared as: int
    Define [PointD.java, 29]         ch02.CartesianPt
    Override [PointD.java, 29]       ch02.PointD.distanceTo0
    Call [PointDCloserSimplify.java, 57]   ch02.ManHattanPt2.closerTo0(CartesianPt p1)

ch02.CartesianPt1.CartesianPt1(int _x,int _y)   (Public Constructor)
    Define [PointDCloser.java, 18]   ch02.CartesianPt1

ch02.CartesianPt1.closerTo0(CartesianPt1 p1)   (Method)
  Declared as: boolean
    Define [PointDCloser.java, 30]   ch02.CartesianPt1

ch02.CartesianPt1.distanceTo0   (Method)
  Declared as: int
    Define [PointDCloser.java, 24]   ch02.CartesianPt1
    Call [PointDCloser.java, 32]     ch02.CartesianPt1.closerTo0(CartesianPt1 p1)
    Call [PointDCloser.java, 32]     ch02.CartesianPt1.closerTo0(CartesianPt1 p1)
    Override [PointDCloser.java, 24]   ch02.PointDCloser.distanceTo0

ch02.CartesianPt2.CartesianPt2(int _x,int _y)   (Public Constructor)
    Define [PointDCloserSimplify.java, 25]   ch02.CartesianPt2

ch02.CartesianPt2.distanceTo0   (Method)
  Declared as: int
    Define [PointDCloserSimplify.java, 31]   ch02.CartesianPt2
    Override [PointDCloserSimplify.java, 31]   ch02.PointDCloserSimplify.distanceTo0
    Call [PointDCloserSimplify.java, 15]   ch02.PointDCloserSimplify.closerTo0(CartesianPt2 p1)

ch02.Holder.Holder(Object _o)   (Public Constructor)
    Define [KaoRou.java, 23]         ch02.Holder

ch02.Holder.isVeggie   (Method)
  Declared as: boolean
    Define [KaoRou.java, 28]         ch02.Holder
    Override [KaoRou.java, 28]       ch02.KaoRou.isVeggie

ch02.Holder.whatHolder   (Method)
  Declared as: Object
                                                                     Page 89
                      Program Unit Cross Reference Report
===============================================================================
    Define [KaoRou.java, 34]         ch02.Holder
    Override [KaoRou.java, 34]       ch02.KaoRou.whatHolder

ch02.KaoRou.isVeggie   (Abstract Method)
  Declared as: boolean
    Override [KaoRou.java, 28]       ch02.Holder.isVeggie
    Define [KaoRou.java, 10]         ch02.KaoRou
    Override [KaoRou.java, 100]      ch02.Pepper.isVeggie
    Call [KaoRou.java, 102]          ch02.Pepper.isVeggie
    Override [KaoRou.java, 82]       ch02.Radish.isVeggie
    Call [KaoRou.java, 84]           ch02.Radish.isVeggie
    Override [KaoRou.java, 46]       ch02.Shallot.isVeggie
    Call [KaoRou.java, 48]           ch02.Shallot.isVeggie
    Override [KaoRou.java, 64]       ch02.Shrimp.isVeggie
    Override [KaoRou.java, 118]      ch02.Zucchini.isVeggie
    Call [KaoRou.java, 120]          ch02.Zucchini.isVeggie

ch02.KaoRou.toString   (Public Method)
  Declared as: String
    Define [KaoRou.java, 13]         ch02.KaoRou
    Override [KaoRou.java, 13]       java.lang.Object.toString

ch02.KaoRou.whatHolder   (Abstract Method)
  Declared as: Object
    Override [KaoRou.java, 34]       ch02.Holder.whatHolder
    Define [KaoRou.java, 11]         ch02.KaoRou
    Override [KaoRou.java, 106]      ch02.Pepper.whatHolder
    Call [KaoRou.java, 108]          ch02.Pepper.whatHolder
    Override [KaoRou.java, 88]       ch02.Radish.whatHolder
    Call [KaoRou.java, 90]           ch02.Radish.whatHolder
    Override [KaoRou.java, 52]       ch02.Shallot.whatHolder
    Call [KaoRou.java, 54]           ch02.Shallot.whatHolder
    Override [KaoRou.java, 70]       ch02.Shrimp.whatHolder
    Call [KaoRou.java, 72]           ch02.Shrimp.whatHolder
    Override [KaoRou.java, 124]      ch02.Zucchini.whatHolder
    Call [KaoRou.java, 126]          ch02.Zucchini.whatHolder

ch02.Lamb.isVegetarian   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 85]   ch02.Lamb
    Override [YangRouChuan.java, 85]   ch02.YangRouChuan.isVegetarian

ch02.Lamb.Lamb(YangRouChuan _y)   (Public Constructor)
    Define [YangRouChuan.java, 73]   ch02.Lamb
    Call [TestTYangRouChuan.java, 10]   ch02.TestTYangRouChuan.main(String[] args)

ch02.Lamb.onlyOnions   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 79]   ch02.Lamb
    Override [YangRouChuan.java, 79]   ch02.YangRouChuan.onlyOnions

ch02.Main.main(String[] args)   (Public Static Method)
  Declared as: void
    Define [Main.java, 4]            ch02.Main
                                                                     Page 90
                      Program Unit Cross Reference Report
===============================================================================

ch02.ManHattanPt.distanceTo0   (Method)
  Declared as: int
    Define [PointD.java, 46]         ch02.ManHattanPt
    Override [PointD.java, 46]       ch02.PointD.distanceTo0
    Call [Test.java, 7]              ch02.Test.main(String[] args)

ch02.ManHattanPt.ManHattanPt(int _x,int _y)   (Public Constructor)
    Define [PointD.java, 40]         ch02.ManHattanPt
    Call [Test.java, 6]              ch02.Test.main(String[] args)
    Call [Main.java, 5]              ch02.Main.main(String[] args)

ch02.ManHattanPt.toString   (Public Method)
  Declared as: String
    Define [PointD.java, 52]         ch02.ManHattanPt
    Override [PointD.java, 52]       ch02.PointD.toString

ch02.ManHattanPt1.closerTo0(ManHattanPt1 p1)   (Method)
  Declared as: boolean
    Define [PointDCloser.java, 52]   ch02.ManHattanPt1
    Call [Test.java, 11]             ch02.Test.main(String[] args)

ch02.ManHattanPt1.distanceTo0   (Method)
  Declared as: int
    Define [PointDCloser.java, 47]   ch02.ManHattanPt1
    Call [PointDCloser.java, 54]     ch02.ManHattanPt1.closerTo0(ManHattanPt1 p1)
    Call [PointDCloser.java, 54]     ch02.ManHattanPt1.closerTo0(ManHattanPt1 p1)
    Override [PointDCloser.java, 47]   ch02.PointDCloser.distanceTo0

ch02.ManHattanPt1.ManHattanPt1(int _x,int _y)   (Public Constructor)
    Define [PointDCloser.java, 41]   ch02.ManHattanPt1
    Call [Test.java, 9]              ch02.Test.main(String[] args)
    Call [Test.java, 10]             ch02.Test.main(String[] args)

ch02.ManHattanPt2.closerTo0(CartesianPt p1)   (Method)
  Declared as: boolean
    Define [PointDCloserSimplify.java, 55]   ch02.ManHattanPt2

ch02.ManHattanPt2.distanceTo0   (Method)
  Declared as: int
    Define [PointDCloserSimplify.java, 50]   ch02.ManHattanPt2
    Call [PointDCloserSimplify.java, 57]   ch02.ManHattanPt2.closerTo0(CartesianPt p1)
    Override [PointDCloserSimplify.java, 50]   ch02.PointDCloserSimplify.distanceTo0

ch02.ManHattanPt2.ManHattanPt2(int _x,int _y)   (Public Constructor)
    Define [PointDCloserSimplify.java, 44]   ch02.ManHattanPt2

ch02.MoreThanOne.MoreThanOne(NumD _d)   (Public Constructor)
    Define [NumD.java, 46]           ch02.MoreThanOne

ch02.Onion.isVegetarian   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 58]   ch02.Onion
    Override [YangRouChuan.java, 58]   ch02.YangRouChuan.isVegetarian
    Call [TestTYangRouChuan.java, 12]   ch02.TestTYangRouChuan.main(String[] args)
                                                                     Page 91
                      Program Unit Cross Reference Report
===============================================================================

ch02.Onion.Onion(YangRouChuan _s)   (Public Constructor)
    Define [YangRouChuan.java, 47]   ch02.Onion
    Call [TestTYangRouChuan.java, 8]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 8]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 9]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 9]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 10]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 12]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 12]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 13]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 13]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 14]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 14]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 15]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 15]   ch02.TestTYangRouChuan.main(String[] args)
    Call [Main.java, 9]              ch02.Main.main(String[] args)
    Call [Main.java, 9]              ch02.Main.main(String[] args)

ch02.Onion.onlyOnions   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 52]   ch02.Onion
    Override [YangRouChuan.java, 52]   ch02.YangRouChuan.onlyOnions
    Call [TestTYangRouChuan.java, 9]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 10]   ch02.TestTYangRouChuan.main(String[] args)

ch02.Onion.toString   (Public Method)
  Declared as: String
    Define [YangRouChuan.java, 63]   ch02.Onion
    Override [YangRouChuan.java, 63]   ch02.YangRouChuan.toString

ch02.Pepper.isVeggie   (Method)
  Declared as: boolean
    Define [KaoRou.java, 100]        ch02.Pepper
    Override [KaoRou.java, 100]      ch02.KaoRou.isVeggie

ch02.Pepper.Pepper(KaoRou kaoroujia)   (Public Constructor)
    Define [KaoRou.java, 95]         ch02.Pepper

ch02.Pepper.whatHolder   (Method)
  Declared as: Object
    Define [KaoRou.java, 106]        ch02.Pepper
    Override [KaoRou.java, 106]      ch02.KaoRou.whatHolder

ch02.PointD.distanceTo0   (Abstract Method)
  Declared as: int
    Override [PointD.java, 29]       ch02.CartesianPt.distanceTo0
    Override [PointD.java, 46]       ch02.ManHattanPt.distanceTo0
    Define [PointD.java, 8]          ch02.PointD
    Call [Main.java, 10]             ch02.Main.main(String[] args)

ch02.PointD.toString   (Public Method)
  Declared as: String
    Override [PointD.java, 52]       ch02.ManHattanPt.toString
    Define [PointD.java, 10]         ch02.PointD
    Override [PointD.java, 10]       java.lang.Object.toString
                                                                     Page 92
                      Program Unit Cross Reference Report
===============================================================================

ch02.PointDCloser.distanceTo0   (Abstract Method)
  Declared as: int
    Override [PointDCloser.java, 24]   ch02.CartesianPt1.distanceTo0
    Override [PointDCloser.java, 47]   ch02.ManHattanPt1.distanceTo0
    Define [PointDCloser.java, 9]    ch02.PointDCloser

ch02.PointDCloserSimplify.closerTo0(CartesianPt2 p1)   (Method)
  Declared as: boolean
    Define [PointDCloserSimplify.java, 13]   ch02.PointDCloserSimplify

ch02.PointDCloserSimplify.distanceTo0   (Abstract Method)
  Declared as: int
    Override [PointDCloserSimplify.java, 31]   ch02.CartesianPt2.distanceTo0
    Override [PointDCloserSimplify.java, 50]   ch02.ManHattanPt2.distanceTo0
    Define [PointDCloserSimplify.java, 11]   ch02.PointDCloserSimplify
    Call [PointDCloserSimplify.java, 15]   ch02.PointDCloserSimplify.closerTo0(CartesianPt2 p1)

ch02.Radish.isVeggie   (Method)
  Declared as: boolean
    Define [KaoRou.java, 82]         ch02.Radish
    Override [KaoRou.java, 82]       ch02.KaoRou.isVeggie

ch02.Radish.Radish(KaoRou kaoroujia)   (Public Constructor)
    Define [KaoRou.java, 77]         ch02.Radish

ch02.Radish.whatHolder   (Method)
  Declared as: Object
    Define [KaoRou.java, 88]         ch02.Radish
    Override [KaoRou.java, 88]       ch02.KaoRou.whatHolder

ch02.Shallot.isVeggie   (Method)
  Declared as: boolean
    Define [KaoRou.java, 46]         ch02.Shallot
    Override [KaoRou.java, 46]       ch02.KaoRou.isVeggie

ch02.Shallot.Shallot(KaoRou kaoroujia)   (Public Constructor)
    Define [KaoRou.java, 41]         ch02.Shallot

ch02.Shallot.whatHolder   (Method)
  Declared as: Object
    Define [KaoRou.java, 52]         ch02.Shallot
    Override [KaoRou.java, 52]       ch02.KaoRou.whatHolder

ch02.Shrimp.isVeggie   (Method)
  Declared as: boolean
    Define [KaoRou.java, 64]         ch02.Shrimp
    Override [KaoRou.java, 64]       ch02.KaoRou.isVeggie

ch02.Shrimp.Shrimp(KaoRou kaoroujia)   (Public Constructor)
    Define [KaoRou.java, 59]         ch02.Shrimp

ch02.Shrimp.whatHolder   (Method)
  Declared as: Object
    Define [KaoRou.java, 70]         ch02.Shrimp
    Override [KaoRou.java, 70]       ch02.KaoRou.whatHolder
                                                                     Page 93
                      Program Unit Cross Reference Report
===============================================================================

ch02.Skewer.isVegetarian   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 35]   ch02.Skewer
    Override [YangRouChuan.java, 35]   ch02.YangRouChuan.isVegetarian

ch02.Skewer.onlyOnions   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 29]   ch02.Skewer
    Override [YangRouChuan.java, 29]   ch02.YangRouChuan.onlyOnions

ch02.Test.main(String[] args)   (Public Static Method)
  Declared as: void
    Define [Test.java, 5]            ch02.Test

ch02.TestTYangRouChuan.main(String[] args)   (Public Static Method)
  Declared as: void
    Define [TestTYangRouChuan.java, 5]   ch02.TestTYangRouChuan

ch02.Tomato.isVegetarian   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 106]   ch02.Tomato
    Override [YangRouChuan.java, 106]   ch02.YangRouChuan.isVegetarian
    Call [TestTYangRouChuan.java, 13]   ch02.TestTYangRouChuan.main(String[] args)

ch02.Tomato.onlyOnions   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 100]   ch02.Tomato
    Override [YangRouChuan.java, 100]   ch02.YangRouChuan.onlyOnions

ch02.Tomato.Tomato(YangRouChuan _y)   (Public Constructor)
    Define [YangRouChuan.java, 95]   ch02.Tomato
    Call [TestTYangRouChuan.java, 12]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 13]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 14]   ch02.TestTYangRouChuan.main(String[] args)
    Call [TestTYangRouChuan.java, 15]   ch02.TestTYangRouChuan.main(String[] args)
    Call [Main.java, 9]              ch02.Main.main(String[] args)

ch02.Tomato.toString   (Public Method)
  Declared as: String
    Define [YangRouChuan.java, 111]   ch02.Tomato
    Override [YangRouChuan.java, 111]   ch02.YangRouChuan.toString
    Call [TestTYangRouChuan.java, 15]   ch02.TestTYangRouChuan.main(String[] args)

ch02.YangRouChuan.isVegetarian   (Abstract Method)
  Declared as: boolean
    Override [YangRouChuan.java, 85]   ch02.Lamb.isVegetarian
    Override [YangRouChuan.java, 58]   ch02.Onion.isVegetarian
    Call [YangRouChuan.java, 60]     ch02.Onion.isVegetarian
    Override [YangRouChuan.java, 35]   ch02.Skewer.isVegetarian
    Override [YangRouChuan.java, 106]   ch02.Tomato.isVegetarian
    Call [YangRouChuan.java, 108]    ch02.Tomato.isVegetarian
    Define [YangRouChuan.java, 7]    ch02.YangRouChuan

ch02.YangRouChuan.onlyOnions   (Abstract Method)
  Declared as: boolean
                                                                     Page 94
                      Program Unit Cross Reference Report
===============================================================================
    Override [YangRouChuan.java, 79]   ch02.Lamb.onlyOnions
    Override [YangRouChuan.java, 52]   ch02.Onion.onlyOnions
    Call [YangRouChuan.java, 54]     ch02.Onion.onlyOnions
    Override [YangRouChuan.java, 29]   ch02.Skewer.onlyOnions
    Override [YangRouChuan.java, 100]   ch02.Tomato.onlyOnions
    Define [YangRouChuan.java, 6]    ch02.YangRouChuan

ch02.YangRouChuan.toString   (Public Method)
  Declared as: String
    Override [YangRouChuan.java, 63]   ch02.Onion.toString
    Override [YangRouChuan.java, 111]   ch02.Tomato.toString
    Define [YangRouChuan.java, 14]   ch02.YangRouChuan
    Override [YangRouChuan.java, 14]   java.lang.Object.toString

ch02.YangRouChuan.YangRouChuan   (Public Constructor)
    Define [YangRouChuan.java, 9]    ch02.YangRouChuan

ch02.Zucchini.isVeggie   (Method)
  Declared as: boolean
    Define [KaoRou.java, 118]        ch02.Zucchini
    Override [KaoRou.java, 118]      ch02.KaoRou.isVeggie

ch02.Zucchini.whatHolder   (Method)
  Declared as: Object
    Define [KaoRou.java, 124]        ch02.Zucchini
    Override [KaoRou.java, 124]      ch02.KaoRou.whatHolder

ch02.Zucchini.Zucchini(KaoRou kaoroujia)   (Public Constructor)
    Define [KaoRou.java, 113]        ch02.Zucchini

ch03   (Package)
    Define [PizzaD.java, 1]          PizzaD.java
    Declare [PizzaD.java, 1]         PizzaD.java

ch03.Anchovy.Anchovy(PizzaD _p)   (Public Constructor)
    Define [PizzaD.java, 99]         ch03.Anchovy
    Call [PizzaD.java, 114]          ch03.Anchovy.topAwC

ch03.Anchovy.remA   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 104]        ch03.Anchovy
    Override [PizzaD.java, 104]      ch03.PizzaD.remA

ch03.Anchovy.subAwC   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 118]        ch03.Anchovy
    Override [PizzaD.java, 118]      ch03.PizzaD.subAwC

ch03.Anchovy.topAwC   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 112]        ch03.Anchovy
    Override [PizzaD.java, 112]      ch03.PizzaD.topAwC

ch03.Cheese.Cheese(PizzaD _p)   (Public Constructor)
    Call [PizzaD.java, 120]          ch03.Anchovy.subAwC
    Call [PizzaD.java, 114]          ch03.Anchovy.topAwC
                                                                     Page 95
                      Program Unit Cross Reference Report
===============================================================================
    Define [PizzaD.java, 40]         ch03.Cheese
    Call [PizzaD.java, 47]           ch03.Cheese.remA
    Call [PizzaD.java, 59]           ch03.Cheese.subAwC
    Call [PizzaD.java, 53]           ch03.Cheese.topAwC

ch03.Cheese.remA   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 45]         ch03.Cheese
    Override [PizzaD.java, 45]       ch03.PizzaD.remA

ch03.Cheese.subAwC   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 57]         ch03.Cheese
    Override [PizzaD.java, 57]       ch03.PizzaD.subAwC

ch03.Cheese.topAwC   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 51]         ch03.Cheese
    Override [PizzaD.java, 51]       ch03.PizzaD.topAwC

ch03.Crust.remA   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 16]         ch03.Crust
    Override [PizzaD.java, 16]       ch03.PizzaD.remA

ch03.Crust.subAwC   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 28]         ch03.Crust
    Override [PizzaD.java, 28]       ch03.PizzaD.subAwC

ch03.Crust.topAwC   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 22]         ch03.Crust
    Override [PizzaD.java, 22]       ch03.PizzaD.topAwC

ch03.Olive.Olive(PizzaD _p)   (Public Constructor)
    Define [PizzaD.java, 70]         ch03.Olive
    Call [PizzaD.java, 77]           ch03.Olive.remA
    Call [PizzaD.java, 89]           ch03.Olive.subAwC
    Call [PizzaD.java, 83]           ch03.Olive.topAwC

ch03.Olive.remA   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 75]         ch03.Olive
    Override [PizzaD.java, 75]       ch03.PizzaD.remA

ch03.Olive.subAwC   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 87]         ch03.Olive
    Override [PizzaD.java, 87]       ch03.PizzaD.subAwC

ch03.Olive.topAwC   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 81]         ch03.Olive
    Override [PizzaD.java, 81]       ch03.PizzaD.topAwC
                                                                     Page 96
                      Program Unit Cross Reference Report
===============================================================================

ch03.PizzaD.remA   (Abstract Method)
  Declared as: PizzaD
    Override [PizzaD.java, 104]      ch03.Anchovy.remA
    Call [PizzaD.java, 107]          ch03.Anchovy.remA
    Override [PizzaD.java, 45]       ch03.Cheese.remA
    Call [PizzaD.java, 47]           ch03.Cheese.remA
    Override [PizzaD.java, 16]       ch03.Crust.remA
    Override [PizzaD.java, 75]       ch03.Olive.remA
    Call [PizzaD.java, 77]           ch03.Olive.remA
    Define [PizzaD.java, 5]          ch03.PizzaD
    Override [PizzaD.java, 135]      ch03.Sausage.remA
    Call [PizzaD.java, 137]          ch03.Sausage.remA
    Override [PizzaD.java, 172]      ch03.Spinach.remA
    Call [PizzaD.java, 174]          ch03.Spinach.remA

ch03.PizzaD.subAwC   (Abstract Method)
  Declared as: PizzaD
    Override [PizzaD.java, 118]      ch03.Anchovy.subAwC
    Call [PizzaD.java, 120]          ch03.Anchovy.subAwC
    Override [PizzaD.java, 57]       ch03.Cheese.subAwC
    Call [PizzaD.java, 59]           ch03.Cheese.subAwC
    Override [PizzaD.java, 28]       ch03.Crust.subAwC
    Override [PizzaD.java, 87]       ch03.Olive.subAwC
    Call [PizzaD.java, 89]           ch03.Olive.subAwC
    Define [PizzaD.java, 7]          ch03.PizzaD
    Override [PizzaD.java, 147]      ch03.Sausage.subAwC
    Call [PizzaD.java, 149]          ch03.Sausage.subAwC
    Override [PizzaD.java, 184]      ch03.Spinach.subAwC
    Call [PizzaD.java, 186]          ch03.Spinach.subAwC

ch03.PizzaD.topAwC   (Abstract Method)
  Declared as: PizzaD
    Override [PizzaD.java, 112]      ch03.Anchovy.topAwC
    Call [PizzaD.java, 114]          ch03.Anchovy.topAwC
    Override [PizzaD.java, 51]       ch03.Cheese.topAwC
    Call [PizzaD.java, 53]           ch03.Cheese.topAwC
    Override [PizzaD.java, 22]       ch03.Crust.topAwC
    Override [PizzaD.java, 81]       ch03.Olive.topAwC
    Call [PizzaD.java, 83]           ch03.Olive.topAwC
    Define [PizzaD.java, 6]          ch03.PizzaD
    Override [PizzaD.java, 141]      ch03.Sausage.topAwC
    Call [PizzaD.java, 143]          ch03.Sausage.topAwC
    Override [PizzaD.java, 178]      ch03.Spinach.topAwC
    Call [PizzaD.java, 180]          ch03.Spinach.topAwC

ch03.Sausage.remA   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 135]        ch03.Sausage
    Override [PizzaD.java, 135]      ch03.PizzaD.remA

ch03.Sausage.Sausage(PizzaD _p)   (Public Constructor)
    Define [PizzaD.java, 130]        ch03.Sausage
    Call [PizzaD.java, 137]          ch03.Sausage.remA
    Call [PizzaD.java, 149]          ch03.Sausage.subAwC
    Call [PizzaD.java, 143]          ch03.Sausage.topAwC
                                                                     Page 97
                      Program Unit Cross Reference Report
===============================================================================

ch03.Sausage.subAwC   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 147]        ch03.Sausage
    Override [PizzaD.java, 147]      ch03.PizzaD.subAwC

ch03.Sausage.topAwC   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 141]        ch03.Sausage
    Override [PizzaD.java, 141]      ch03.PizzaD.topAwC

ch03.Spinach.remA   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 172]        ch03.Spinach
    Override [PizzaD.java, 172]      ch03.PizzaD.remA

ch03.Spinach.Spinach(PizzaD _p)   (Public Constructor)
    Define [PizzaD.java, 167]        ch03.Spinach
    Call [PizzaD.java, 174]          ch03.Spinach.remA
    Call [PizzaD.java, 186]          ch03.Spinach.subAwC
    Call [PizzaD.java, 180]          ch03.Spinach.topAwC

ch03.Spinach.subAwC   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 184]        ch03.Spinach
    Override [PizzaD.java, 184]      ch03.PizzaD.subAwC

ch03.Spinach.topAwC   (Method)
  Declared as: PizzaD
    Define [PizzaD.java, 178]        ch03.Spinach
    Override [PizzaD.java, 178]      ch03.PizzaD.topAwC

ch04   (Package)
    Define [YangRouChuan.java, 1]    YangRouChuan.java
    Declare [YangRouChuan.java, 1]   YangRouChuan.java

ch04.IsVegetarianV.forLamb(YangRouChuan y)   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 27]   ch04.IsVegetarianV
    Call [YangRouChuan.java, 106]    ch04.Lamb.isVegetarian

ch04.IsVegetarianV.forOnion(YangRouChuan y)   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 24]   ch04.IsVegetarianV
    Call [YangRouChuan.java, 83]     ch04.Onion.isVegetarian

ch04.IsVegetarianV.forSkewer   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 21]   ch04.IsVegetarianV
    Call [YangRouChuan.java, 60]     ch04.Skewer.isVegetarian

ch04.IsVegetarianV.forTomato(YangRouChuan y)   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 30]   ch04.IsVegetarianV
    Call [YangRouChuan.java, 127]    ch04.Tomato.isVegetarian
                                                                     Page 98
                      Program Unit Cross Reference Report
===============================================================================

ch04.Lamb.isVegetarian   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 104]   ch04.Lamb
    Override [YangRouChuan.java, 104]   ch04.YangRouChuan.isVegetarian

ch04.Lamb.Lamb(YangRouChuan _y)   (Public Constructor)
    Define [YangRouChuan.java, 92]   ch04.Lamb

ch04.Lamb.onlyOnions   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 98]   ch04.Lamb
    Override [YangRouChuan.java, 98]   ch04.YangRouChuan.onlyOnions

ch04.Onion.isVegetarian   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 81]   ch04.Onion
    Override [YangRouChuan.java, 81]   ch04.YangRouChuan.isVegetarian

ch04.Onion.Onion(YangRouChuan _s)   (Public Constructor)
    Define [YangRouChuan.java, 70]   ch04.Onion

ch04.Onion.onlyOnions   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 75]   ch04.Onion
    Override [YangRouChuan.java, 75]   ch04.YangRouChuan.onlyOnions

ch04.OnlyOnionsV.forLamb(YangRouChuan y)   (Method)
  Declared as: boolean
    Call [YangRouChuan.java, 100]    ch04.Lamb.onlyOnions
    Define [YangRouChuan.java, 12]   ch04.OnlyOnionsV

ch04.OnlyOnionsV.forOnion(YangRouChuan y)   (Method)
  Declared as: boolean
    Call [YangRouChuan.java, 77]     ch04.Onion.onlyOnions
    Define [YangRouChuan.java, 9]    ch04.OnlyOnionsV

ch04.OnlyOnionsV.forSkewer   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 6]    ch04.OnlyOnionsV
    Call [YangRouChuan.java, 54]     ch04.Skewer.onlyOnions

ch04.OnlyOnionsV.forTomato(YangRouChuan y)   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 15]   ch04.OnlyOnionsV
    Call [YangRouChuan.java, 121]    ch04.Tomato.onlyOnions

ch04.Skewer.isVegetarian   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 58]   ch04.Skewer
    Override [YangRouChuan.java, 58]   ch04.YangRouChuan.isVegetarian

ch04.Skewer.onlyOnions   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 52]   ch04.Skewer
    Override [YangRouChuan.java, 52]   ch04.YangRouChuan.onlyOnions
                                                                     Page 99
                      Program Unit Cross Reference Report
===============================================================================

ch04.Tomato.isVegetarian   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 125]   ch04.Tomato
    Override [YangRouChuan.java, 125]   ch04.YangRouChuan.isVegetarian

ch04.Tomato.onlyOnions   (Method)
  Declared as: boolean
    Define [YangRouChuan.java, 119]   ch04.Tomato
    Override [YangRouChuan.java, 119]   ch04.YangRouChuan.onlyOnions

ch04.Tomato.Tomato(YangRouChuan _y)   (Public Constructor)
    Define [YangRouChuan.java, 114]   ch04.Tomato

ch04.YangRouChuan.isVegetarian   (Abstract Method)
  Declared as: boolean
    Call [YangRouChuan.java, 25]     ch04.IsVegetarianV.forOnion(YangRouChuan y)
    Call [YangRouChuan.java, 31]     ch04.IsVegetarianV.forTomato(YangRouChuan y)
    Override [YangRouChuan.java, 104]   ch04.Lamb.isVegetarian
    Override [YangRouChuan.java, 81]   ch04.Onion.isVegetarian
    Override [YangRouChuan.java, 58]   ch04.Skewer.isVegetarian
    Override [YangRouChuan.java, 125]   ch04.Tomato.isVegetarian
    Define [YangRouChuan.java, 40]   ch04.YangRouChuan

ch04.YangRouChuan.onlyOnions   (Abstract Method)
  Declared as: boolean
    Override [YangRouChuan.java, 98]   ch04.Lamb.onlyOnions
    Override [YangRouChuan.java, 75]   ch04.Onion.onlyOnions
    Call [YangRouChuan.java, 10]     ch04.OnlyOnionsV.forOnion(YangRouChuan y)
    Override [YangRouChuan.java, 52]   ch04.Skewer.onlyOnions
    Override [YangRouChuan.java, 119]   ch04.Tomato.onlyOnions
    Define [YangRouChuan.java, 39]   ch04.YangRouChuan

ch05   (Package)
    Define [NumD.java, 1]            NumD.java
    Declare [NumD.java, 1]           NumD.java
    Define [PieD.java, 1]            PieD.java
    Declare [PieD.java, 1]           PieD.java
    Define [PieDGeneral.java, 1]     PieDGeneral.java
    Declare [PieDGeneral.java, 1]    PieDGeneral.java

ch05.AnchovyFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 12]           ch05.AnchovyFish
    Override [PieD.java, 12]         ch05.FishD.equals(Object o)
    Call [PieD.java, 46]             ch05.RemAV.forTop(Object t,PieD r)

ch05.Bot.remA   (Method)
  Declared as: PieD
    Define [PieD.java, 79]           ch05.Bot
    Override [PieD.java, 79]         ch05.PieD.remA

ch05.Bot.remFish(FishD f)   (Method)
  Declared as: PieD
    Define [PieD.java, 85]           ch05.Bot
    Override [PieD.java, 85]         ch05.PieD.remFish(FishD f)
                                                                     Page 100
                      Program Unit Cross Reference Report
===============================================================================

ch05.Bot1.remA(Object o)   (Method)
  Declared as: PieDGeneral
    Define [PieDGeneral.java, 60]    ch05.Bot1
    Override [PieDGeneral.java, 60]   ch05.PieDGeneral.remA(Object o)

ch05.FishD.equals(Object o)   (Public Abstract Method)
  Declared as: boolean
    Override [PieD.java, 12]         ch05.AnchovyFish.equals(Object o)
    Define [PieD.java, 6]            ch05.FishD
    Override [PieD.java, 6]          java.lang.Object.equals(Object obj)
    Call [PieD.java, 60]             ch05.RemFishV.forTop(Object t,PieD r,FishD f)
    Override [PieD.java, 22]         ch05.SalmonFish.equals(Object o)
    Override [PieD.java, 32]         ch05.TunaFish.equals(Object o)
    Call [PieDGeneral.java, 12]      ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)

ch05.MoreThanOne.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [NumD.java, 53]           ch05.MoreThanOne
    Override [NumD.java, 53]         java.lang.Object.equals(Object obj)

ch05.MoreThanOne.MoreThanOne(NumD _d)   (Public Constructor)
    Define [NumD.java, 48]           ch05.MoreThanOne

ch05.PieD.remA   (Abstract Method)
  Declared as: PieD
    Override [PieD.java, 79]         ch05.Bot.remA
    Define [PieD.java, 72]           ch05.PieD
    Call [PieD.java, 47]             ch05.RemAV.forTop(Object t,PieD r)
    Call [PieD.java, 49]             ch05.RemAV.forTop(Object t,PieD r)
    Override [PieD.java, 104]        ch05.Top.remA

ch05.PieD.remFish(FishD f)   (Abstract Method)
  Declared as: PieD
    Override [PieD.java, 85]         ch05.Bot.remFish(FishD f)
    Define [PieD.java, 73]           ch05.PieD
    Call [PieD.java, 61]             ch05.RemFishV.forTop(Object t,PieD r,FishD f)
    Call [PieD.java, 63]             ch05.RemFishV.forTop(Object t,PieD r,FishD f)
    Override [PieD.java, 110]        ch05.Top.remFish(FishD f)

ch05.PieDGeneral.remA(Object o)   (Abstract Method)
  Declared as: PieDGeneral
    Override [PieDGeneral.java, 60]   ch05.Bot1.remA(Object o)
    Define [PieDGeneral.java, 54]    ch05.PieDGeneral
    Call [PieDGeneral.java, 28]      ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
    Call [PieDGeneral.java, 30]      ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
    Call [PieDGeneral.java, 13]      ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
    Call [PieDGeneral.java, 15]      ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
    Call [PieDGeneral.java, 44]      ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
    Call [PieDGeneral.java, 46]      ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
    Override [PieDGeneral.java, 77]   ch05.Top1.remA(Object f)

ch05.RemAV.forBot   (Method)
  Declared as: PieD
    Define [PieD.java, 42]           ch05.RemAV
                                                                     Page 101
                      Program Unit Cross Reference Report
===============================================================================

ch05.RemAV.forTop(Object t,PieD r)   (Method)
  Declared as: PieD
    Define [PieD.java, 45]           ch05.RemAV
    Call [PieD.java, 106]            ch05.Top.remA

ch05.RemFishInt.forBot(FishD f)   (Method)
  Declared as: PieDGeneral
    Define [PieDGeneral.java, 22]    ch05.RemFishInt

ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)   (Method)
  Declared as: PieDGeneral
    Define [PieDGeneral.java, 26]    ch05.RemFishInt

ch05.RemFishV.forBot(FishD f)   (Method)
  Declared as: PieD
    Define [PieD.java, 55]           ch05.RemFishV

ch05.RemFishV.forTop(Object t,PieD r,FishD f)   (Method)
  Declared as: PieD
    Define [PieD.java, 59]           ch05.RemFishV
    Call [PieD.java, 112]            ch05.Top.remFish(FishD f)

ch05.RemFishV1.forBot(FishD f)   (Method)
  Declared as: PieDGeneral
    Define [PieDGeneral.java, 7]     ch05.RemFishV1

ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)   (Method)
  Declared as: PieDGeneral
    Define [PieDGeneral.java, 11]    ch05.RemFishV1

ch05.RemV.forBot(Object f)   (Method)
  Declared as: PieDGeneral
    Call [PieDGeneral.java, 62]      ch05.Bot1.remA(Object o)
    Define [PieDGeneral.java, 38]    ch05.RemV

ch05.RemV.forTop(Object t,PieDGeneral r,Object f)   (Method)
  Declared as: PieDGeneral
    Define [PieDGeneral.java, 42]    ch05.RemV
    Call [PieDGeneral.java, 79]      ch05.Top1.remA(Object f)

ch05.SalmonFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 22]           ch05.SalmonFish
    Override [PieD.java, 22]         ch05.FishD.equals(Object o)

ch05.Top.remA   (Method)
  Declared as: PieD
    Define [PieD.java, 104]          ch05.Top
    Override [PieD.java, 104]        ch05.PieD.remA

ch05.Top.remFish(FishD f)   (Method)
  Declared as: PieD
    Define [PieD.java, 110]          ch05.Top
    Override [PieD.java, 110]        ch05.PieD.remFish(FishD f)
                                                                     Page 102
                      Program Unit Cross Reference Report
===============================================================================

ch05.Top.Top(Object t,PieD r)   (Public Constructor)
    Call [PieD.java, 49]             ch05.RemAV.forTop(Object t,PieD r)
    Call [PieD.java, 63]             ch05.RemFishV.forTop(Object t,PieD r,FishD f)
    Define [PieD.java, 97]           ch05.Top

ch05.Top1.remA(Object f)   (Method)
  Declared as: PieDGeneral
    Define [PieDGeneral.java, 77]    ch05.Top1
    Override [PieDGeneral.java, 77]   ch05.PieDGeneral.remA(Object o)

ch05.Top1.Top1(Object t,PieDGeneral r)   (Public Constructor)
    Call [PieDGeneral.java, 30]      ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
    Call [PieDGeneral.java, 15]      ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
    Call [PieDGeneral.java, 46]      ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
    Define [PieDGeneral.java, 71]    ch05.Top1

ch05.TunaFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 32]           ch05.TunaFish
    Override [PieD.java, 32]         ch05.FishD.equals(Object o)

ch05.Zero.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [NumD.java, 38]           ch05.Zero
    Override [NumD.java, 38]         java.lang.Object.equals(Object obj)

ch051   (Package)
    Define [PieD.java, 1]            PieD.java
    Declare [PieD.java, 1]           PieD.java

ch051.AnchovyFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 13]           ch051.AnchovyFish
    Override [PieD.java, 13]         ch051.FishD.equals(Object o)

ch051.Bot.remA(Object o)   (Method)
  Declared as: PieD
    Define [PieD.java, 144]          ch051.Bot
    Override [PieD.java, 144]        ch051.PieD.remA(Object o)

ch051.Bot.substFish(Object n,Object o)   (Method)
  Declared as: PieD
    Define [PieD.java, 150]          ch051.Bot
    Override [PieD.java, 150]        ch051.PieD.substFish(Object n,Object o)

ch051.FishD.equals(Object o)   (Public Abstract Method)
  Declared as: boolean
    Override [PieD.java, 13]         ch051.AnchovyFish.equals(Object o)
    Define [PieD.java, 7]            ch051.FishD
    Override [PieD.java, 7]          java.lang.Object.equals(Object obj)
    Call [PieD.java, 48]             ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Override [PieD.java, 23]         ch051.SalmonFish.equals(Object o)
    Call [PieD.java, 95]             ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Override [PieD.java, 33]         ch051.TunaFish.equals(Object o)
                                                                     Page 103
                      Program Unit Cross Reference Report
===============================================================================

ch051.PieD.remA(Object o)   (Abstract Method)
  Declared as: PieD
    Override [PieD.java, 144]        ch051.Bot.remA(Object o)
    Define [PieD.java, 137]          ch051.PieD
    Call [PieD.java, 64]             ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
    Call [PieD.java, 66]             ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
    Call [PieD.java, 49]             ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Call [PieD.java, 51]             ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Call [PieD.java, 80]             ch051.RemV.forTop(Object t,PieD r,Object f)
    Call [PieD.java, 82]             ch051.RemV.forTop(Object t,PieD r,Object f)
    Override [PieD.java, 167]        ch051.Top.remA(Object f)

ch051.PieD.substFish(Object n,Object o)   (Abstract Method)
  Declared as: PieD
    Override [PieD.java, 150]        ch051.Bot.substFish(Object n,Object o)
    Define [PieD.java, 138]          ch051.PieD
    Call [PieD.java, 96]             ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Call [PieD.java, 98]             ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Call [PieD.java, 111]            ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Call [PieD.java, 113]            ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Call [PieD.java, 125]            ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Call [PieD.java, 127]            ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Override [PieD.java, 172]        ch051.Top.substFish(Object n,Object o)

ch051.RemFishInt.forBot(FishD f)   (Method)
  Declared as: PieD
    Define [PieD.java, 58]           ch051.RemFishInt

ch051.RemFishInt.forTop(Object t,PieD r,Integer f)   (Method)
  Declared as: PieD
    Define [PieD.java, 62]           ch051.RemFishInt

ch051.RemFishV.forBot(FishD f)   (Method)
  Declared as: PieD
    Define [PieD.java, 43]           ch051.RemFishV

ch051.RemFishV.forTop(Object t,PieD r,FishD f)   (Method)
  Declared as: PieD
    Define [PieD.java, 47]           ch051.RemFishV

ch051.RemV.forBot(Object f)   (Method)
  Declared as: PieD
    Call [PieD.java, 146]            ch051.Bot.remA(Object o)
    Define [PieD.java, 74]           ch051.RemV

ch051.RemV.forTop(Object t,PieD r,Object f)   (Method)
  Declared as: PieD
    Define [PieD.java, 78]           ch051.RemV
    Call [PieD.java, 169]            ch051.Top.remA(Object f)

ch051.SalmonFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 23]           ch051.SalmonFish
    Override [PieD.java, 23]         ch051.FishD.equals(Object o)
                                                                     Page 104
                      Program Unit Cross Reference Report
===============================================================================

ch051.SubstFishV.forBot(FishD n,FishD o)   (Method)
  Declared as: PieD
    Define [PieD.java, 90]           ch051.SubstFishV

ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)   (Method)
  Declared as: PieD
    Define [PieD.java, 94]           ch051.SubstFishV

ch051.SubstIntV.forBot(Integer n,Integer o)   (Method)
  Declared as: PieD
    Define [PieD.java, 105]          ch051.SubstIntV

ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)   (Method)
  Declared as: PieD
    Define [PieD.java, 109]          ch051.SubstIntV

ch051.SubstV.forBot(Object n,Object o)   (Method)
  Declared as: PieD
    Call [PieD.java, 152]            ch051.Bot.substFish(Object n,Object o)
    Define [PieD.java, 119]          ch051.SubstV

ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)   (Method)
  Declared as: PieD
    Define [PieD.java, 123]          ch051.SubstV
    Call [PieD.java, 174]            ch051.Top.substFish(Object n,Object o)

ch051.Top.remA(Object f)   (Method)
  Declared as: PieD
    Define [PieD.java, 167]          ch051.Top
    Override [PieD.java, 167]        ch051.PieD.remA(Object o)

ch051.Top.substFish(Object n,Object o)   (Method)
  Declared as: PieD
    Define [PieD.java, 172]          ch051.Top
    Override [PieD.java, 172]        ch051.PieD.substFish(Object n,Object o)

ch051.Top.Top(Object t,PieD r)   (Public Constructor)
    Call [PieD.java, 66]             ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
    Call [PieD.java, 51]             ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Call [PieD.java, 82]             ch051.RemV.forTop(Object t,PieD r,Object f)
    Call [PieD.java, 96]             ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Call [PieD.java, 98]             ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Call [PieD.java, 111]            ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Call [PieD.java, 113]            ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Call [PieD.java, 125]            ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Call [PieD.java, 127]            ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Define [PieD.java, 161]          ch051.Top

ch051.TunaFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 33]           ch051.TunaFish
    Override [PieD.java, 33]         ch051.FishD.equals(Object o)

ch06   (Package)
    Define [PieD.java, 1]            PieD.java
                                                                     Page 105
                      Program Unit Cross Reference Report
===============================================================================
    Declare [PieD.java, 1]           PieD.java

ch06.AnchovyFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 13]           ch06.AnchovyFish
    Override [PieD.java, 13]         ch06.FishD.equals(Object o)

ch06.Bot.remA(RemV remFn,Object o)   (Method)
  Declared as: PieD
    Define [PieD.java, 144]          ch06.Bot
    Override [PieD.java, 144]        ch06.PieD.remA(RemV remFn,Object o)

ch06.Bot.substFish(SubstV subFn,Object n,Object o)   (Method)
  Declared as: PieD
    Define [PieD.java, 150]          ch06.Bot
    Override [PieD.java, 150]        ch06.PieD.substFish(SubstV subFn,Object n,Object o)

ch06.FishD.equals(Object o)   (Public Abstract Method)
  Declared as: boolean
    Override [PieD.java, 13]         ch06.AnchovyFish.equals(Object o)
    Define [PieD.java, 7]            ch06.FishD
    Override [PieD.java, 7]          java.lang.Object.equals(Object obj)
    Override [PieD.java, 23]         ch06.SalmonFish.equals(Object o)
    Override [PieD.java, 33]         ch06.TunaFish.equals(Object o)

ch06.PieD.remA(RemV remFn,Object o)   (Abstract Method)
  Declared as: PieD
    Override [PieD.java, 144]        ch06.Bot.remA(RemV remFn,Object o)
    Define [PieD.java, 137]          ch06.PieD
    Call [PieD.java, 80]             ch06.RemV.forTop(Object t,PieD r,Object f)
    Call [PieD.java, 82]             ch06.RemV.forTop(Object t,PieD r,Object f)
    Override [PieD.java, 167]        ch06.Top.remA(RemV remFn,Object f)

ch06.PieD.substFish(SubstV subFn,Object n,Object o)   (Abstract Method)
  Declared as: PieD
    Override [PieD.java, 150]        ch06.Bot.substFish(SubstV subFn,Object n,Object o)
    Define [PieD.java, 138]          ch06.PieD
    Call [PieD.java, 125]            ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Call [PieD.java, 127]            ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Override [PieD.java, 172]        ch06.Top.substFish(SubstV subFn,Object n,Object o)

ch06.RemV.forBot(Object f)   (Method)
  Declared as: PieD
    Call [PieD.java, 146]            ch06.Bot.remA(RemV remFn,Object o)
    Define [PieD.java, 74]           ch06.RemV

ch06.RemV.forTop(Object t,PieD r,Object f)   (Method)
  Declared as: PieD
    Define [PieD.java, 78]           ch06.RemV
    Call [PieD.java, 169]            ch06.Top.remA(RemV remFn,Object f)

ch06.SalmonFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 23]           ch06.SalmonFish
    Override [PieD.java, 23]         ch06.FishD.equals(Object o)
                                                                     Page 106
                      Program Unit Cross Reference Report
===============================================================================

ch06.SubstV.forBot(Object n,Object o)   (Method)
  Declared as: PieD
    Call [PieD.java, 152]            ch06.Bot.substFish(SubstV subFn,Object n,Object o)
    Define [PieD.java, 119]          ch06.SubstV

ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)   (Method)
  Declared as: PieD
    Define [PieD.java, 123]          ch06.SubstV
    Call [PieD.java, 174]            ch06.Top.substFish(SubstV subFn,Object n,Object o)

ch06.Top.remA(RemV remFn,Object f)   (Method)
  Declared as: PieD
    Define [PieD.java, 167]          ch06.Top
    Override [PieD.java, 167]        ch06.PieD.remA(RemV remFn,Object o)

ch06.Top.substFish(SubstV subFn,Object n,Object o)   (Method)
  Declared as: PieD
    Define [PieD.java, 172]          ch06.Top
    Override [PieD.java, 172]        ch06.PieD.substFish(SubstV subFn,Object n,Object o)

ch06.Top.Top(Object t,PieD r)   (Public Constructor)
    Call [PieD.java, 82]             ch06.RemV.forTop(Object t,PieD r,Object f)
    Call [PieD.java, 125]            ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Call [PieD.java, 127]            ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Define [PieD.java, 161]          ch06.Top

ch06.TunaFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 33]           ch06.TunaFish
    Override [PieD.java, 33]         ch06.FishD.equals(Object o)

ch061   (Package)
    Define [PieD.java, 1]            PieD.java
    Declare [PieD.java, 1]           PieD.java

ch061.AnchovyFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 13]           ch061.AnchovyFish
    Override [PieD.java, 13]         ch061.FishD.equals(Object o)

ch061.Bot.Bot(Object _t,PieD _r)   (Public Constructor)
    Define [PieD.java, 96]           ch061.Bot
    Call [PieD.java, 49]             ch061.RemV.forBot(Object t,PieD r)
    Call [PieD.java, 72]             ch061.SubstV.forBot(Object t,PieD r)

ch061.Bot.remA(RemV remFn)   (Method)
  Declared as: PieD
    Define [PieD.java, 102]          ch061.Bot
    Override [PieD.java, 102]        ch061.PieD.remA(RemV remFn)

ch061.Bot.substFish(SubstV subFn)   (Method)
  Declared as: PieD
    Define [PieD.java, 108]          ch061.Bot
    Override [PieD.java, 108]        ch061.PieD.substFish(SubstV subFn)
                                                                     Page 107
                      Program Unit Cross Reference Report
===============================================================================

ch061.FishD.equals(Object o)   (Public Abstract Method)
  Declared as: boolean
    Override [PieD.java, 13]         ch061.AnchovyFish.equals(Object o)
    Define [PieD.java, 7]            ch061.FishD
    Override [PieD.java, 7]          java.lang.Object.equals(Object obj)
    Override [PieD.java, 23]         ch061.SalmonFish.equals(Object o)
    Override [PieD.java, 33]         ch061.TunaFish.equals(Object o)

ch061.PieD.remA(RemV remFn)   (Abstract Method)
  Declared as: PieD
    Override [PieD.java, 102]        ch061.Bot.remA(RemV remFn)
    Define [PieD.java, 88]           ch061.PieD
    Call [PieD.java, 54]             ch061.RemV.forTop(Object t,PieD r)
    Call [PieD.java, 56]             ch061.RemV.forTop(Object t,PieD r)
    Override [PieD.java, 125]        ch061.Top.remA(RemV remFn)

ch061.PieD.substFish(SubstV subFn)   (Abstract Method)
  Declared as: PieD
    Override [PieD.java, 108]        ch061.Bot.substFish(SubstV subFn)
    Define [PieD.java, 89]           ch061.PieD
    Call [PieD.java, 76]             ch061.SubstV.forTop(Object t,PieD r)
    Call [PieD.java, 78]             ch061.SubstV.forTop(Object t,PieD r)
    Override [PieD.java, 130]        ch061.Top.substFish(SubstV subFn)

ch061.RemV.forBot(Object t,PieD r)   (Method)
  Declared as: PieD
    Call [PieD.java, 104]            ch061.Bot.remA(RemV remFn)
    Define [PieD.java, 48]           ch061.RemV

ch061.RemV.forTop(Object t,PieD r)   (Method)
  Declared as: PieD
    Define [PieD.java, 52]           ch061.RemV
    Call [PieD.java, 127]            ch061.Top.remA(RemV remFn)

ch061.RemV.RemV(Object _o)   (Public Constructor)
    Define [PieD.java, 44]           ch061.RemV

ch061.SalmonFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 23]           ch061.SalmonFish
    Override [PieD.java, 23]         ch061.FishD.equals(Object o)

ch061.SubstV.forBot(Object t,PieD r)   (Method)
  Declared as: PieD
    Call [PieD.java, 110]            ch061.Bot.substFish(SubstV subFn)
    Define [PieD.java, 70]           ch061.SubstV

ch061.SubstV.forTop(Object t,PieD r)   (Method)
  Declared as: PieD
    Define [PieD.java, 74]           ch061.SubstV
    Call [PieD.java, 132]            ch061.Top.substFish(SubstV subFn)

ch061.SubstV.SubstV(Object _n,Object _o)   (Public Constructor)
    Define [PieD.java, 65]           ch061.SubstV
                                                                     Page 108
                      Program Unit Cross Reference Report
===============================================================================

ch061.Top.remA(RemV remFn)   (Method)
  Declared as: PieD
    Define [PieD.java, 125]          ch061.Top
    Override [PieD.java, 125]        ch061.PieD.remA(RemV remFn)

ch061.Top.substFish(SubstV subFn)   (Method)
  Declared as: PieD
    Define [PieD.java, 130]          ch061.Top
    Override [PieD.java, 130]        ch061.PieD.substFish(SubstV subFn)

ch061.Top.Top(Object t,PieD r)   (Public Constructor)
    Call [PieD.java, 56]             ch061.RemV.forTop(Object t,PieD r)
    Call [PieD.java, 76]             ch061.SubstV.forTop(Object t,PieD r)
    Call [PieD.java, 78]             ch061.SubstV.forTop(Object t,PieD r)
    Define [PieD.java, 119]          ch061.Top

ch061.TunaFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 33]           ch061.TunaFish
    Override [PieD.java, 33]         ch061.FishD.equals(Object o)

ch062   (Package)
    Define [PieD.java, 1]            PieD.java
    Declare [PieD.java, 1]           PieD.java

ch062.Bot.accept(PieVistor1 ask)   (Method)
  Declared as: PieD
    Define [PieD.java, 96]           ch062.Bot
    Override [PieD.java, 96]         ch062.PieD.accept(PieVistor1 ask)

ch062.LtSubstV.forBot   (Public Method)
  Declared as: PieD
    Define [PieD.java, 64]           ch062.LtSubstV
    Override [PieD.java, 64]         ch062.PieVistor1.forBot

ch062.LtSubstV.forTop(Object t,PieD r)   (Public Method)
  Declared as: PieD
    Define [PieD.java, 70]           ch062.LtSubstV
    Override [PieD.java, 70]         ch062.PieVistor1.forTop(Object t,PieD r)

ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)   (Public Constructor)
    Define [PieD.java, 57]           ch062.LtSubstV
    Call [PieD.java, 77]             ch062.LtSubstV.forTop(Object t,PieD r)

ch062.PieD.accept(PieVistor1 ask)   (Abstract Method)
  Declared as: PieD
    Override [PieD.java, 96]         ch062.Bot.accept(PieVistor1 ask)
    Call [PieD.java, 77]             ch062.LtSubstV.forTop(Object t,PieD r)
    Call [PieD.java, 79]             ch062.LtSubstV.forTop(Object t,PieD r)
    Define [PieD.java, 90]           ch062.PieD
    Call [PieD.java, 23]             ch062.RemV.forTop(Object t,PieD r)
    Call [PieD.java, 25]             ch062.RemV.forTop(Object t,PieD r)
    Call [PieD.java, 45]             ch062.SubstV.forTop(Object t,PieD r)
    Call [PieD.java, 47]             ch062.SubstV.forTop(Object t,PieD r)
    Override [PieD.java, 114]        ch062.Top.accept(PieVistor1 ask)
                                                                     Page 109
                      Program Unit Cross Reference Report
===============================================================================

ch062.PieVistor1.forBot   (Abstract Method)
  Declared as: PieD
    Call [PieD.java, 98]             ch062.Bot.accept(PieVistor1 ask)
    Override [PieD.java, 64]         ch062.LtSubstV.forBot
    Define [PieD.java, 6]            ch062.PieVistor1
    Override [PieD.java, 17]         ch062.RemV.forBot
    Override [PieD.java, 39]         ch062.SubstV.forBot

ch062.PieVistor1.forTop(Object t,PieD r)   (Abstract Method)
  Declared as: PieD
    Override [PieD.java, 70]         ch062.LtSubstV.forTop(Object t,PieD r)
    Define [PieD.java, 7]            ch062.PieVistor1
    Override [PieD.java, 21]         ch062.RemV.forTop(Object t,PieD r)
    Override [PieD.java, 43]         ch062.SubstV.forTop(Object t,PieD r)
    Call [PieD.java, 116]            ch062.Top.accept(PieVistor1 ask)

ch062.RemV.forBot   (Public Method)
  Declared as: PieD
    Define [PieD.java, 17]           ch062.RemV
    Override [PieD.java, 17]         ch062.PieVistor1.forBot

ch062.RemV.forTop(Object t,PieD r)   (Public Method)
  Declared as: PieD
    Define [PieD.java, 21]           ch062.RemV
    Override [PieD.java, 21]         ch062.PieVistor1.forTop(Object t,PieD r)

ch062.RemV.RemV(Object _o)   (Public Constructor)
    Define [PieD.java, 12]           ch062.RemV

ch062.SubstV.forBot   (Public Method)
  Declared as: PieD
    Define [PieD.java, 39]           ch062.SubstV
    Override [PieD.java, 39]         ch062.PieVistor1.forBot

ch062.SubstV.forTop(Object t,PieD r)   (Public Method)
  Declared as: PieD
    Define [PieD.java, 43]           ch062.SubstV
    Override [PieD.java, 43]         ch062.PieVistor1.forTop(Object t,PieD r)

ch062.SubstV.SubstV(Object _n,Object _o)   (Public Constructor)
    Define [PieD.java, 34]           ch062.SubstV

ch062.Top.accept(PieVistor1 ask)   (Method)
  Declared as: PieD
    Define [PieD.java, 114]          ch062.Top
    Override [PieD.java, 114]        ch062.PieD.accept(PieVistor1 ask)

ch062.Top.Top(Object t,PieD r)   (Public Constructor)
    Call [PieD.java, 74]             ch062.LtSubstV.forTop(Object t,PieD r)
    Call [PieD.java, 77]             ch062.LtSubstV.forTop(Object t,PieD r)
    Call [PieD.java, 79]             ch062.LtSubstV.forTop(Object t,PieD r)
    Call [PieD.java, 25]             ch062.RemV.forTop(Object t,PieD r)
    Call [PieD.java, 45]             ch062.SubstV.forTop(Object t,PieD r)
    Call [PieD.java, 47]             ch062.SubstV.forTop(Object t,PieD r)
    Define [PieD.java, 108]          ch062.Top
                                                                     Page 110
                      Program Unit Cross Reference Report
===============================================================================

ch07   (Package)
    Define [FruitD.java, 1]          FruitD.java
    Declare [FruitD.java, 1]         FruitD.java
    Define [TreeD.java, 1]           TreeD.java
    Declare [TreeD.java, 1]          TreeD.java

ch07.Apple.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [FruitD.java, 12]         ch07.Apple
    Override [FruitD.java, 12]       java.lang.Object.equals(Object obj)

ch07.BHasFruitV.forBud   (Public Method)
  Declared as: boolean
    Define [TreeD.java, 155]         ch07.BHasFruitV
    Override [TreeD.java, 155]       ch07.BTreeVisitorI.forBud

ch07.BHasFruitV.forFlat(FruitD f,TreeD t)   (Public Method)
  Declared as: boolean
    Define [TreeD.java, 161]         ch07.BHasFruitV
    Override [TreeD.java, 161]       ch07.BTreeVisitorI.forFlat(FruitD f,TreeD t)

ch07.BHasFruitV.forSplit(TreeD l,TreeD t)   (Public Method)
  Declared as: boolean
    Define [TreeD.java, 167]         ch07.BHasFruitV
    Override [TreeD.java, 167]       ch07.BTreeVisitorI.forSplit(TreeD l,TreeD t)

ch07.BIsFlatV.forBud   (Public Method)
  Declared as: boolean
    Define [TreeD.java, 101]         ch07.BIsFlatV
    Override [TreeD.java, 101]       ch07.BTreeVisitorI.forBud

ch07.BIsFlatV.forFlat(FruitD f,TreeD t)   (Public Method)
  Declared as: boolean
    Define [TreeD.java, 107]         ch07.BIsFlatV
    Override [TreeD.java, 107]       ch07.BTreeVisitorI.forFlat(FruitD f,TreeD t)

ch07.BIsFlatV.forSplit(TreeD l,TreeD t)   (Public Method)
  Declared as: boolean
    Define [TreeD.java, 113]         ch07.BIsFlatV
    Override [TreeD.java, 113]       ch07.BTreeVisitorI.forSplit(TreeD l,TreeD t)

ch07.BIsSplitV.forBud   (Public Method)
  Declared as: boolean
    Define [TreeD.java, 124]         ch07.BIsSplitV
    Override [TreeD.java, 124]       ch07.BTreeVisitorI.forBud

ch07.BIsSplitV.forFlat(FruitD f,TreeD t)   (Public Method)
  Declared as: boolean
    Define [TreeD.java, 130]         ch07.BIsSplitV
    Override [TreeD.java, 130]       ch07.BTreeVisitorI.forFlat(FruitD f,TreeD t)

ch07.BIsSplitV.forSplit(TreeD l,TreeD t)   (Public Method)
  Declared as: boolean
    Define [TreeD.java, 136]         ch07.BIsSplitV
    Override [TreeD.java, 136]       ch07.BTreeVisitorI.forSplit(TreeD l,TreeD t)
                                                                     Page 111
                      Program Unit Cross Reference Report
===============================================================================

ch07.BTreeVisitorI.forBud   (Abstract Method)
  Declared as: boolean
    Override [TreeD.java, 155]       ch07.BHasFruitV.forBud
    Override [TreeD.java, 101]       ch07.BIsFlatV.forBud
    Override [TreeD.java, 124]       ch07.BIsSplitV.forBud
    Define [TreeD.java, 93]          ch07.BTreeVisitorI
    Call [TreeD.java, 14]            ch07.Bud.accept(BTreeVisitorI ask)

ch07.BTreeVisitorI.forFlat(FruitD f,TreeD t)   (Abstract Method)
  Declared as: boolean
    Override [TreeD.java, 161]       ch07.BHasFruitV.forFlat(FruitD f,TreeD t)
    Override [TreeD.java, 107]       ch07.BIsFlatV.forFlat(FruitD f,TreeD t)
    Override [TreeD.java, 130]       ch07.BIsSplitV.forFlat(FruitD f,TreeD t)
    Define [TreeD.java, 94]          ch07.BTreeVisitorI
    Call [TreeD.java, 45]            ch07.Flat.accept(BTreeVisitorI ask)

ch07.BTreeVisitorI.forSplit(TreeD l,TreeD t)   (Abstract Method)
  Declared as: boolean
    Override [TreeD.java, 167]       ch07.BHasFruitV.forSplit(TreeD l,TreeD t)
    Override [TreeD.java, 113]       ch07.BIsFlatV.forSplit(TreeD l,TreeD t)
    Override [TreeD.java, 136]       ch07.BIsSplitV.forSplit(TreeD l,TreeD t)
    Define [TreeD.java, 95]          ch07.BTreeVisitorI
    Call [TreeD.java, 76]            ch07.Split.accept(BTreeVisitorI ask)

ch07.Bud.accept(BTreeVisitorI ask)   (Method)
  Declared as: boolean
    Define [TreeD.java, 12]          ch07.Bud
    Override [TreeD.java, 12]        ch07.TreeD.accept(BTreeVisitorI ask)

ch07.Bud.accept(ITreeVisitorI ask)   (Method)
  Declared as: int
    Define [TreeD.java, 18]          ch07.Bud
    Override [TreeD.java, 18]        ch07.TreeD.accept(ITreeVisitorI ask)

ch07.Bud.accept(TTreeVisitorI ask)   (Method)
  Declared as: TreeD
    Define [TreeD.java, 24]          ch07.Bud
    Override [TreeD.java, 24]        ch07.TreeD.accept(TTreeVisitorI ask)

ch07.Fig.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [FruitD.java, 30]         ch07.Fig
    Override [FruitD.java, 30]       java.lang.Object.equals(Object obj)

ch07.Flat.accept(BTreeVisitorI ask)   (Method)
  Declared as: boolean
    Define [TreeD.java, 43]          ch07.Flat
    Override [TreeD.java, 43]        ch07.TreeD.accept(BTreeVisitorI ask)

ch07.Flat.accept(ITreeVisitorI ask)   (Method)
  Declared as: int
    Define [TreeD.java, 49]          ch07.Flat
    Override [TreeD.java, 49]        ch07.TreeD.accept(ITreeVisitorI ask)
                                                                     Page 112
                      Program Unit Cross Reference Report
===============================================================================

ch07.Flat.accept(TTreeVisitorI ask)   (Method)
  Declared as: TreeD
    Define [TreeD.java, 55]          ch07.Flat
    Override [TreeD.java, 55]        ch07.TreeD.accept(TTreeVisitorI ask)

ch07.Flat.Flat(FruitD _f,TreeD _t)   (Public Constructor)
    Define [TreeD.java, 36]          ch07.Flat
    Call [TreeD.java, 257]           ch07.TSubstsV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 259]           ch07.TSubstsV.forFlat(FruitD f,TreeD t)

ch07.IHeightV.forBud   (Public Method)
  Declared as: int
    Define [TreeD.java, 176]         ch07.IHeightV
    Override [TreeD.java, 176]       ch07.ITreeVisitorI.forBud

ch07.IHeightV.forFlat(FruitD f,TreeD t)   (Public Method)
  Declared as: int
    Define [TreeD.java, 182]         ch07.IHeightV
    Override [TreeD.java, 182]       ch07.ITreeVisitorI.forFlat(FruitD f,TreeD t)

ch07.IHeightV.forSplit(TreeD l,TreeD t)   (Public Method)
  Declared as: int
    Define [TreeD.java, 188]         ch07.IHeightV
    Override [TreeD.java, 188]       ch07.ITreeVisitorI.forSplit(TreeD l,TreeD t)

ch07.IOccursV.forBud   (Public Method)
  Declared as: int
    Define [TreeD.java, 206]         ch07.IOccursV
    Override [TreeD.java, 206]       ch07.ITreeVisitorI.forBud

ch07.IOccursV.forFlat(FruitD f,TreeD t)   (Public Method)
  Declared as: int
    Define [TreeD.java, 212]         ch07.IOccursV
    Override [TreeD.java, 212]       ch07.ITreeVisitorI.forFlat(FruitD f,TreeD t)

ch07.IOccursV.forSplit(TreeD l,TreeD t)   (Public Method)
  Declared as: int
    Define [TreeD.java, 224]         ch07.IOccursV
    Override [TreeD.java, 224]       ch07.ITreeVisitorI.forSplit(TreeD l,TreeD t)

ch07.IOccursV.IOccursV(FruitD _a)   (Public Constructor)
    Define [TreeD.java, 200]         ch07.IOccursV

ch07.ITreeVisitorI.forBud   (Abstract Method)
  Declared as: int
    Call [TreeD.java, 20]            ch07.Bud.accept(ITreeVisitorI ask)
    Override [TreeD.java, 176]       ch07.IHeightV.forBud
    Override [TreeD.java, 206]       ch07.IOccursV.forBud
    Define [TreeD.java, 146]         ch07.ITreeVisitorI

ch07.ITreeVisitorI.forFlat(FruitD f,TreeD t)   (Abstract Method)
  Declared as: int
    Call [TreeD.java, 51]            ch07.Flat.accept(ITreeVisitorI ask)
    Override [TreeD.java, 182]       ch07.IHeightV.forFlat(FruitD f,TreeD t)
    Override [TreeD.java, 212]       ch07.IOccursV.forFlat(FruitD f,TreeD t)
                                                                     Page 113
                      Program Unit Cross Reference Report
===============================================================================
    Define [TreeD.java, 147]         ch07.ITreeVisitorI

ch07.ITreeVisitorI.forSplit(TreeD l,TreeD t)   (Abstract Method)
  Declared as: int
    Override [TreeD.java, 188]       ch07.IHeightV.forSplit(TreeD l,TreeD t)
    Override [TreeD.java, 224]       ch07.IOccursV.forSplit(TreeD l,TreeD t)
    Define [TreeD.java, 148]         ch07.ITreeVisitorI
    Call [TreeD.java, 82]            ch07.Split.accept(ITreeVisitorI ask)

ch07.Lemon.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [FruitD.java, 24]         ch07.Lemon
    Override [FruitD.java, 24]       java.lang.Object.equals(Object obj)

ch07.Peach.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [FruitD.java, 6]          ch07.Peach
    Override [FruitD.java, 6]        java.lang.Object.equals(Object obj)

ch07.Pear.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [FruitD.java, 18]         ch07.Pear
    Override [FruitD.java, 18]       java.lang.Object.equals(Object obj)

ch07.Split.accept(BTreeVisitorI ask)   (Method)
  Declared as: boolean
    Define [TreeD.java, 74]          ch07.Split
    Override [TreeD.java, 74]        ch07.TreeD.accept(BTreeVisitorI ask)

ch07.Split.accept(ITreeVisitorI ask)   (Method)
  Declared as: int
    Define [TreeD.java, 80]          ch07.Split
    Override [TreeD.java, 80]        ch07.TreeD.accept(ITreeVisitorI ask)

ch07.Split.accept(TTreeVisitorI ask)   (Method)
  Declared as: TreeD
    Define [TreeD.java, 86]          ch07.Split
    Override [TreeD.java, 86]        ch07.TreeD.accept(TTreeVisitorI ask)

ch07.Split.Split(TreeD _l,TreeD _t)   (Public Constructor)
    Define [TreeD.java, 67]          ch07.Split
    Call [TreeD.java, 266]           ch07.TSubstsV.forSplit(TreeD l,TreeD t)

ch07.TreeD.accept(BTreeVisitorI ask)   (Abstract Method)
  Declared as: boolean
    Call [TreeD.java, 169]           ch07.BHasFruitV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 169]           ch07.BHasFruitV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 109]           ch07.BIsFlatV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 138]           ch07.BIsSplitV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 138]           ch07.BIsSplitV.forSplit(TreeD l,TreeD t)
    Override [TreeD.java, 12]        ch07.Bud.accept(BTreeVisitorI ask)
    Override [TreeD.java, 43]        ch07.Flat.accept(BTreeVisitorI ask)
    Override [TreeD.java, 74]        ch07.Split.accept(BTreeVisitorI ask)
    Define [TreeD.java, 4]           ch07.TreeD
                                                                     Page 114
                      Program Unit Cross Reference Report
===============================================================================

ch07.TreeD.accept(ITreeVisitorI ask)   (Abstract Method)
  Declared as: int
    Override [TreeD.java, 18]        ch07.Bud.accept(ITreeVisitorI ask)
    Override [TreeD.java, 49]        ch07.Flat.accept(ITreeVisitorI ask)
    Call [TreeD.java, 184]           ch07.IHeightV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 192]           ch07.IHeightV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 192]           ch07.IHeightV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 215]           ch07.IOccursV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 218]           ch07.IOccursV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 226]           ch07.IOccursV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 226]           ch07.IOccursV.forSplit(TreeD l,TreeD t)
    Override [TreeD.java, 80]        ch07.Split.accept(ITreeVisitorI ask)
    Define [TreeD.java, 5]           ch07.TreeD

ch07.TreeD.accept(TTreeVisitorI ask)   (Abstract Method)
  Declared as: TreeD
    Override [TreeD.java, 24]        ch07.Bud.accept(TTreeVisitorI ask)
    Override [TreeD.java, 55]        ch07.Flat.accept(TTreeVisitorI ask)
    Override [TreeD.java, 86]        ch07.Split.accept(TTreeVisitorI ask)
    Call [TreeD.java, 257]           ch07.TSubstsV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 259]           ch07.TSubstsV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 266]           ch07.TSubstsV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 266]           ch07.TSubstsV.forSplit(TreeD l,TreeD t)
    Define [TreeD.java, 6]           ch07.TreeD

ch07.TSubstsV.forBud   (Public Method)
  Declared as: TreeD
    Define [TreeD.java, 248]         ch07.TSubstsV
    Override [TreeD.java, 248]       ch07.TTreeVisitorI.forBud

ch07.TSubstsV.forFlat(FruitD f,TreeD t)   (Public Method)
  Declared as: TreeD
    Define [TreeD.java, 254]         ch07.TSubstsV
    Override [TreeD.java, 254]       ch07.TTreeVisitorI.forFlat(FruitD f,TreeD t)

ch07.TSubstsV.forSplit(TreeD l,TreeD t)   (Public Method)
  Declared as: TreeD
    Define [TreeD.java, 264]         ch07.TSubstsV
    Override [TreeD.java, 264]       ch07.TTreeVisitorI.forSplit(TreeD l,TreeD t)

ch07.TSubstsV.TSubstsV(FruitD _n,FruitD _o)   (Public Constructor)
    Define [TreeD.java, 242]         ch07.TSubstsV

ch07.TTreeVisitorI.forBud   (Abstract Method)
  Declared as: TreeD
    Call [TreeD.java, 26]            ch07.Bud.accept(TTreeVisitorI ask)
    Override [TreeD.java, 248]       ch07.TSubstsV.forBud
    Define [TreeD.java, 232]         ch07.TTreeVisitorI

ch07.TTreeVisitorI.forFlat(FruitD f,TreeD t)   (Abstract Method)
  Declared as: TreeD
    Call [TreeD.java, 57]            ch07.Flat.accept(TTreeVisitorI ask)
    Override [TreeD.java, 254]       ch07.TSubstsV.forFlat(FruitD f,TreeD t)
    Define [TreeD.java, 233]         ch07.TTreeVisitorI
                                                                     Page 115
                      Program Unit Cross Reference Report
===============================================================================

ch07.TTreeVisitorI.forSplit(TreeD l,TreeD t)   (Abstract Method)
  Declared as: TreeD
    Call [TreeD.java, 88]            ch07.Split.accept(TTreeVisitorI ask)
    Override [TreeD.java, 264]       ch07.TSubstsV.forSplit(TreeD l,TreeD t)
    Define [TreeD.java, 234]         ch07.TTreeVisitorI

ch071   (Package)
    Define [FruitD.java, 1]          FruitD.java
    Declare [FruitD.java, 1]         FruitD.java
    Define [TreeD.java, 1]           TreeD.java
    Declare [TreeD.java, 1]          TreeD.java

ch071.Apple.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [FruitD.java, 12]         ch071.Apple
    Override [FruitD.java, 12]       java.lang.Object.equals(Object obj)

ch071.Bud.accept(TreeVisitorI ask)   (Method)
  Declared as: Object
    Define [TreeD.java, 11]          ch071.Bud
    Override [TreeD.java, 11]        ch071.TreeD.accept(TreeVisitorI ask)

ch071.Fig.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [FruitD.java, 30]         ch071.Fig
    Override [FruitD.java, 30]       java.lang.Object.equals(Object obj)

ch071.Flat.accept(TreeVisitorI ask)   (Method)
  Declared as: Object
    Define [TreeD.java, 32]          ch071.Flat
    Override [TreeD.java, 32]        ch071.TreeD.accept(TreeVisitorI ask)

ch071.Flat.Flat(FruitD _f,TreeD _t)   (Public Constructor)
    Define [TreeD.java, 25]          ch071.Flat
    Call [TreeD.java, 219]           ch071.TSubstsV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 221]           ch071.TSubstsV.forFlat(FruitD f,TreeD t)

ch071.HasFruitV.forBud   (Public Method)
  Declared as: Object
    Define [TreeD.java, 121]         ch071.HasFruitV
    Override [TreeD.java, 121]       ch071.TreeVisitorI.forBud

ch071.HasFruitV.forFlat(FruitD f,TreeD t)   (Public Method)
  Declared as: Object
    Define [TreeD.java, 127]         ch071.HasFruitV
    Override [TreeD.java, 127]       ch071.TreeVisitorI.forFlat(FruitD f,TreeD t)

ch071.HasFruitV.forSplit(TreeD l,TreeD t)   (Public Method)
  Declared as: Object
    Define [TreeD.java, 133]         ch071.HasFruitV
    Override [TreeD.java, 133]       ch071.TreeVisitorI.forSplit(TreeD l,TreeD t)

ch071.IHeightV.forBud   (Public Method)
  Declared as: Object
    Define [TreeD.java, 143]         ch071.IHeightV
                                                                     Page 116
                      Program Unit Cross Reference Report
===============================================================================
    Override [TreeD.java, 143]       ch071.TreeVisitorI.forBud

ch071.IHeightV.forFlat(FruitD f,TreeD t)   (Public Method)
  Declared as: Object
    Define [TreeD.java, 149]         ch071.IHeightV
    Override [TreeD.java, 149]       ch071.TreeVisitorI.forFlat(FruitD f,TreeD t)

ch071.IHeightV.forSplit(TreeD l,TreeD t)   (Public Method)
  Declared as: Object
    Define [TreeD.java, 155]         ch071.IHeightV
    Override [TreeD.java, 155]       ch071.TreeVisitorI.forSplit(TreeD l,TreeD t)

ch071.IOccursV.forBud   (Public Method)
  Declared as: Object
    Define [TreeD.java, 173]         ch071.IOccursV
    Override [TreeD.java, 173]       ch071.TreeVisitorI.forBud

ch071.IOccursV.forFlat(FruitD f,TreeD t)   (Public Method)
  Declared as: Object
    Define [TreeD.java, 179]         ch071.IOccursV
    Override [TreeD.java, 179]       ch071.TreeVisitorI.forFlat(FruitD f,TreeD t)

ch071.IOccursV.forSplit(TreeD l,TreeD t)   (Public Method)
  Declared as: Object
    Define [TreeD.java, 191]         ch071.IOccursV
    Override [TreeD.java, 191]       ch071.TreeVisitorI.forSplit(TreeD l,TreeD t)

ch071.IOccursV.IOccursV(FruitD _a)   (Public Constructor)
    Define [TreeD.java, 167]         ch071.IOccursV

ch071.IsFlatV.forBud   (Public Method)
  Declared as: Object
    Define [TreeD.java, 69]          ch071.IsFlatV
    Override [TreeD.java, 69]        ch071.TreeVisitorI.forBud

ch071.IsFlatV.forFlat(FruitD f,TreeD t)   (Public Method)
  Declared as: Object
    Define [TreeD.java, 75]          ch071.IsFlatV
    Override [TreeD.java, 75]        ch071.TreeVisitorI.forFlat(FruitD f,TreeD t)

ch071.IsFlatV.forSplit(TreeD l,TreeD t)   (Public Method)
  Declared as: Object
    Define [TreeD.java, 81]          ch071.IsFlatV
    Override [TreeD.java, 81]        ch071.TreeVisitorI.forSplit(TreeD l,TreeD t)

ch071.IsSplitV.forBud   (Public Method)
  Declared as: Object
    Define [TreeD.java, 94]          ch071.IsSplitV
    Override [TreeD.java, 94]        ch071.TreeVisitorI.forBud

ch071.IsSplitV.forFlat(FruitD f,TreeD t)   (Public Method)
  Declared as: Object
    Define [TreeD.java, 100]         ch071.IsSplitV
    Override [TreeD.java, 100]       ch071.TreeVisitorI.forFlat(FruitD f,TreeD t)
                                                                     Page 117
                      Program Unit Cross Reference Report
===============================================================================

ch071.IsSplitV.forSplit(TreeD l,TreeD t)   (Public Method)
  Declared as: Object
    Define [TreeD.java, 106]         ch071.IsSplitV
    Override [TreeD.java, 106]       ch071.TreeVisitorI.forSplit(TreeD l,TreeD t)

ch071.Lemon.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [FruitD.java, 24]         ch071.Lemon
    Override [FruitD.java, 24]       java.lang.Object.equals(Object obj)

ch071.Peach.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [FruitD.java, 6]          ch071.Peach
    Override [FruitD.java, 6]        java.lang.Object.equals(Object obj)

ch071.Pear.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [FruitD.java, 18]         ch071.Pear
    Override [FruitD.java, 18]       java.lang.Object.equals(Object obj)

ch071.Split.accept(TreeVisitorI ask)   (Method)
  Declared as: Object
    Define [TreeD.java, 52]          ch071.Split
    Override [TreeD.java, 52]        ch071.TreeD.accept(TreeVisitorI ask)

ch071.Split.Split(TreeD _l,TreeD _t)   (Public Constructor)
    Define [TreeD.java, 46]          ch071.Split
    Call [TreeD.java, 228]           ch071.TSubstsV.forSplit(TreeD l,TreeD t)

ch071.TreeD.accept(TreeVisitorI ask)   (Abstract Method)
  Declared as: Object
    Override [TreeD.java, 11]        ch071.Bud.accept(TreeVisitorI ask)
    Override [TreeD.java, 32]        ch071.Flat.accept(TreeVisitorI ask)
    Call [TreeD.java, 135]           ch071.HasFruitV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 135]           ch071.HasFruitV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 151]           ch071.IHeightV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 159]           ch071.IHeightV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 159]           ch071.IHeightV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 182]           ch071.IOccursV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 185]           ch071.IOccursV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 193]           ch071.IOccursV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 193]           ch071.IOccursV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 77]            ch071.IsFlatV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 108]           ch071.IsSplitV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 109]           ch071.IsSplitV.forSplit(TreeD l,TreeD t)
    Override [TreeD.java, 52]        ch071.Split.accept(TreeVisitorI ask)
    Call [TreeD.java, 219]           ch071.TSubstsV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 221]           ch071.TSubstsV.forFlat(FruitD f,TreeD t)
    Call [TreeD.java, 228]           ch071.TSubstsV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 228]           ch071.TSubstsV.forSplit(TreeD l,TreeD t)
    Define [TreeD.java, 4]           ch071.TreeD

ch071.TreeVisitorI.forBud   (Abstract Method)
  Declared as: Object
    Override [TreeD.java, 121]       ch071.HasFruitV.forBud
                                                                     Page 118
                      Program Unit Cross Reference Report
===============================================================================
    Override [TreeD.java, 143]       ch071.IHeightV.forBud
    Override [TreeD.java, 173]       ch071.IOccursV.forBud
    Override [TreeD.java, 69]        ch071.IsFlatV.forBud
    Override [TreeD.java, 94]        ch071.IsSplitV.forBud
    Override [TreeD.java, 210]       ch071.TSubstsV.forBud
    Define [TreeD.java, 61]          ch071.TreeVisitorI

ch071.TreeVisitorI.forFlat(FruitD f,TreeD t)   (Abstract Method)
  Declared as: Object
    Call [TreeD.java, 34]            ch071.Flat.accept(TreeVisitorI ask)
    Override [TreeD.java, 127]       ch071.HasFruitV.forFlat(FruitD f,TreeD t)
    Override [TreeD.java, 149]       ch071.IHeightV.forFlat(FruitD f,TreeD t)
    Override [TreeD.java, 179]       ch071.IOccursV.forFlat(FruitD f,TreeD t)
    Override [TreeD.java, 75]        ch071.IsFlatV.forFlat(FruitD f,TreeD t)
    Override [TreeD.java, 100]       ch071.IsSplitV.forFlat(FruitD f,TreeD t)
    Override [TreeD.java, 216]       ch071.TSubstsV.forFlat(FruitD f,TreeD t)
    Define [TreeD.java, 62]          ch071.TreeVisitorI

ch071.TreeVisitorI.forSplit(TreeD l,TreeD t)   (Abstract Method)
  Declared as: Object
    Override [TreeD.java, 133]       ch071.HasFruitV.forSplit(TreeD l,TreeD t)
    Override [TreeD.java, 155]       ch071.IHeightV.forSplit(TreeD l,TreeD t)
    Override [TreeD.java, 191]       ch071.IOccursV.forSplit(TreeD l,TreeD t)
    Override [TreeD.java, 81]        ch071.IsFlatV.forSplit(TreeD l,TreeD t)
    Override [TreeD.java, 106]       ch071.IsSplitV.forSplit(TreeD l,TreeD t)
    Call [TreeD.java, 54]            ch071.Split.accept(TreeVisitorI ask)
    Override [TreeD.java, 226]       ch071.TSubstsV.forSplit(TreeD l,TreeD t)
    Define [TreeD.java, 63]          ch071.TreeVisitorI

ch071.TSubstsV.forBud   (Public Method)
  Declared as: Object
    Define [TreeD.java, 210]         ch071.TSubstsV
    Override [TreeD.java, 210]       ch071.TreeVisitorI.forBud

ch071.TSubstsV.forFlat(FruitD f,TreeD t)   (Public Method)
  Declared as: Object
    Define [TreeD.java, 216]         ch071.TSubstsV
    Override [TreeD.java, 216]       ch071.TreeVisitorI.forFlat(FruitD f,TreeD t)

ch071.TSubstsV.forSplit(TreeD l,TreeD t)   (Public Method)
  Declared as: TreeD
    Define [TreeD.java, 226]         ch071.TSubstsV
    Override [TreeD.java, 226]       ch071.TreeVisitorI.forSplit(TreeD l,TreeD t)

ch071.TSubstsV.TSubstsV(FruitD _n,FruitD _o)   (Public Constructor)
    Define [TreeD.java, 204]         ch071.TSubstsV

ch08   (Package)
    Define [ExprD.java, 1]           ExprD.java
    Declare [ExprD.java, 1]          ExprD.java
    Define [SetD.java, 1]            SetD.java
    Declare [SetD.java, 1]           SetD.java

ch08.Add.Add(Integer _i,SetD _s)   (Public Constructor)
    Define [SetD.java, 52]           ch08.Add
    Call [SetD.java, 8]              ch08.SetD.add(Integer i)
                                                                     Page 119
                      Program Unit Cross Reference Report
===============================================================================

ch08.Add.diff(SetD t)   (Method)
  Declared as: SetD
    Define [SetD.java, 74]           ch08.Add
    Override [SetD.java, 74]         ch08.SetD.diff(SetD s)

ch08.Add.mem(Integer n)   (Method)
  Declared as: boolean
    Define [SetD.java, 58]           ch08.Add
    Override [SetD.java, 58]         ch08.SetD.mem(Integer i)

ch08.Add.plus(SetD t)   (Method)
  Declared as: SetD
    Define [SetD.java, 68]           ch08.Add
    Override [SetD.java, 68]         ch08.SetD.plus(SetD s)

ch08.Add.prod(SetD t)   (Method)
  Declared as: SetD
    Define [SetD.java, 84]           ch08.Add
    Override [SetD.java, 84]         ch08.SetD.prod(SetD s)

ch08.Const.accpet(ExprVisitorI ask)   (Method)
  Declared as: Object
    Define [ExprD.java, 109]         ch08.Const
    Override [ExprD.java, 109]       ch08.ExprD.accpet(ExprVisitorI ask)

ch08.Const.Const(Object _c)   (Public Constructor)
    Define [ExprD.java, 104]         ch08.Const

ch08.Diff.accpet(ExprVisitorI ask)   (Method)
  Declared as: Object
    Define [ExprD.java, 80]          ch08.Diff
    Override [ExprD.java, 80]        ch08.ExprD.accpet(ExprVisitorI ask)

ch08.Diff.Diff(ExprD _l,ExprD _r)   (Public Constructor)
    Define [ExprD.java, 74]          ch08.Diff

ch08.Empty.diff(SetD s)   (Method)
  Declared as: SetD
    Define [SetD.java, 34]           ch08.Empty
    Override [SetD.java, 34]         ch08.SetD.diff(SetD s)

ch08.Empty.mem(Integer i)   (Method)
  Declared as: boolean
    Define [SetD.java, 22]           ch08.Empty
    Override [SetD.java, 22]         ch08.SetD.mem(Integer i)

ch08.Empty.plus(SetD s)   (Method)
  Declared as: SetD
    Define [SetD.java, 28]           ch08.Empty
    Override [SetD.java, 28]         ch08.SetD.plus(SetD s)

ch08.Empty.prod(SetD s)   (Method)
  Declared as: SetD
    Define [SetD.java, 40]           ch08.Empty
    Override [SetD.java, 40]         ch08.SetD.prod(SetD s)
                                                                     Page 120
                      Program Unit Cross Reference Report
===============================================================================

ch08.ExprD.accpet(ExprVisitorI ask)   (Abstract Method)
  Declared as: Object
    Override [ExprD.java, 109]       ch08.Const.accpet(ExprVisitorI ask)
    Override [ExprD.java, 80]        ch08.Diff.accpet(ExprVisitorI ask)
    Define [ExprD.java, 48]          ch08.ExprD
    Call [ExprD.java, 21]            ch08.IntEvalV.forDiff(ExprD l,ExprD r)
    Call [ExprD.java, 21]            ch08.IntEvalV.forDiff(ExprD l,ExprD r)
    Call [ExprD.java, 15]            ch08.IntEvalV.forPlus(ExprD l,ExprD r)
    Call [ExprD.java, 15]            ch08.IntEvalV.forPlus(ExprD l,ExprD r)
    Call [ExprD.java, 27]            ch08.IntEvalV.forProd(ExprD l,ExprD r)
    Call [ExprD.java, 27]            ch08.IntEvalV.forProd(ExprD l,ExprD r)
    Override [ExprD.java, 64]        ch08.Plus.accpet(ExprVisitorI ask)
    Override [ExprD.java, 95]        ch08.Prod.accpet(ExprVisitorI ask)

ch08.ExprVisitorI.forConst(Object c)   (Abstract Method)
  Declared as: Object
    Call [ExprD.java, 111]           ch08.Const.accpet(ExprVisitorI ask)
    Define [ExprD.java, 7]           ch08.ExprVisitorI
    Override [ExprD.java, 31]        ch08.IntEvalV.forConst(Object c)

ch08.ExprVisitorI.forDiff(ExprD l,ExprD r)   (Abstract Method)
  Declared as: Object
    Call [ExprD.java, 82]            ch08.Diff.accpet(ExprVisitorI ask)
    Define [ExprD.java, 5]           ch08.ExprVisitorI
    Override [ExprD.java, 19]        ch08.IntEvalV.forDiff(ExprD l,ExprD r)

ch08.ExprVisitorI.forPlus(ExprD l,ExprD r)   (Abstract Method)
  Declared as: Object
    Define [ExprD.java, 4]           ch08.ExprVisitorI
    Override [ExprD.java, 13]        ch08.IntEvalV.forPlus(ExprD l,ExprD r)
    Call [ExprD.java, 66]            ch08.Plus.accpet(ExprVisitorI ask)

ch08.ExprVisitorI.forProd(ExprD l,ExprD r)   (Abstract Method)
  Declared as: Object
    Define [ExprD.java, 6]           ch08.ExprVisitorI
    Override [ExprD.java, 25]        ch08.IntEvalV.forProd(ExprD l,ExprD r)
    Call [ExprD.java, 97]            ch08.Prod.accpet(ExprVisitorI ask)

ch08.IntEvalV.diff(Object l,Object r)   (Method)
  Declared as: Object
    Define [ExprD.java, 39]          ch08.IntEvalV
    Call [ExprD.java, 21]            ch08.IntEvalV.forDiff(ExprD l,ExprD r)
    Override [SetD.java, 103]        ch08.SetEvalV.diff(Object l,Object r)

ch08.IntEvalV.forConst(Object c)   (Public Method)
  Declared as: Object
    Define [ExprD.java, 31]          ch08.IntEvalV
    Override [ExprD.java, 31]        ch08.ExprVisitorI.forConst(Object c)

ch08.IntEvalV.forDiff(ExprD l,ExprD r)   (Public Method)
  Declared as: Object
    Define [ExprD.java, 19]          ch08.IntEvalV
    Override [ExprD.java, 19]        ch08.ExprVisitorI.forDiff(ExprD l,ExprD r)
                                                                     Page 121
                      Program Unit Cross Reference Report
===============================================================================

ch08.IntEvalV.forPlus(ExprD l,ExprD r)   (Public Method)
  Declared as: Object
    Define [ExprD.java, 13]          ch08.IntEvalV
    Override [ExprD.java, 13]        ch08.ExprVisitorI.forPlus(ExprD l,ExprD r)

ch08.IntEvalV.forProd(ExprD l,ExprD r)   (Public Method)
  Declared as: Object
    Define [ExprD.java, 25]          ch08.IntEvalV
    Override [ExprD.java, 25]        ch08.ExprVisitorI.forProd(ExprD l,ExprD r)

ch08.IntEvalV.plus(Object l,Object r)   (Method)
  Declared as: Object
    Define [ExprD.java, 36]          ch08.IntEvalV
    Call [ExprD.java, 15]            ch08.IntEvalV.forPlus(ExprD l,ExprD r)
    Override [SetD.java, 98]         ch08.SetEvalV.plus(Object l,Object r)

ch08.IntEvalV.prod(Object l,Object r)   (Method)
  Declared as: Object
    Define [ExprD.java, 42]          ch08.IntEvalV
    Call [ExprD.java, 27]            ch08.IntEvalV.forProd(ExprD l,ExprD r)
    Override [SetD.java, 108]        ch08.SetEvalV.prod(Object l,Object r)

ch08.Plus.accpet(ExprVisitorI ask)   (Method)
  Declared as: Object
    Define [ExprD.java, 64]          ch08.Plus
    Override [ExprD.java, 64]        ch08.ExprD.accpet(ExprVisitorI ask)

ch08.Plus.Plus(ExprD _l,ExprD _r)   (Public Constructor)
    Define [ExprD.java, 58]          ch08.Plus

ch08.Prod.accpet(ExprVisitorI ask)   (Method)
  Declared as: Object
    Define [ExprD.java, 95]          ch08.Prod
    Override [ExprD.java, 95]        ch08.ExprD.accpet(ExprVisitorI ask)

ch08.Prod.Prod(ExprD _l,ExprD _r)   (Public Constructor)
    Define [ExprD.java, 89]          ch08.Prod

ch08.SetD.add(Integer i)   (Method)
  Declared as: SetD
    Call [SetD.java, 79]             ch08.Add.diff(SetD t)
    Call [SetD.java, 70]             ch08.Add.plus(SetD t)
    Call [SetD.java, 87]             ch08.Add.prod(SetD t)
    Define [SetD.java, 4]            ch08.SetD

ch08.SetD.diff(SetD s)   (Abstract Method)
  Declared as: SetD
    Override [SetD.java, 74]         ch08.Add.diff(SetD t)
    Call [SetD.java, 77]             ch08.Add.diff(SetD t)
    Call [SetD.java, 79]             ch08.Add.diff(SetD t)
    Override [SetD.java, 34]         ch08.Empty.diff(SetD s)
    Define [SetD.java, 14]           ch08.SetD
    Call [SetD.java, 105]            ch08.SetEvalV.diff(Object l,Object r)
                                                                     Page 122
                      Program Unit Cross Reference Report
===============================================================================

ch08.SetD.mem(Integer i)   (Abstract Method)
  Declared as: boolean
    Call [SetD.java, 76]             ch08.Add.diff(SetD t)
    Override [SetD.java, 58]         ch08.Add.mem(Integer n)
    Call [SetD.java, 63]             ch08.Add.mem(Integer n)
    Call [SetD.java, 86]             ch08.Add.prod(SetD t)
    Override [SetD.java, 22]         ch08.Empty.mem(Integer i)
    Define [SetD.java, 12]           ch08.SetD
    Call [SetD.java, 5]              ch08.SetD.add(Integer i)

ch08.SetD.plus(SetD s)   (Abstract Method)
  Declared as: SetD
    Override [SetD.java, 68]         ch08.Add.plus(SetD t)
    Call [SetD.java, 70]             ch08.Add.plus(SetD t)
    Override [SetD.java, 28]         ch08.Empty.plus(SetD s)
    Define [SetD.java, 13]           ch08.SetD
    Call [SetD.java, 100]            ch08.SetEvalV.plus(Object l,Object r)

ch08.SetD.prod(SetD s)   (Abstract Method)
  Declared as: SetD
    Override [SetD.java, 84]         ch08.Add.prod(SetD t)
    Call [SetD.java, 87]             ch08.Add.prod(SetD t)
    Call [SetD.java, 89]             ch08.Add.prod(SetD t)
    Override [SetD.java, 40]         ch08.Empty.prod(SetD s)
    Define [SetD.java, 15]           ch08.SetD
    Call [SetD.java, 110]            ch08.SetEvalV.prod(Object l,Object r)

ch08.SetEvalV.diff(Object l,Object r)   (Method)
  Declared as: Object
    Define [SetD.java, 103]          ch08.SetEvalV
    Override [SetD.java, 103]        ch08.IntEvalV.diff(Object l,Object r)

ch08.SetEvalV.plus(Object l,Object r)   (Method)
  Declared as: Object
    Define [SetD.java, 98]           ch08.SetEvalV
    Override [SetD.java, 98]         ch08.IntEvalV.plus(Object l,Object r)

ch08.SetEvalV.prod(Object l,Object r)   (Method)
  Declared as: Object
    Define [SetD.java, 108]          ch08.SetEvalV
    Override [SetD.java, 108]        ch08.IntEvalV.prod(Object l,Object r)

ch0801That   (Package)
    Define [PieDUpdate.java, 1]      PieDUpdate.java
    Declare [PieDUpdate.java, 1]     PieDUpdate.java
    Define [TestThat.java, 1]        TestThat.java
    Declare [TestThat.java, 1]       TestThat.java

ch0801That.Bot.accept(PieVistor1 ask)   (Method)
  Declared as: PieDUpdate
    Define [PieDUpdate.java, 13]     ch0801That.Bot
    Override [PieDUpdate.java, 13]   ch0801That.PieDUpdate.accept(PieVistor1 ask)

ch0801That.Bot.toString   (Public Method)
  Declared as: String
                                                                     Page 123
                      Program Unit Cross Reference Report
===============================================================================
    Define [PieDUpdate.java, 18]     ch0801That.Bot
    Override [PieDUpdate.java, 18]   java.lang.Object.toString

ch0801That.LtSubstV.forBot(Bot that)   (Public Method)
  Declared as: PieDUpdate
    Define [PieDUpdate.java, 102]    ch0801That.LtSubstV
    Override [PieDUpdate.java, 102]   ch0801That.PieVistor1.forBot(Bot that)

ch0801That.LtSubstV.forTop(Top that)   (Public Method)
  Declared as: PieDUpdate
    Define [PieDUpdate.java, 108]    ch0801That.LtSubstV
    Override [PieDUpdate.java, 108]   ch0801That.PieVistor1.forTop(Top that)

ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)   (Public Constructor)
    Define [PieDUpdate.java, 95]     ch0801That.LtSubstV
    Call [PieDUpdate.java, 115]      ch0801That.LtSubstV.forTop(Top that)
    Call [TestThat.java, 8]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 11]         ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 14]         ch0801That.TestThat.main(String[] args)

ch0801That.PieDUpdate.accept(PieVistor1 ask)   (Abstract Method)
  Declared as: PieDUpdate
    Override [PieDUpdate.java, 13]   ch0801That.Bot.accept(PieVistor1 ask)
    Call [PieDUpdate.java, 115]      ch0801That.LtSubstV.forTop(Top that)
    Call [PieDUpdate.java, 117]      ch0801That.LtSubstV.forTop(Top that)
    Define [PieDUpdate.java, 8]      ch0801That.PieDUpdate
    Call [PieDUpdate.java, 62]       ch0801That.RemV.forTop(Top that)
    Call [PieDUpdate.java, 64]       ch0801That.RemV.forTop(Top that)
    Call [PieDUpdate.java, 83]       ch0801That.SubstV.forTop(Top that)
    Call [PieDUpdate.java, 85]       ch0801That.SubstV.forTop(Top that)
    Override [PieDUpdate.java, 33]   ch0801That.Top.accept(PieVistor1 ask)

ch0801That.PieVistor1.forBot(Bot that)   (Abstract Method)
  Declared as: PieDUpdate
    Call [PieDUpdate.java, 15]       ch0801That.Bot.accept(PieVistor1 ask)
    Override [PieDUpdate.java, 102]   ch0801That.LtSubstV.forBot(Bot that)
    Define [PieDUpdate.java, 44]     ch0801That.PieVistor1
    Override [PieDUpdate.java, 55]   ch0801That.RemV.forBot(Bot that)
    Override [PieDUpdate.java, 77]   ch0801That.SubstV.forBot(Bot that)

ch0801That.PieVistor1.forTop(Top that)   (Abstract Method)
  Declared as: PieDUpdate
    Override [PieDUpdate.java, 108]   ch0801That.LtSubstV.forTop(Top that)
    Define [PieDUpdate.java, 45]     ch0801That.PieVistor1
    Override [PieDUpdate.java, 60]   ch0801That.RemV.forTop(Top that)
    Override [PieDUpdate.java, 81]   ch0801That.SubstV.forTop(Top that)
    Call [PieDUpdate.java, 35]       ch0801That.Top.accept(PieVistor1 ask)

ch0801That.RemV.forBot(Bot that)   (Public Method)
  Declared as: PieDUpdate
    Define [PieDUpdate.java, 55]     ch0801That.RemV
    Override [PieDUpdate.java, 55]   ch0801That.PieVistor1.forBot(Bot that)

ch0801That.RemV.forTop(Top that)   (Public Method)
  Declared as: PieDUpdate
    Define [PieDUpdate.java, 60]     ch0801That.RemV
                                                                     Page 124
                      Program Unit Cross Reference Report
===============================================================================
    Override [PieDUpdate.java, 60]   ch0801That.PieVistor1.forTop(Top that)

ch0801That.RemV.RemV(Object _o)   (Public Constructor)
    Define [PieDUpdate.java, 50]     ch0801That.RemV
    Call [TestThat.java, 5]          ch0801That.TestThat.main(String[] args)

ch0801That.SubstV.forBot(Bot that)   (Public Method)
  Declared as: PieDUpdate
    Define [PieDUpdate.java, 77]     ch0801That.SubstV
    Override [PieDUpdate.java, 77]   ch0801That.PieVistor1.forBot(Bot that)

ch0801That.SubstV.forTop(Top that)   (Public Method)
  Declared as: PieDUpdate
    Define [PieDUpdate.java, 81]     ch0801That.SubstV
    Override [PieDUpdate.java, 81]   ch0801That.PieVistor1.forTop(Top that)

ch0801That.SubstV.SubstV(Object _n,Object _o)   (Public Constructor)
    Define [PieDUpdate.java, 72]     ch0801That.SubstV
    Call [TestThat.java, 6]          ch0801That.TestThat.main(String[] args)

ch0801That.TestThat.main(String[] args)   (Public Static Method)
  Declared as: void
    Define [TestThat.java, 4]        ch0801That.TestThat

ch0801That.Top.accept(PieVistor1 ask)   (Method)
  Declared as: PieDUpdate
    Define [PieDUpdate.java, 33]     ch0801That.Top
    Override [PieDUpdate.java, 33]   ch0801That.PieDUpdate.accept(PieVistor1 ask)
    Call [TestThat.java, 5]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 6]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 7]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 10]         ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 13]         ch0801That.TestThat.main(String[] args)

ch0801That.Top.Top(Object t,PieDUpdate r)   (Public Constructor)
    Call [PieDUpdate.java, 112]      ch0801That.LtSubstV.forTop(Top that)
    Call [PieDUpdate.java, 115]      ch0801That.LtSubstV.forTop(Top that)
    Call [PieDUpdate.java, 117]      ch0801That.LtSubstV.forTop(Top that)
    Call [PieDUpdate.java, 64]       ch0801That.RemV.forTop(Top that)
    Call [PieDUpdate.java, 83]       ch0801That.SubstV.forTop(Top that)
    Call [PieDUpdate.java, 85]       ch0801That.SubstV.forTop(Top that)
    Define [PieDUpdate.java, 27]     ch0801That.Top
    Call [TestThat.java, 5]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 5]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 5]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 6]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 6]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 6]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 7]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 7]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 7]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 7]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 7]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 7]          ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 10]         ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 10]         ch0801That.TestThat.main(String[] args)
                                                                     Page 125
                      Program Unit Cross Reference Report
===============================================================================
    Call [TestThat.java, 10]         ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 10]         ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 10]         ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 10]         ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 13]         ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 13]         ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 13]         ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 13]         ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 13]         ch0801That.TestThat.main(String[] args)
    Call [TestThat.java, 13]         ch0801That.TestThat.main(String[] args)

ch0801That.Top.toString   (Public Method)
  Declared as: String
    Define [PieDUpdate.java, 37]     ch0801That.Top
    Override [PieDUpdate.java, 37]   java.lang.Object.toString

ch081   (Package)
    Define [ExprD.java, 1]           ExprD.java
    Declare [ExprD.java, 1]          ExprD.java
    Define [PieD.java, 1]            PieD.java
    Declare [PieD.java, 1]           PieD.java
    Define [TestPieD.java, 1]        TestPieD.java
    Declare [TestPieD.java, 1]       TestPieD.java
    DotRef [TestPieD.java, 5]        ch081.TestPieD.main(String[] args)
    DotRef [TestPieD.java, 5]        ch081.TestPieD.main(String[] args)
    DotRef [TestPieD.java, 5]        ch081.TestPieD.main(String[] args)
    DotRef [TestPieD.java, 5]        ch081.TestPieD.main(String[] args)
    DotRef [TestPieD.java, 5]        ch081.TestPieD.main(String[] args)
    Define [SubstD.java, 1]          SubstD.java
    Declare [SubstD.java, 1]         SubstD.java
    Define [SubstVExt.java, 1]       SubstVExt.java
    Declare [SubstVExt.java, 1]      SubstVExt.java
    Define [SetD.java, 1]            SetD.java
    Declare [SetD.java, 1]           SetD.java

ch081.Add.Add(Integer _i,SetD _s)   (Public Constructor)
    Define [SetD.java, 52]           ch081.Add
    Call [SetD.java, 8]              ch081.SetD.add(Integer i)

ch081.Add.diff(SetD t)   (Method)
  Declared as: SetD
    Define [SetD.java, 74]           ch081.Add
    Override [SetD.java, 74]         ch081.SetD.diff(SetD s)

ch081.Add.mem(Integer n)   (Method)
  Declared as: boolean
    Define [SetD.java, 58]           ch081.Add
    Override [SetD.java, 58]         ch081.SetD.mem(Integer i)

ch081.Add.plus(SetD t)   (Method)
  Declared as: SetD
    Define [SetD.java, 68]           ch081.Add
    Override [SetD.java, 68]         ch081.SetD.plus(SetD s)

ch081.Add.prod(SetD t)   (Method)
  Declared as: SetD
                                                                     Page 126
                      Program Unit Cross Reference Report
===============================================================================
    Define [SetD.java, 84]           ch081.Add
    Override [SetD.java, 84]         ch081.SetD.prod(SetD s)

ch081.Bot.accept(PieVistor1 ask)   (Method)
  Declared as: PieD
    Define [PieD.java, 96]           ch081.Bot
    Override [PieD.java, 96]         ch081.PieD.accept(PieVistor1 ask)

ch081.Bot.toString   (Public Method)
  Declared as: String
    Define [PieD.java, 101]          ch081.Bot
    Override [PieD.java, 101]        java.lang.Object.toString

ch081.Const.accpet(ExprVisitorI ask)   (Method)
  Declared as: Object
    Define [ExprD.java, 115]         ch081.Const
    Override [ExprD.java, 115]       ch081.ExprD.accpet(ExprVisitorI ask)

ch081.Const.Const(Object _c)   (Public Constructor)
    Define [ExprD.java, 110]         ch081.Const

ch081.Diff.accpet(ExprVisitorI ask)   (Method)
  Declared as: Object
    Define [ExprD.java, 86]          ch081.Diff
    Override [ExprD.java, 86]        ch081.ExprD.accpet(ExprVisitorI ask)

ch081.Diff.Diff(ExprD _l,ExprD _r)   (Public Constructor)
    Define [ExprD.java, 80]          ch081.Diff

ch081.Empty.diff(SetD s)   (Method)
  Declared as: SetD
    Define [SetD.java, 34]           ch081.Empty
    Override [SetD.java, 34]         ch081.SetD.diff(SetD s)

ch081.Empty.mem(Integer i)   (Method)
  Declared as: boolean
    Define [SetD.java, 22]           ch081.Empty
    Override [SetD.java, 22]         ch081.SetD.mem(Integer i)

ch081.Empty.plus(SetD s)   (Method)
  Declared as: SetD
    Define [SetD.java, 28]           ch081.Empty
    Override [SetD.java, 28]         ch081.SetD.plus(SetD s)

ch081.Empty.prod(SetD s)   (Method)
  Declared as: SetD
    Define [SetD.java, 40]           ch081.Empty
    Override [SetD.java, 40]         ch081.SetD.prod(SetD s)

ch081.EvalV.diff(Object l,Object r)   (Abstract Method)
  Declared as: Object
    Define [ExprD.java, 36]          ch081.EvalV
    Call [ExprD.java, 20]            ch081.EvalV.forDiff(ExprD l,ExprD r)
    Override [ExprD.java, 44]        ch081.IntEvalV.diff(Object l,Object r)
    Override [SetD.java, 104]        ch081.SetEvalV.diff(Object l,Object r)
                                                                     Page 127
                      Program Unit Cross Reference Report
===============================================================================

ch081.EvalV.forConst(Object c)   (Public Method)
  Declared as: Object
    Define [ExprD.java, 30]          ch081.EvalV
    Override [ExprD.java, 30]        ch081.ExprVisitorI.forConst(Object c)

ch081.EvalV.forDiff(ExprD l,ExprD r)   (Public Method)
  Declared as: Object
    Define [ExprD.java, 18]          ch081.EvalV
    Override [ExprD.java, 18]        ch081.ExprVisitorI.forDiff(ExprD l,ExprD r)

ch081.EvalV.forPlus(ExprD l,ExprD r)   (Public Method)
  Declared as: Object
    Define [ExprD.java, 12]          ch081.EvalV
    Override [ExprD.java, 12]        ch081.ExprVisitorI.forPlus(ExprD l,ExprD r)

ch081.EvalV.forProd(ExprD l,ExprD r)   (Public Method)
  Declared as: Object
    Define [ExprD.java, 24]          ch081.EvalV
    Override [ExprD.java, 24]        ch081.ExprVisitorI.forProd(ExprD l,ExprD r)

ch081.EvalV.plus(Object l,Object r)   (Abstract Method)
  Declared as: Object
    Define [ExprD.java, 35]          ch081.EvalV
    Call [ExprD.java, 14]            ch081.EvalV.forPlus(ExprD l,ExprD r)
    Override [ExprD.java, 41]        ch081.IntEvalV.plus(Object l,Object r)
    Override [SetD.java, 99]         ch081.SetEvalV.plus(Object l,Object r)

ch081.EvalV.prod(Object l,Object r)   (Abstract Method)
  Declared as: Object
    Define [ExprD.java, 37]          ch081.EvalV
    Call [ExprD.java, 26]            ch081.EvalV.forProd(ExprD l,ExprD r)
    Override [ExprD.java, 47]        ch081.IntEvalV.prod(Object l,Object r)
    Override [SetD.java, 109]        ch081.SetEvalV.prod(Object l,Object r)

ch081.ExprD.accpet(ExprVisitorI ask)   (Abstract Method)
  Declared as: Object
    Override [ExprD.java, 115]       ch081.Const.accpet(ExprVisitorI ask)
    Override [ExprD.java, 86]        ch081.Diff.accpet(ExprVisitorI ask)
    Call [ExprD.java, 20]            ch081.EvalV.forDiff(ExprD l,ExprD r)
    Call [ExprD.java, 20]            ch081.EvalV.forDiff(ExprD l,ExprD r)
    Call [ExprD.java, 14]            ch081.EvalV.forPlus(ExprD l,ExprD r)
    Call [ExprD.java, 14]            ch081.EvalV.forPlus(ExprD l,ExprD r)
    Call [ExprD.java, 26]            ch081.EvalV.forProd(ExprD l,ExprD r)
    Call [ExprD.java, 26]            ch081.EvalV.forProd(ExprD l,ExprD r)
    Define [ExprD.java, 54]          ch081.ExprD
    Override [ExprD.java, 70]        ch081.Plus.accpet(ExprVisitorI ask)
    Override [ExprD.java, 101]       ch081.Prod.accpet(ExprVisitorI ask)

ch081.ExprVisitorI.forConst(Object c)   (Abstract Method)
  Declared as: Object
    Call [ExprD.java, 117]           ch081.Const.accpet(ExprVisitorI ask)
    Override [ExprD.java, 30]        ch081.EvalV.forConst(Object c)
    Define [ExprD.java, 7]           ch081.ExprVisitorI
                                                                     Page 128
                      Program Unit Cross Reference Report
===============================================================================

ch081.ExprVisitorI.forDiff(ExprD l,ExprD r)   (Abstract Method)
  Declared as: Object
    Call [ExprD.java, 88]            ch081.Diff.accpet(ExprVisitorI ask)
    Override [ExprD.java, 18]        ch081.EvalV.forDiff(ExprD l,ExprD r)
    Define [ExprD.java, 5]           ch081.ExprVisitorI

ch081.ExprVisitorI.forPlus(ExprD l,ExprD r)   (Abstract Method)
  Declared as: Object
    Override [ExprD.java, 12]        ch081.EvalV.forPlus(ExprD l,ExprD r)
    Define [ExprD.java, 4]           ch081.ExprVisitorI
    Call [ExprD.java, 72]            ch081.Plus.accpet(ExprVisitorI ask)

ch081.ExprVisitorI.forProd(ExprD l,ExprD r)   (Abstract Method)
  Declared as: Object
    Override [ExprD.java, 24]        ch081.EvalV.forProd(ExprD l,ExprD r)
    Define [ExprD.java, 6]           ch081.ExprVisitorI
    Call [ExprD.java, 103]           ch081.Prod.accpet(ExprVisitorI ask)

ch081.IntEvalV.diff(Object l,Object r)   (Method)
  Declared as: Object
    Define [ExprD.java, 44]          ch081.IntEvalV
    Override [ExprD.java, 44]        ch081.EvalV.diff(Object l,Object r)

ch081.IntEvalV.plus(Object l,Object r)   (Method)
  Declared as: Object
    Define [ExprD.java, 41]          ch081.IntEvalV
    Override [ExprD.java, 41]        ch081.EvalV.plus(Object l,Object r)

ch081.IntEvalV.prod(Object l,Object r)   (Method)
  Declared as: Object
    Define [ExprD.java, 47]          ch081.IntEvalV
    Override [ExprD.java, 47]        ch081.EvalV.prod(Object l,Object r)

ch081.LtSubstV.forBot   (Public Method)
  Declared as: PieD
    Define [PieD.java, 64]           ch081.LtSubstV
    Override [PieD.java, 64]         ch081.PieVistor1.forBot

ch081.LtSubstV.forTop(Object t,PieD r)   (Public Method)
  Declared as: PieD
    Define [PieD.java, 70]           ch081.LtSubstV
    Override [PieD.java, 70]         ch081.PieVistor1.forTop(Object t,PieD r)

ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)   (Public Constructor)
    Define [PieD.java, 57]           ch081.LtSubstV
    Call [PieD.java, 77]             ch081.LtSubstV.forTop(Object t,PieD r)

ch081.LtSubstV1.forTop(Object t,PieD r)   (Public Method)
  Declared as: PieD
    Define [SubstD.java, 50]         ch081.LtSubstV1
    Override [SubstD.java, 50]       ch081.SubstD.forTop(Object t,PieD r)

ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)   (Public Constructor)
    Define [SubstD.java, 44]         ch081.LtSubstV1
    Call [SubstD.java, 57]           ch081.LtSubstV1.forTop(Object t,PieD r)
                                                                     Page 129
                      Program Unit Cross Reference Report
===============================================================================
    Call [SubstVExt.java, 45]        ch081.LtSubstV2.forTop(Object t,PieD r)

ch081.LtSubstV2.forTop(Object t,PieD r)   (Public Method)
  Declared as: PieD
    Define [SubstVExt.java, 38]      ch081.LtSubstV2
    Override [SubstVExt.java, 38]    ch081.SubstVExt.forTop(Object t,PieD r)

ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)   (Public Constructor)
    Define [SubstVExt.java, 32]      ch081.LtSubstV2

ch081.PieD.accept(PieVistor1 ask)   (Abstract Method)
  Declared as: PieD
    Override [PieD.java, 96]         ch081.Bot.accept(PieVistor1 ask)
    Call [PieD.java, 77]             ch081.LtSubstV.forTop(Object t,PieD r)
    Call [PieD.java, 79]             ch081.LtSubstV.forTop(Object t,PieD r)
    Define [PieD.java, 90]           ch081.PieD
    Call [PieD.java, 23]             ch081.RemV.forTop(Object t,PieD r)
    Call [PieD.java, 25]             ch081.RemV.forTop(Object t,PieD r)
    Call [PieD.java, 45]             ch081.SubstV.forTop(Object t,PieD r)
    Call [PieD.java, 47]             ch081.SubstV.forTop(Object t,PieD r)
    Override [PieD.java, 117]        ch081.Top.accept(PieVistor1 ask)
    Call [SubstD.java, 57]           ch081.LtSubstV1.forTop(Object t,PieD r)
    Call [SubstD.java, 59]           ch081.LtSubstV1.forTop(Object t,PieD r)
    Call [SubstD.java, 34]           ch081.SubstV1.forTop(Object t,PieD r)
    Call [SubstD.java, 36]           ch081.SubstV1.forTop(Object t,PieD r)
    Call [SubstVExt.java, 45]        ch081.LtSubstV2.forTop(Object t,PieD r)
    Call [SubstVExt.java, 47]        ch081.LtSubstV2.forTop(Object t,PieD r)
    Call [SubstVExt.java, 21]        ch081.SubstVExt.forTop(Object t,PieD r)
    Call [SubstVExt.java, 23]        ch081.SubstVExt.forTop(Object t,PieD r)

ch081.PieVistor1.forBot   (Abstract Method)
  Declared as: PieD
    Call [PieD.java, 98]             ch081.Bot.accept(PieVistor1 ask)
    Override [PieD.java, 64]         ch081.LtSubstV.forBot
    Define [PieD.java, 6]            ch081.PieVistor1
    Override [PieD.java, 17]         ch081.RemV.forBot
    Override [PieD.java, 39]         ch081.SubstV.forBot
    Override [SubstD.java, 14]       ch081.SubstD.forBot
    Override [SubstVExt.java, 14]    ch081.SubstVExt.forBot

ch081.PieVistor1.forTop(Object t,PieD r)   (Abstract Method)
  Declared as: PieD
    Override [PieD.java, 70]         ch081.LtSubstV.forTop(Object t,PieD r)
    Define [PieD.java, 7]            ch081.PieVistor1
    Override [PieD.java, 21]         ch081.RemV.forTop(Object t,PieD r)
    Override [PieD.java, 43]         ch081.SubstV.forTop(Object t,PieD r)
    Call [PieD.java, 119]            ch081.Top.accept(PieVistor1 ask)
    Override [SubstD.java, 19]       ch081.SubstD.forTop(Object t,PieD r)
    Override [SubstVExt.java, 19]    ch081.SubstVExt.forTop(Object t,PieD r)

ch081.Plus.accpet(ExprVisitorI ask)   (Method)
  Declared as: Object
    Define [ExprD.java, 70]          ch081.Plus
    Override [ExprD.java, 70]        ch081.ExprD.accpet(ExprVisitorI ask)
                                                                     Page 130
                      Program Unit Cross Reference Report
===============================================================================

ch081.Plus.Plus(ExprD _l,ExprD _r)   (Public Constructor)
    Define [ExprD.java, 64]          ch081.Plus

ch081.Prod.accpet(ExprVisitorI ask)   (Method)
  Declared as: Object
    Define [ExprD.java, 101]         ch081.Prod
    Override [ExprD.java, 101]       ch081.ExprD.accpet(ExprVisitorI ask)

ch081.Prod.Prod(ExprD _l,ExprD _r)   (Public Constructor)
    Define [ExprD.java, 95]          ch081.Prod

ch081.RemV.forBot   (Public Method)
  Declared as: PieD
    Define [PieD.java, 17]           ch081.RemV
    Override [PieD.java, 17]         ch081.PieVistor1.forBot

ch081.RemV.forTop(Object t,PieD r)   (Public Method)
  Declared as: PieD
    Define [PieD.java, 21]           ch081.RemV
    Override [PieD.java, 21]         ch081.PieVistor1.forTop(Object t,PieD r)

ch081.RemV.RemV(Object _o)   (Public Constructor)
    Define [PieD.java, 12]           ch081.RemV

ch081.SetD.add(Integer i)   (Method)
  Declared as: SetD
    Call [SetD.java, 79]             ch081.Add.diff(SetD t)
    Call [SetD.java, 70]             ch081.Add.plus(SetD t)
    Call [SetD.java, 87]             ch081.Add.prod(SetD t)
    Define [SetD.java, 4]            ch081.SetD

ch081.SetD.diff(SetD s)   (Abstract Method)
  Declared as: SetD
    Override [SetD.java, 74]         ch081.Add.diff(SetD t)
    Call [SetD.java, 77]             ch081.Add.diff(SetD t)
    Call [SetD.java, 79]             ch081.Add.diff(SetD t)
    Override [SetD.java, 34]         ch081.Empty.diff(SetD s)
    Define [SetD.java, 14]           ch081.SetD
    Call [SetD.java, 106]            ch081.SetEvalV.diff(Object l,Object r)

ch081.SetD.mem(Integer i)   (Abstract Method)
  Declared as: boolean
    Call [SetD.java, 76]             ch081.Add.diff(SetD t)
    Override [SetD.java, 58]         ch081.Add.mem(Integer n)
    Call [SetD.java, 63]             ch081.Add.mem(Integer n)
    Call [SetD.java, 86]             ch081.Add.prod(SetD t)
    Override [SetD.java, 22]         ch081.Empty.mem(Integer i)
    Define [SetD.java, 12]           ch081.SetD
    Call [SetD.java, 5]              ch081.SetD.add(Integer i)

ch081.SetD.plus(SetD s)   (Abstract Method)
  Declared as: SetD
    Override [SetD.java, 68]         ch081.Add.plus(SetD t)
    Call [SetD.java, 70]             ch081.Add.plus(SetD t)
    Override [SetD.java, 28]         ch081.Empty.plus(SetD s)
                                                                     Page 131
                      Program Unit Cross Reference Report
===============================================================================
    Define [SetD.java, 13]           ch081.SetD
    Call [SetD.java, 101]            ch081.SetEvalV.plus(Object l,Object r)

ch081.SetD.prod(SetD s)   (Abstract Method)
  Declared as: SetD
    Override [SetD.java, 84]         ch081.Add.prod(SetD t)
    Call [SetD.java, 87]             ch081.Add.prod(SetD t)
    Call [SetD.java, 89]             ch081.Add.prod(SetD t)
    Override [SetD.java, 40]         ch081.Empty.prod(SetD s)
    Define [SetD.java, 15]           ch081.SetD
    Call [SetD.java, 111]            ch081.SetEvalV.prod(Object l,Object r)

ch081.SetEvalV.diff(Object l,Object r)   (Method)
  Declared as: Object
    Define [SetD.java, 104]          ch081.SetEvalV
    Override [SetD.java, 104]        ch081.EvalV.diff(Object l,Object r)

ch081.SetEvalV.plus(Object l,Object r)   (Method)
  Declared as: Object
    Define [SetD.java, 99]           ch081.SetEvalV
    Override [SetD.java, 99]         ch081.EvalV.plus(Object l,Object r)

ch081.SetEvalV.prod(Object l,Object r)   (Method)
  Declared as: Object
    Define [SetD.java, 109]          ch081.SetEvalV
    Override [SetD.java, 109]        ch081.EvalV.prod(Object l,Object r)

ch081.SubstD.forBot   (Public Method)
  Declared as: PieD
    Define [SubstD.java, 14]         ch081.SubstD
    Override [SubstD.java, 14]       ch081.PieVistor1.forBot

ch081.SubstD.forTop(Object t,PieD r)   (Public Abstract Method)
  Declared as: PieD
    Override [SubstD.java, 50]       ch081.LtSubstV1.forTop(Object t,PieD r)
    Define [SubstD.java, 19]         ch081.SubstD
    Override [SubstD.java, 19]       ch081.PieVistor1.forTop(Object t,PieD r)
    Override [SubstD.java, 30]       ch081.SubstV1.forTop(Object t,PieD r)

ch081.SubstD.SubstD(Object _n,Object _o)   (Public Constructor)
    Call [SubstD.java, 46]           ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)
    Define [SubstD.java, 8]          ch081.SubstD
    Call [SubstD.java, 27]           ch081.SubstV1.SubstV1(Object _n,Object _o)

ch081.SubstV.forBot   (Public Method)
  Declared as: PieD
    Define [PieD.java, 39]           ch081.SubstV
    Override [PieD.java, 39]         ch081.PieVistor1.forBot

ch081.SubstV.forTop(Object t,PieD r)   (Public Method)
  Declared as: PieD
    Define [PieD.java, 43]           ch081.SubstV
    Override [PieD.java, 43]         ch081.PieVistor1.forTop(Object t,PieD r)

ch081.SubstV.SubstV(Object _n,Object _o)   (Public Constructor)
    Define [PieD.java, 34]           ch081.SubstV
                                                                     Page 132
                      Program Unit Cross Reference Report
===============================================================================

ch081.SubstV1.forTop(Object t,PieD r)   (Public Method)
  Declared as: PieD
    Define [SubstD.java, 30]         ch081.SubstV1
    Override [SubstD.java, 30]       ch081.SubstD.forTop(Object t,PieD r)

ch081.SubstV1.SubstV1(Object _n,Object _o)   (Public Constructor)
    Define [SubstD.java, 25]         ch081.SubstV1

ch081.SubstVExt.forBot   (Public Method)
  Declared as: PieD
    Define [SubstVExt.java, 14]      ch081.SubstVExt
    Override [SubstVExt.java, 14]    ch081.PieVistor1.forBot

ch081.SubstVExt.forTop(Object t,PieD r)   (Public Method)
  Declared as: PieD
    Override [SubstVExt.java, 38]    ch081.LtSubstV2.forTop(Object t,PieD r)
    Define [SubstVExt.java, 19]      ch081.SubstVExt
    Override [SubstVExt.java, 19]    ch081.PieVistor1.forTop(Object t,PieD r)

ch081.SubstVExt.SubstVExt(Object _n,Object _o)   (Public Constructor)
    Call [SubstVExt.java, 34]        ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)
    Define [SubstVExt.java, 8]       ch081.SubstVExt

ch081.TestPieD.main(String[] args)   (Public Static Method)
  Declared as: void
    Define [TestPieD.java, 4]        ch081.TestPieD

ch081.Top.accept(PieVistor1 ask)   (Method)
  Declared as: PieD
    Define [PieD.java, 117]          ch081.Top
    Override [PieD.java, 117]        ch081.PieD.accept(PieVistor1 ask)
    Call [TestPieD.java, 5]          ch081.TestPieD.main(String[] args)

ch081.Top.Top(Object t,PieD r)   (Public Constructor)
    Call [PieD.java, 74]             ch081.LtSubstV.forTop(Object t,PieD r)
    Call [PieD.java, 77]             ch081.LtSubstV.forTop(Object t,PieD r)
    Call [PieD.java, 79]             ch081.LtSubstV.forTop(Object t,PieD r)
    Call [PieD.java, 25]             ch081.RemV.forTop(Object t,PieD r)
    Call [PieD.java, 45]             ch081.SubstV.forTop(Object t,PieD r)
    Call [PieD.java, 47]             ch081.SubstV.forTop(Object t,PieD r)
    Define [PieD.java, 111]          ch081.Top
    Call [SubstD.java, 54]           ch081.LtSubstV1.forTop(Object t,PieD r)
    Call [SubstD.java, 57]           ch081.LtSubstV1.forTop(Object t,PieD r)
    Call [SubstD.java, 59]           ch081.LtSubstV1.forTop(Object t,PieD r)
    Call [SubstD.java, 34]           ch081.SubstV1.forTop(Object t,PieD r)
    Call [SubstD.java, 36]           ch081.SubstV1.forTop(Object t,PieD r)
    Call [SubstVExt.java, 42]        ch081.LtSubstV2.forTop(Object t,PieD r)
    Call [SubstVExt.java, 45]        ch081.LtSubstV2.forTop(Object t,PieD r)
    Call [SubstVExt.java, 47]        ch081.LtSubstV2.forTop(Object t,PieD r)
    Call [SubstVExt.java, 21]        ch081.SubstVExt.forTop(Object t,PieD r)
    Call [SubstVExt.java, 23]        ch081.SubstVExt.forTop(Object t,PieD r)

ch081.Top.toString   (Public Method)
  Declared as: String
    Define [PieD.java, 121]          ch081.Top
                                                                     Page 133
                      Program Unit Cross Reference Report
===============================================================================
    Override [PieD.java, 121]        java.lang.Object.toString

ch09   (Package)
    Define [PointDCloserSimplify.java, 1]   PointDCloserSimplify.java
    Declare [PointDCloserSimplify.java, 1]   PointDCloserSimplify.java
    Define [Union.java, 1]           Union.java
    Declare [Union.java, 1]          Union.java
    Define [ShapeD.java, 1]          ShapeD.java
    Declare [ShapeD.java, 1]         ShapeD.java
    Define [Test.java, 1]            Test.java
    Declare [Test.java, 1]           Test.java
    Define [ShadowCartesian.java, 1]   ShadowCartesian.java
    Declare [ShadowCartesian.java, 1]   ShadowCartesian.java

ch09.CartesianPt2.CartesianPt2(int _x,int _y)   (Public Constructor)
    Define [PointDCloserSimplify.java, 36]   ch09.CartesianPt2
    Call [PointDCloserSimplify.java, 25]   ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)
    Call [ShadowCartesian.java, 13]   ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)

ch09.CartesianPt2.distanceTo0   (Method)
  Declared as: int
    Define [PointDCloserSimplify.java, 46]   ch09.CartesianPt2
    Override [PointDCloserSimplify.java, 46]   ch09.PointDCloserSimplify.distanceTo0
    Call [PointDCloserSimplify.java, 76]   ch09.ManHattanPt2.closerTo0(CartesianPt2 p1)
    Call [PointDCloserSimplify.java, 21]   ch09.PointDCloserSimplify.closerTo0(CartesianPt2 p1)
    Override [ShadowCartesian.java, 20]   ch09.ShadowCartesian.distanceTo0
    Call [ShadowCartesian.java, 22]   ch09.ShadowCartesian.distanceTo0

ch09.Circle.accept(ShapeVisitorI ask)   (Method)
  Declared as: boolean
    Define [ShapeD.java, 22]         ch09.Circle
    Override [ShapeD.java, 22]       ch09.ShapeD.accept(ShapeVisitorI ask)

ch09.Circle.Circle(int _r)   (Public Constructor)
    Define [ShapeD.java, 17]         ch09.Circle

ch09.HasPtV.forCircle(int r)   (Public Method)
  Declared as: boolean
    Define [ShapeD.java, 66]         ch09.HasPtV
    Override [ShapeD.java, 66]       ch09.ShapeVisitorI.forCircle(int r)

ch09.HasPtV.forSquare(int s)   (Public Method)
  Declared as: boolean
    Define [ShapeD.java, 72]         ch09.HasPtV
    Override [ShapeD.java, 72]       ch09.ShapeVisitorI.forSquare(int s)

ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)   (Public Method)
  Declared as: boolean
    Define [ShapeD.java, 78]         ch09.HasPtV
    Override [ShapeD.java, 78]       ch09.ShapeVisitorI.forTrans(PointDCloserSimplify q,ShapeD s)

ch09.HasPtV.HasPtV(PointDCloserSimplify _p)   (Public Constructor)
    Define [ShapeD.java, 61]         ch09.HasPtV
    Call [ShapeD.java, 80]           ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)
    Call [Union.java, 26]            ch09.UnionHasPtV.UnionHasPtV(CartesianPt2 _p)
                                                                     Page 134
                      Program Unit Cross Reference Report
===============================================================================

ch09.ManHattanPt2.closerTo0(CartesianPt2 p1)   (Method)
  Declared as: boolean
    Define [PointDCloserSimplify.java, 74]   ch09.ManHattanPt2
    Override [PointDCloserSimplify.java, 74]   ch09.PointDCloserSimplify.closerTo0(CartesianPt2 p1)

ch09.ManHattanPt2.distanceTo0   (Method)
  Declared as: int
    Define [PointDCloserSimplify.java, 69]   ch09.ManHattanPt2
    Call [PointDCloserSimplify.java, 76]   ch09.ManHattanPt2.closerTo0(CartesianPt2 p1)
    Override [PointDCloserSimplify.java, 69]   ch09.PointDCloserSimplify.distanceTo0

ch09.ManHattanPt2.ManHattanPt2(int _x,int _y)   (Public Constructor)
    Define [PointDCloserSimplify.java, 64]   ch09.ManHattanPt2
    Call [Test.java, 6]              ch09.Test.main(String[] args)

ch09.PointDCloserSimplify.closerTo0(CartesianPt2 p1)   (Method)
  Declared as: boolean
    Override [PointDCloserSimplify.java, 74]   ch09.ManHattanPt2.closerTo0(CartesianPt2 p1)
    Define [PointDCloserSimplify.java, 19]   ch09.PointDCloserSimplify

ch09.PointDCloserSimplify.distanceTo0   (Abstract Method)
  Declared as: int
    Override [PointDCloserSimplify.java, 46]   ch09.CartesianPt2.distanceTo0
    Override [PointDCloserSimplify.java, 69]   ch09.ManHattanPt2.distanceTo0
    Define [PointDCloserSimplify.java, 17]   ch09.PointDCloserSimplify
    Call [PointDCloserSimplify.java, 21]   ch09.PointDCloserSimplify.closerTo0(CartesianPt2 p1)
    Call [ShapeD.java, 68]           ch09.HasPtV.forCircle(int r)

ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)   (Method)
  Declared as: PointDCloserSimplify
    Define [PointDCloserSimplify.java, 23]   ch09.PointDCloserSimplify

ch09.PointDCloserSimplify.PointDCloserSimplify(int _x,int _y)   (Public Constructor)
    Call [PointDCloserSimplify.java, 38]   ch09.CartesianPt2.CartesianPt2(int _x,int _y)
    Call [PointDCloserSimplify.java, 66]   ch09.ManHattanPt2.ManHattanPt2(int _x,int _y)
    Define [PointDCloserSimplify.java, 11]   ch09.PointDCloserSimplify

ch09.ShadowCartesian.distanceTo0   (Method)
  Declared as: int
    Define [ShadowCartesian.java, 20]   ch09.ShadowCartesian
    Override [ShadowCartesian.java, 20]   ch09.CartesianPt2.distanceTo0

ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)   (Public Constructor)
    Define [ShadowCartesian.java, 11]   ch09.ShadowCartesian

ch09.ShapeD.accept(ShapeVisitorI ask)   (Abstract Method)
  Declared as: boolean
    Override [ShapeD.java, 22]       ch09.Circle.accept(ShapeVisitorI ask)
    Call [ShapeD.java, 80]           ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)
    Define [ShapeD.java, 4]          ch09.ShapeD
    Override [ShapeD.java, 36]       ch09.Square.accept(ShapeVisitorI ask)
    Override [ShapeD.java, 51]       ch09.Trans.accept(ShapeVisitorI ask)
    Override [Union.java, 12]        ch09.Union.accept(ShapeVisitorI ask)
    Call [Union.java, 31]            ch09.UnionHasPtV.forUnion(ShapeD s,ShapeD t)
    Call [Union.java, 31]            ch09.UnionHasPtV.forUnion(ShapeD s,ShapeD t)
                                                                     Page 135
                      Program Unit Cross Reference Report
===============================================================================

ch09.ShapeVisitorI.forCircle(int r)   (Abstract Method)
  Declared as: boolean
    Call [ShapeD.java, 24]           ch09.Circle.accept(ShapeVisitorI ask)
    Override [ShapeD.java, 66]       ch09.HasPtV.forCircle(int r)
    Define [ShapeD.java, 8]          ch09.ShapeVisitorI

ch09.ShapeVisitorI.forSquare(int s)   (Abstract Method)
  Declared as: boolean
    Override [ShapeD.java, 72]       ch09.HasPtV.forSquare(int s)
    Define [ShapeD.java, 9]          ch09.ShapeVisitorI
    Call [ShapeD.java, 38]           ch09.Square.accept(ShapeVisitorI ask)

ch09.ShapeVisitorI.forTrans(PointDCloserSimplify q,ShapeD s)   (Abstract Method)
  Declared as: boolean
    Override [ShapeD.java, 78]       ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)
    Define [ShapeD.java, 10]         ch09.ShapeVisitorI
    Call [ShapeD.java, 53]           ch09.Trans.accept(ShapeVisitorI ask)

ch09.Square.accept(ShapeVisitorI ask)   (Method)
  Declared as: boolean
    Define [ShapeD.java, 36]         ch09.Square
    Override [ShapeD.java, 36]       ch09.ShapeD.accept(ShapeVisitorI ask)

ch09.Square.Square(int _s)   (Public Constructor)
    Define [ShapeD.java, 31]         ch09.Square

ch09.Test.main(String[] args)   (Public Static Method)
  Declared as: void
    Define [Test.java, 5]            ch09.Test

ch09.Trans.accept(ShapeVisitorI ask)   (Method)
  Declared as: boolean
    Define [ShapeD.java, 51]         ch09.Trans
    Override [ShapeD.java, 51]       ch09.ShapeD.accept(ShapeVisitorI ask)

ch09.Trans.Trans(PointDCloserSimplify _q,ShapeD _s)   (Public Constructor)
    Define [ShapeD.java, 45]         ch09.Trans

ch09.Union.accept(ShapeVisitorI ask)   (Method)
  Declared as: boolean
    Define [Union.java, 12]          ch09.Union
    Override [Union.java, 12]        ch09.ShapeD.accept(ShapeVisitorI ask)

ch09.Union.Union(ShapeD _s,ShapeD _t)   (Public Constructor)
    Define [Union.java, 6]           ch09.Union

ch09.UnionHasPtV.forUnion(ShapeD s,ShapeD t)   (Public Method)
  Declared as: boolean
    Define [Union.java, 30]          ch09.UnionHasPtV

ch09.UnionHasPtV.UnionHasPtV(CartesianPt2 _p)   (Public Constructor)
    Define [Union.java, 25]          ch09.UnionHasPtV

ch09.UnionVisitorI.forUnion(ShapeD s,ShapeD t)   (Abstract Method)
  Declared as: boolean
                                                                     Page 136
                      Program Unit Cross Reference Report
===============================================================================
    Call [Union.java, 14]            ch09.Union.accept(ShapeVisitorI ask)
    Define [Union.java, 20]          ch09.UnionVisitorI

ch10   (Package)
    Define [Mian.java, 1]            Mian.java
    Declare [Mian.java, 1]           Mian.java
    Define [PieD.java, 1]            PieD.java
    Declare [PieD.java, 1]           PieD.java
    Define [PiemanM.java, 1]         PiemanM.java
    Declare [PiemanM.java, 1]        PiemanM.java

ch10.AnchovyFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 132]          ch10.AnchovyFish
    Override [PieD.java, 132]        ch10.FishD.equals(Object o)

ch10.AnchovyFish.toString   (Public Method)
  Declared as: String
    Define [PieD.java, 137]          ch10.AnchovyFish
    Override [PieD.java, 137]        java.lang.Object.toString

ch10.Bot.accept(PieVistor1 ask)   (Method)
  Declared as: Object
    Define [PieD.java, 98]           ch10.Bot
    Override [PieD.java, 98]         ch10.PieD.accept(PieVistor1 ask)

ch10.FishD.equals(Object o)   (Public Abstract Method)
  Declared as: boolean
    Override [PieD.java, 132]        ch10.AnchovyFish.equals(Object o)
    Define [PieD.java, 126]          ch10.FishD
    Override [PieD.java, 126]        java.lang.Object.equals(Object obj)
    Override [PieD.java, 147]        ch10.SalmonFish.equals(Object o)
    Override [PieD.java, 157]        ch10.TunaFish.equals(Object o)

ch10.LtSubstV.forBot   (Public Method)
  Declared as: PieD
    Define [PieD.java, 66]           ch10.LtSubstV
    Override [PieD.java, 66]         ch10.PieVistor1.forBot

ch10.LtSubstV.forTop(Object t,PieD r)   (Public Method)
  Declared as: Object
    Define [PieD.java, 72]           ch10.LtSubstV
    Override [PieD.java, 72]         ch10.PieVistor1.forTop(Object t,PieD r)

ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)   (Public Constructor)
    Define [PieD.java, 59]           ch10.LtSubstV
    Call [PieD.java, 79]             ch10.LtSubstV.forTop(Object t,PieD r)

ch10.Mian.main(String[] args)   (Public Static Method)
  Declared as: void
    Define [Mian.java, 4]            ch10.Mian

ch10.OccursV.forBot   (Public Method)
  Declared as: Object
    Define [PiemanM.java, 61]        ch10.OccursV
    Override [PiemanM.java, 61]      ch10.PieVistor1.forBot
                                                                     Page 137
                      Program Unit Cross Reference Report
===============================================================================

ch10.OccursV.forTop(Object t,PieD r)   (Public Method)
  Declared as: Object
    Define [PiemanM.java, 67]        ch10.OccursV
    Override [PiemanM.java, 67]      ch10.PieVistor1.forTop(Object t,PieD r)

ch10.OccursV.OccursV(Object _a)   (Public Constructor)
    Define [PiemanM.java, 55]        ch10.OccursV
    Call [PiemanM.java, 41]          ch10.PiemanM.occTop(Object o)

ch10.PieD.accept(PieVistor1 ask)   (Abstract Method)
  Declared as: Object
    Override [PieD.java, 98]         ch10.Bot.accept(PieVistor1 ask)
    Call [PieD.java, 79]             ch10.LtSubstV.forTop(Object t,PieD r)
    Call [PieD.java, 81]             ch10.LtSubstV.forTop(Object t,PieD r)
    Define [PieD.java, 92]           ch10.PieD
    Call [PieD.java, 25]             ch10.RemV.forTop(Object t,PieD r)
    Call [PieD.java, 27]             ch10.RemV.forTop(Object t,PieD r)
    Call [PieD.java, 47]             ch10.SubstV.forTop(Object t,PieD r)
    Call [PieD.java, 49]             ch10.SubstV.forTop(Object t,PieD r)
    Override [PieD.java, 116]        ch10.Top.accept(PieVistor1 ask)
    Call [PiemanM.java, 70]          ch10.OccursV.forTop(Object t,PieD r)
    Call [PiemanM.java, 72]          ch10.OccursV.forTop(Object t,PieD r)
    Call [PiemanM.java, 41]          ch10.PiemanM.occTop(Object o)
    Call [PiemanM.java, 27]          ch10.PiemanM.remTop(Object t)
    Call [PiemanM.java, 34]          ch10.PiemanM.substTop(Object n,Object o)

ch10.PiemanI.addTop(Object t)   (Abstract Method)
  Declared as: int
    Define [PiemanM.java, 5]         ch10.PiemanI
    Override [PiemanM.java, 18]      ch10.PiemanM.addTop(Object t)
    Call [Mian.java, 8]              ch10.Mian.main(String[] args)
    Call [Mian.java, 9]              ch10.Mian.main(String[] args)

ch10.PiemanI.occTop(Object o)   (Abstract Method)
  Declared as: int
    Define [PiemanM.java, 8]         ch10.PiemanI
    Override [PiemanM.java, 39]      ch10.PiemanM.occTop(Object o)

ch10.PiemanI.remTop(Object t)   (Abstract Method)
  Declared as: int
    Define [PiemanM.java, 6]         ch10.PiemanI
    Override [PiemanM.java, 25]      ch10.PiemanM.remTop(Object t)

ch10.PiemanI.substTop(Object n,Object o)   (Abstract Method)
  Declared as: int
    Define [PiemanM.java, 7]         ch10.PiemanI
    Override [PiemanM.java, 32]      ch10.PiemanM.substTop(Object n,Object o)
    Call [Mian.java, 10]             ch10.Mian.main(String[] args)

ch10.PiemanM.addTop(Object t)   (Public Method)
  Declared as: int
    Define [PiemanM.java, 18]        ch10.PiemanM
    Override [PiemanM.java, 18]      ch10.PiemanI.addTop(Object t)
                                                                     Page 138
                      Program Unit Cross Reference Report
===============================================================================

ch10.PiemanM.occTop(Object o)   (Public Method)
  Declared as: int
    Define [PiemanM.java, 39]        ch10.PiemanM
    Call [PiemanM.java, 21]          ch10.PiemanM.addTop(Object t)
    Override [PiemanM.java, 39]      ch10.PiemanI.occTop(Object o)
    Call [PiemanM.java, 28]          ch10.PiemanM.remTop(Object t)
    Call [PiemanM.java, 35]          ch10.PiemanM.substTop(Object n,Object o)

ch10.PiemanM.PiemanM(PieD _p)   (Public Constructor)
    Define [PiemanM.java, 13]        ch10.PiemanM
    Call [Mian.java, 6]              ch10.Mian.main(String[] args)

ch10.PiemanM.remTop(Object t)   (Public Method)
  Declared as: int
    Define [PiemanM.java, 25]        ch10.PiemanM
    Override [PiemanM.java, 25]      ch10.PiemanI.remTop(Object t)

ch10.PiemanM.substTop(Object n,Object o)   (Public Method)
  Declared as: int
    Define [PiemanM.java, 32]        ch10.PiemanM
    Override [PiemanM.java, 32]      ch10.PiemanI.substTop(Object n,Object o)

ch10.PiemanM.toString   (Public Method)
  Declared as: String
    Define [PiemanM.java, 45]        ch10.PiemanM
    Override [PiemanM.java, 45]      java.lang.Object.toString

ch10.PieVistor1.forBot   (Abstract Method)
  Declared as: Object
    Call [PieD.java, 100]            ch10.Bot.accept(PieVistor1 ask)
    Override [PieD.java, 66]         ch10.LtSubstV.forBot
    Define [PieD.java, 8]            ch10.PieVistor1
    Override [PieD.java, 19]         ch10.RemV.forBot
    Override [PieD.java, 41]         ch10.SubstV.forBot
    Override [PiemanM.java, 61]      ch10.OccursV.forBot

ch10.PieVistor1.forTop(Object t,PieD r)   (Abstract Method)
  Declared as: Object
    Override [PieD.java, 72]         ch10.LtSubstV.forTop(Object t,PieD r)
    Define [PieD.java, 9]            ch10.PieVistor1
    Override [PieD.java, 23]         ch10.RemV.forTop(Object t,PieD r)
    Override [PieD.java, 45]         ch10.SubstV.forTop(Object t,PieD r)
    Call [PieD.java, 118]            ch10.Top.accept(PieVistor1 ask)
    Override [PiemanM.java, 67]      ch10.OccursV.forTop(Object t,PieD r)

ch10.RemV.forBot   (Public Method)
  Declared as: PieD
    Define [PieD.java, 19]           ch10.RemV
    Override [PieD.java, 19]         ch10.PieVistor1.forBot

ch10.RemV.forTop(Object t,PieD r)   (Public Method)
  Declared as: Object
    Define [PieD.java, 23]           ch10.RemV
    Override [PieD.java, 23]         ch10.PieVistor1.forTop(Object t,PieD r)
                                                                     Page 139
                      Program Unit Cross Reference Report
===============================================================================

ch10.RemV.RemV(Object _o)   (Public Constructor)
    Define [PieD.java, 14]           ch10.RemV
    Call [PiemanM.java, 27]          ch10.PiemanM.remTop(Object t)

ch10.SalmonFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 147]          ch10.SalmonFish
    Override [PieD.java, 147]        ch10.FishD.equals(Object o)

ch10.SubstV.forBot   (Public Method)
  Declared as: Object
    Define [PieD.java, 41]           ch10.SubstV
    Override [PieD.java, 41]         ch10.PieVistor1.forBot

ch10.SubstV.forTop(Object t,PieD r)   (Public Method)
  Declared as: Object
    Define [PieD.java, 45]           ch10.SubstV
    Override [PieD.java, 45]         ch10.PieVistor1.forTop(Object t,PieD r)

ch10.SubstV.SubstV(Object _n,Object _o)   (Public Constructor)
    Define [PieD.java, 36]           ch10.SubstV
    Call [PiemanM.java, 34]          ch10.PiemanM.substTop(Object n,Object o)

ch10.Top.accept(PieVistor1 ask)   (Method)
  Declared as: Object
    Define [PieD.java, 116]          ch10.Top
    Override [PieD.java, 116]        ch10.PieD.accept(PieVistor1 ask)

ch10.Top.Top(Object t,PieD r)   (Public Constructor)
    Call [PieD.java, 76]             ch10.LtSubstV.forTop(Object t,PieD r)
    Call [PieD.java, 79]             ch10.LtSubstV.forTop(Object t,PieD r)
    Call [PieD.java, 81]             ch10.LtSubstV.forTop(Object t,PieD r)
    Call [PieD.java, 27]             ch10.RemV.forTop(Object t,PieD r)
    Call [PieD.java, 47]             ch10.SubstV.forTop(Object t,PieD r)
    Call [PieD.java, 49]             ch10.SubstV.forTop(Object t,PieD r)
    Define [PieD.java, 110]          ch10.Top
    Call [PiemanM.java, 20]          ch10.PiemanM.addTop(Object t)

ch10.TunaFish.equals(Object o)   (Public Method)
  Declared as: boolean
    Define [PieD.java, 157]          ch10.TunaFish
    Override [PieD.java, 157]        ch10.FishD.equals(Object o)

java.lang.Object.getClass   (Unresolved Method)
  Declared as: Class
    Call [YangRouChuan.java, 65]     ch02.Onion.toString
    Call [YangRouChuan.java, 113]    ch02.Tomato.toString
    Call [YangRouChuan.java, 11]     ch02.YangRouChuan.YangRouChuan
    Call [YangRouChuan.java, 16]     ch02.YangRouChuan.toString
    Call [PieDUpdate.java, 19]       ch0801That.Bot.toString
    Call [PieDUpdate.java, 38]       ch0801That.Top.toString
    Call [PieD.java, 102]            ch081.Bot.toString
    Call [PieD.java, 122]            ch081.Top.toString
    Call [KaoRou.java, 15]           ch02.KaoRou.toString
    Call [PieD.java, 139]            ch10.AnchovyFish.toString
                                                                     Page 140
                      Program Unit Cross Reference Report
===============================================================================
    Define [Object.java, 63]         java.lang.Object
    Call [PiemanM.java, 47]          ch10.PiemanM.toString
    Call [PointD.java, 35]           ch01.ManHattanPt.toString
    Call [PointD.java, 54]           ch02.ManHattanPt.toString
    Call [PointD.java, 12]           ch02.PointD.toString

ReCall   (Package)
    Define [Callback.java, 1]        Callback.java
    Declare [Callback.java, 1]       Callback.java
    Define [Test.java, 1]            Test.java
    Declare [Test.java, 1]           Test.java
    Define [Ye.java, 1]              Ye.java
    Declare [Ye.java, 1]             Ye.java
    Define [Stranger.java, 1]        Stranger.java
    Declare [Stranger.java, 1]       Stranger.java
    Define [Wang.java, 1]            Wang.java
    Declare [Wang.java, 1]           Wang.java

receive(String result)   (Public Abstract Method)
  Declared as: void
    Define [Callback.java, 8]        ReCall.Callback
    Call [Ye.java, 43]               accept(Callback callback,String question)
    Override [Stranger.java, 34]     receive(String result)
    Override [Wang.java, 45]         receive(String result)

receive(String result)   (Public Method)
  Declared as: void
    Define [Stranger.java, 34]       ReCall.Stranger
    Override [Stranger.java, 34]     receive(String result)

ReCall.Stranger.askQuestion(String question)   (Public Method)
  Declared as: void
    Define [Stranger.java, 10]       ReCall.Stranger
    Call [Test.java, 15]             ReCall.Test.main(String[] args)

ReCall.Stranger.askQuestion.(Anon_1).run   (Public Method)
  Declared as: void
    Define [Stranger.java, 13]       ReCall.Stranger.askQuestion.(Anon_1)
    Override [Stranger.java, 13]     java.lang.Runnable.run

ReCall.Stranger.play   (Private Method)
  Declared as: void
    Define [Stranger.java, 29]       ReCall.Stranger
    Call [Stranger.java, 26]         ReCall.Stranger.askQuestion(String question)

ReCall.Stranger.Stranger(Ye ye)   (Public Constructor)
    Define [Stranger.java, 5]        ReCall.Stranger
    Call [Test.java, 9]              ReCall.Test.main(String[] args)

ReCall.Test.main(String[] args)   (Public Static Method)
  Declared as: void
    Define [Test.java, 4]            ReCall.Test

receive(String result)   (Public Method)
  Declared as: void
    Define [Wang.java, 45]           ReCall.Wang
                                                                     Page 141
                      Program Unit Cross Reference Report
===============================================================================
    Override [Wang.java, 45]         receive(String result)

ReCall.Wang.askQuestion(String question)   (Public Method)
  Declared as: void
    Define [Wang.java, 21]           ReCall.Wang
    Call [Test.java, 14]             ReCall.Test.main(String[] args)

ReCall.Wang.askQuestion.(Anon_1).run   (Public Method)
  Declared as: void
    Define [Wang.java, 24]           ReCall.Wang.askQuestion.(Anon_1)
    Override [Wang.java, 24]         java.lang.Runnable.run

ReCall.Wang.play   (Private Method)
  Declared as: void
    Define [Wang.java, 40]           ReCall.Wang
    Call [Wang.java, 37]             ReCall.Wang.askQuestion(String question)

ReCall.Wang.Wang(Ye ye)   (Public Constructor)
    Define [Wang.java, 13]           ReCall.Wang
    Call [Test.java, 8]              ReCall.Test.main(String[] args)

accept(Callback callback,String question)   (Public Method)
  Declared as: void
    Define [Ye.java, 10]             ReCall.Ye
    Call [Stranger.java, 19]         ReCall.Stranger.askQuestion.(Anon_1).run
    Call [Wang.java, 30]             ReCall.Wang.askQuestion.(Anon_1).run

YeRestaurant   (Package)
    Declare [HongShaoRou.java, 1]    HongShaoRou.java
    Declare [Banana.java, 1]         Banana.java
    Declare [Apple.java, 1]          Apple.java
    Declare [SuanTaiChaoRou.java, 1]   SuanTaiChaoRou.java
    Declare [TangCuLiYu.java, 1]     TangCuLiYu.java
    Define [Food.java, 1]            Food.java
    Declare [Food.java, 1]           Food.java
    Declare [QingJiaoRouSi.java, 1]   QingJiaoRouSi.java
    DotRef [QingJiaoRouSi.java, 3]   QingJiaoRouSi.java
    DotRef [TangCuLiYu.java, 3]      TangCuLiYu.java
    DotRef [SuanTaiChaoRou.java, 3]   SuanTaiChaoRou.java
    Define [Restaurant.java, 1]      Restaurant.java
    Declare [Restaurant.java, 1]     Restaurant.java
    DotRef [Apple.java, 3]           Apple.java
    DotRef [Banana.java, 3]          Banana.java
    DotRef [HongShaoRou.java, 3]     HongShaoRou.java

YeRestaurant.Cai   (Package)
    Define [Apple.java, 1]           Apple.java
    Declare [Apple.java, 1]          YeRestaurant
    Define [QingJiaoRouSi.java, 1]   QingJiaoRouSi.java
    Declare [QingJiaoRouSi.java, 1]   YeRestaurant
    Define [TangCuLiYu.java, 1]      TangCuLiYu.java
    Declare [TangCuLiYu.java, 1]     YeRestaurant
    Define [SuanTaiChaoRou.java, 1]   SuanTaiChaoRou.java
    Declare [SuanTaiChaoRou.java, 1]   YeRestaurant
    Define [Banana.java, 1]          Banana.java
    Declare [Banana.java, 1]         YeRestaurant
                                                                     Page 142
                      Program Unit Cross Reference Report
===============================================================================
    Define [HongShaoRou.java, 1]     HongShaoRou.java
    Declare [HongShaoRou.java, 1]    YeRestaurant

YeRestaurant.Cai.Apple.getFoodName   (Public Method)
  Declared as: String
    Define [Apple.java, 7]           YeRestaurant.Cai.Apple
    Override [Apple.java, 7]         YeRestaurant.Food.getFoodName

YeRestaurant.Cai.Banana.getFoodName   (Public Method)
  Declared as: String
    Define [Banana.java, 7]          YeRestaurant.Cai.Banana
    Override [Banana.java, 7]        YeRestaurant.Food.getFoodName

YeRestaurant.Cai.HongShaoRou.getFoodName   (Public Method)
  Declared as: String
    Define [HongShaoRou.java, 7]     YeRestaurant.Cai.HongShaoRou
    Override [HongShaoRou.java, 7]   YeRestaurant.Food.getFoodName

YeRestaurant.Cai.QingJiaoRouSi.getFoodName   (Public Method)
  Declared as: String
    Define [QingJiaoRouSi.java, 7]   YeRestaurant.Cai.QingJiaoRouSi
    Override [QingJiaoRouSi.java, 7]   YeRestaurant.Food.getFoodName

YeRestaurant.Cai.SuanTaiChaoRou.getFoodName   (Public Method)
  Declared as: String
    Define [SuanTaiChaoRou.java, 7]   YeRestaurant.Cai.SuanTaiChaoRou
    Override [SuanTaiChaoRou.java, 7]   YeRestaurant.Food.getFoodName

YeRestaurant.Cai.TangCuLiYu.getFoodName   (Public Method)
  Declared as: String
    Define [TangCuLiYu.java, 7]      YeRestaurant.Cai.TangCuLiYu
    Override [TangCuLiYu.java, 7]    YeRestaurant.Food.getFoodName

YeRestaurant.Food.getFoodName   (Abstract Method)
  Declared as: String
    Define [Food.java, 4]            YeRestaurant.Food
    Override [QingJiaoRouSi.java, 7]   YeRestaurant.Cai.QingJiaoRouSi.getFoodName
    Override [TangCuLiYu.java, 7]    YeRestaurant.Cai.TangCuLiYu.getFoodName
    Override [SuanTaiChaoRou.java, 7]   YeRestaurant.Cai.SuanTaiChaoRou.getFoodName
    Call [Restaurant.java, 94]       YeRestaurant.Restaurant.showFoods
    Override [Apple.java, 7]         YeRestaurant.Cai.Apple.getFoodName
    Override [Banana.java, 7]        YeRestaurant.Cai.Banana.getFoodName
    Override [HongShaoRou.java, 7]   YeRestaurant.Cai.HongShaoRou.getFoodName

YeRestaurant.Restaurant.init   (Public Method)
  Declared as: void
    Define [Restaurant.java, 42]     YeRestaurant.Restaurant
    Call [Restaurant.java, 104]      YeRestaurant.Restaurant.main(String[] args)

YeRestaurant.Restaurant.main(String[] args)   (Public Static Method)
  Declared as: void
    Define [Restaurant.java, 97]     YeRestaurant.Restaurant

YeRestaurant.Restaurant.Restaurant   (Public Constructor)
    Define [Restaurant.java, 39]     YeRestaurant.Restaurant
    Call [Restaurant.java, 101]      YeRestaurant.Restaurant.main(String[] args)
                                                                     Page 143
                      Program Unit Cross Reference Report
===============================================================================

YeRestaurant.Restaurant.showFoods   (Public Method)
  Declared as: void
    Define [Restaurant.java, 89]     YeRestaurant.Restaurant
    Call [Restaurant.java, 105]      YeRestaurant.Restaurant.main(String[] args)
                                                                     Page 144
                         Object Cross Reference Report
===============================================================================

ch01.Base.Base._o   (Parameter)
  Declared as: Object
    Define [LayerD.java, 17]         ch01.Base.Base(Object _o)
    Use [LayerD.java, 19]            ch01.Base.Base(Object _o)

ch01.Base.o1   (Variable)
  Declared as: Object
    Define [LayerD.java, 16]         ch01.Base
    Set [LayerD.java, 19]            ch01.Base.Base(Object _o)

ch01.CartesianPt.CartesianPt._x   (Parameter)
  Declared as: int
    Define [PointD.java, 14]         ch01.CartesianPt.CartesianPt(int _x,int _y)
    Use [PointD.java, 16]            ch01.CartesianPt.CartesianPt(int _x,int _y)

ch01.CartesianPt.CartesianPt._y   (Parameter)
  Declared as: int
    Define [PointD.java, 14]         ch01.CartesianPt.CartesianPt(int _x,int _y)
    Use [PointD.java, 17]            ch01.CartesianPt.CartesianPt(int _x,int _y)

ch01.CartesianPt.x   (Variable)
  Declared as: int
    Define [PointD.java, 12]         ch01.CartesianPt
    Set [PointD.java, 16]            ch01.CartesianPt.CartesianPt(int _x,int _y)

ch01.CartesianPt.y   (Variable)
  Declared as: int
    Define [PointD.java, 13]         ch01.CartesianPt
    Set [PointD.java, 17]            ch01.CartesianPt.CartesianPt(int _x,int _y)

ch01.ManHattanPt.ManHattanPt._x   (Parameter)
  Declared as: int
    Define [PointD.java, 27]         ch01.ManHattanPt.ManHattanPt(int _x,int _y)
    Use [PointD.java, 29]            ch01.ManHattanPt.ManHattanPt(int _x,int _y)

ch01.ManHattanPt.ManHattanPt._y   (Parameter)
  Declared as: int
    Define [PointD.java, 27]         ch01.ManHattanPt.ManHattanPt(int _x,int _y)
    Use [PointD.java, 30]            ch01.ManHattanPt.ManHattanPt(int _x,int _y)

ch01.ManHattanPt.x   (Variable)
  Declared as: int
    Define [PointD.java, 24]         ch01.ManHattanPt
    Set [PointD.java, 29]            ch01.ManHattanPt.ManHattanPt(int _x,int _y)
    Use [PointD.java, 35]            ch01.ManHattanPt.toString
    Use [Test.java, 7]               ch01.Test.main(String[] args)

ch01.ManHattanPt.y   (Variable)
  Declared as: int
    Define [PointD.java, 25]         ch01.ManHattanPt
    Set [PointD.java, 30]            ch01.ManHattanPt.ManHattanPt(int _x,int _y)
    Use [PointD.java, 35]            ch01.ManHattanPt.toString

ch01.MoreThanOne.MoreThanOne._d   (Parameter)
  Declared as: NumD
                                                                     Page 145
                         Object Cross Reference Report
===============================================================================
    Define [NumD.java, 46]           ch01.MoreThanOne.MoreThanOne(NumD _d)
    Use [NumD.java, 48]              ch01.MoreThanOne.MoreThanOne(NumD _d)

ch01.MoreThanOne.predecessor   (Variable)
  Declared as: NumD
    Define [NumD.java, 45]           ch01.MoreThanOne
    Set [NumD.java, 48]              ch01.MoreThanOne.MoreThanOne(NumD _d)

ch01.Slice.s1   (Variable)
  Declared as: LayerD
    Define [LayerD.java, 27]         ch01.Slice
    Set [LayerD.java, 30]            ch01.Slice.Slice(LayerD _s)

ch01.Slice.Slice._s   (Parameter)
  Declared as: LayerD
    Define [LayerD.java, 28]         ch01.Slice.Slice(LayerD _s)
    Use [LayerD.java, 30]            ch01.Slice.Slice(LayerD _s)

ch01.Test.main.args   (Parameter)
  Declared as: String[]
    Define [Test.java, 5]            ch01.Test.main(String[] args)

ch01.Test.main.mhpt   (Variable)
  Declared as: ManHattanPt=ManHattanPt(8010,)
    Define [Test.java, 6]            ch01.Test.main(String[] args)
    Set [Test.java, 6]               ch01.Test.main(String[] args)
    Use [Test.java, 7]               ch01.Test.main(String[] args)

ch01.TestMain.main.args   (Parameter)
  Declared as: String[]
    Define [TestMain.java, 4]        ch01.TestMain.main(String[] args)

ch01.TestMain.main.pd   (Variable)
  Declared as: ManHattanPt=ManHattanPt(35,)
    Define [TestMain.java, 5]        ch01.TestMain.main(String[] args)
    Set [TestMain.java, 5]           ch01.TestMain.main(String[] args)
    Use [TestMain.java, 6]           ch01.TestMain.main(String[] args)

ch02.CartesianPt.CartesianPt._x   (Parameter)
  Declared as: int
    Define [PointD.java, 23]         ch02.CartesianPt.CartesianPt(int _x,int _y)
    Use [PointD.java, 25]            ch02.CartesianPt.CartesianPt(int _x,int _y)

ch02.CartesianPt.CartesianPt._y   (Parameter)
  Declared as: int
    Define [PointD.java, 23]         ch02.CartesianPt.CartesianPt(int _x,int _y)
    Use [PointD.java, 26]            ch02.CartesianPt.CartesianPt(int _x,int _y)

ch02.CartesianPt.x   (Variable)
  Declared as: int
    Define [PointD.java, 21]         ch02.CartesianPt
    Set [PointD.java, 25]            ch02.CartesianPt.CartesianPt(int _x,int _y)
    Use [PointD.java, 31]            ch02.CartesianPt.distanceTo0
    Use [PointD.java, 31]            ch02.CartesianPt.distanceTo0
                                                                     Page 146
                         Object Cross Reference Report
===============================================================================

ch02.CartesianPt.y   (Variable)
  Declared as: int
    Define [PointD.java, 22]         ch02.CartesianPt
    Set [PointD.java, 26]            ch02.CartesianPt.CartesianPt(int _x,int _y)
    Use [PointD.java, 31]            ch02.CartesianPt.distanceTo0
    Use [PointD.java, 31]            ch02.CartesianPt.distanceTo0

ch02.CartesianPt1.CartesianPt1._x   (Parameter)
  Declared as: int
    Define [PointDCloser.java, 18]   ch02.CartesianPt1.CartesianPt1(int _x,int _y)
    Use [PointDCloser.java, 20]      ch02.CartesianPt1.CartesianPt1(int _x,int _y)

ch02.CartesianPt1.CartesianPt1._y   (Parameter)
  Declared as: int
    Define [PointDCloser.java, 18]   ch02.CartesianPt1.CartesianPt1(int _x,int _y)
    Use [PointDCloser.java, 21]      ch02.CartesianPt1.CartesianPt1(int _x,int _y)

ch02.CartesianPt1.closerTo0.p1   (Parameter)
  Declared as: CartesianPt1
    Define [PointDCloser.java, 30]   ch02.CartesianPt1.closerTo0(CartesianPt1 p1)
    Use [PointDCloser.java, 32]      ch02.CartesianPt1.closerTo0(CartesianPt1 p1)

ch02.CartesianPt1.x   (Variable)
  Declared as: int
    Define [PointDCloser.java, 16]   ch02.CartesianPt1
    Set [PointDCloser.java, 20]      ch02.CartesianPt1.CartesianPt1(int _x,int _y)
    Use [PointDCloser.java, 26]      ch02.CartesianPt1.distanceTo0
    Use [PointDCloser.java, 26]      ch02.CartesianPt1.distanceTo0

ch02.CartesianPt1.y   (Variable)
  Declared as: int
    Define [PointDCloser.java, 17]   ch02.CartesianPt1
    Set [PointDCloser.java, 21]      ch02.CartesianPt1.CartesianPt1(int _x,int _y)
    Use [PointDCloser.java, 26]      ch02.CartesianPt1.distanceTo0
    Use [PointDCloser.java, 26]      ch02.CartesianPt1.distanceTo0

ch02.CartesianPt2.CartesianPt2._x   (Parameter)
  Declared as: int
    Define [PointDCloserSimplify.java, 25]   ch02.CartesianPt2.CartesianPt2(int _x,int _y)
    Use [PointDCloserSimplify.java, 27]   ch02.CartesianPt2.CartesianPt2(int _x,int _y)

ch02.CartesianPt2.CartesianPt2._y   (Parameter)
  Declared as: int
    Define [PointDCloserSimplify.java, 25]   ch02.CartesianPt2.CartesianPt2(int _x,int _y)
    Use [PointDCloserSimplify.java, 28]   ch02.CartesianPt2.CartesianPt2(int _x,int _y)

ch02.CartesianPt2.x   (Variable)
  Declared as: int
    Define [PointDCloserSimplify.java, 23]   ch02.CartesianPt2
    Set [PointDCloserSimplify.java, 27]   ch02.CartesianPt2.CartesianPt2(int _x,int _y)
    Use [PointDCloserSimplify.java, 33]   ch02.CartesianPt2.distanceTo0
    Use [PointDCloserSimplify.java, 33]   ch02.CartesianPt2.distanceTo0

ch02.CartesianPt2.y   (Variable)
  Declared as: int
                                                                     Page 147
                         Object Cross Reference Report
===============================================================================
    Define [PointDCloserSimplify.java, 24]   ch02.CartesianPt2
    Set [PointDCloserSimplify.java, 28]   ch02.CartesianPt2.CartesianPt2(int _x,int _y)
    Use [PointDCloserSimplify.java, 33]   ch02.CartesianPt2.distanceTo0
    Use [PointDCloserSimplify.java, 33]   ch02.CartesianPt2.distanceTo0

ch02.Holder.Holder._o   (Parameter)
  Declared as: Object
    Define [KaoRou.java, 23]         ch02.Holder.Holder(Object _o)
    Use [KaoRou.java, 25]            ch02.Holder.Holder(Object _o)

ch02.Holder.o   (Variable)
  Declared as: Object
    Define [KaoRou.java, 22]         ch02.Holder
    Set [KaoRou.java, 25]            ch02.Holder.Holder(Object _o)
    Use [KaoRou.java, 36]            ch02.Holder.whatHolder

ch02.Lamb.Lamb._y   (Parameter)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 73]   ch02.Lamb.Lamb(YangRouChuan _y)
    Use [YangRouChuan.java, 75]      ch02.Lamb.Lamb(YangRouChuan _y)

ch02.Lamb.y   (Variable)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 72]   ch02.Lamb
    Set [YangRouChuan.java, 75]      ch02.Lamb.Lamb(YangRouChuan _y)

ch02.Main.main.args   (Parameter)
  Declared as: String[]
    Define [Main.java, 4]            ch02.Main.main(String[] args)

ch02.Main.main.p   (Variable)
  Declared as: PointD=ManHattanPt(1020,)
    Define [Main.java, 5]            ch02.Main.main(String[] args)
    Set [Main.java, 5]               ch02.Main.main(String[] args)
    Use [Main.java, 7]               ch02.Main.main(String[] args)
    Use [Main.java, 10]              ch02.Main.main(String[] args)

ch02.Main.main.p1   (Variable)
  Declared as: PointD=CartesianPt(1020,)
    Define [Main.java, 6]            ch02.Main.main(String[] args)
    Set [Main.java, 6]               ch02.Main.main(String[] args)
    Use [Main.java, 8]               ch02.Main.main(String[] args)

ch02.ManHattanPt.ManHattanPt._x   (Parameter)
  Declared as: int
    Define [PointD.java, 40]         ch02.ManHattanPt.ManHattanPt(int _x,int _y)
    Use [PointD.java, 42]            ch02.ManHattanPt.ManHattanPt(int _x,int _y)

ch02.ManHattanPt.ManHattanPt._y   (Parameter)
  Declared as: int
    Define [PointD.java, 40]         ch02.ManHattanPt.ManHattanPt(int _x,int _y)
    Use [PointD.java, 43]            ch02.ManHattanPt.ManHattanPt(int _x,int _y)

ch02.ManHattanPt.x   (Variable)
  Declared as: int
    Define [PointD.java, 38]         ch02.ManHattanPt
                                                                     Page 148
                         Object Cross Reference Report
===============================================================================
    Set [PointD.java, 42]            ch02.ManHattanPt.ManHattanPt(int _x,int _y)
    Use [PointD.java, 48]            ch02.ManHattanPt.distanceTo0
    Use [PointD.java, 54]            ch02.ManHattanPt.toString

ch02.ManHattanPt.y   (Variable)
  Declared as: int
    Define [PointD.java, 39]         ch02.ManHattanPt
    Set [PointD.java, 43]            ch02.ManHattanPt.ManHattanPt(int _x,int _y)
    Use [PointD.java, 48]            ch02.ManHattanPt.distanceTo0
    Use [PointD.java, 54]            ch02.ManHattanPt.toString

ch02.ManHattanPt1.closerTo0.p1   (Parameter)
  Declared as: ManHattanPt1
    Define [PointDCloser.java, 52]   ch02.ManHattanPt1.closerTo0(ManHattanPt1 p1)
    Use [PointDCloser.java, 54]      ch02.ManHattanPt1.closerTo0(ManHattanPt1 p1)

ch02.ManHattanPt1.ManHattanPt1._x   (Parameter)
  Declared as: int
    Define [PointDCloser.java, 41]   ch02.ManHattanPt1.ManHattanPt1(int _x,int _y)
    Use [PointDCloser.java, 43]      ch02.ManHattanPt1.ManHattanPt1(int _x,int _y)

ch02.ManHattanPt1.ManHattanPt1._y   (Parameter)
  Declared as: int
    Define [PointDCloser.java, 41]   ch02.ManHattanPt1.ManHattanPt1(int _x,int _y)
    Use [PointDCloser.java, 44]      ch02.ManHattanPt1.ManHattanPt1(int _x,int _y)

ch02.ManHattanPt1.x   (Variable)
  Declared as: int
    Define [PointDCloser.java, 39]   ch02.ManHattanPt1
    Set [PointDCloser.java, 43]      ch02.ManHattanPt1.ManHattanPt1(int _x,int _y)
    Use [PointDCloser.java, 49]      ch02.ManHattanPt1.distanceTo0

ch02.ManHattanPt1.y   (Variable)
  Declared as: int
    Define [PointDCloser.java, 40]   ch02.ManHattanPt1
    Set [PointDCloser.java, 44]      ch02.ManHattanPt1.ManHattanPt1(int _x,int _y)
    Use [PointDCloser.java, 49]      ch02.ManHattanPt1.distanceTo0

ch02.ManHattanPt2.closerTo0.p1   (Parameter)
  Declared as: CartesianPt
    Define [PointDCloserSimplify.java, 55]   ch02.ManHattanPt2.closerTo0(CartesianPt p1)
    Use [PointDCloserSimplify.java, 57]   ch02.ManHattanPt2.closerTo0(CartesianPt p1)

ch02.ManHattanPt2.ManHattanPt2._x   (Parameter)
  Declared as: int
    Define [PointDCloserSimplify.java, 44]   ch02.ManHattanPt2.ManHattanPt2(int _x,int _y)
    Use [PointDCloserSimplify.java, 46]   ch02.ManHattanPt2.ManHattanPt2(int _x,int _y)

ch02.ManHattanPt2.ManHattanPt2._y   (Parameter)
  Declared as: int
    Define [PointDCloserSimplify.java, 44]   ch02.ManHattanPt2.ManHattanPt2(int _x,int _y)
    Use [PointDCloserSimplify.java, 47]   ch02.ManHattanPt2.ManHattanPt2(int _x,int _y)

ch02.ManHattanPt2.x   (Variable)
  Declared as: int
    Define [PointDCloserSimplify.java, 42]   ch02.ManHattanPt2
                                                                     Page 149
                         Object Cross Reference Report
===============================================================================
    Set [PointDCloserSimplify.java, 46]   ch02.ManHattanPt2.ManHattanPt2(int _x,int _y)
    Use [PointDCloserSimplify.java, 52]   ch02.ManHattanPt2.distanceTo0

ch02.ManHattanPt2.y   (Variable)
  Declared as: int
    Define [PointDCloserSimplify.java, 43]   ch02.ManHattanPt2
    Set [PointDCloserSimplify.java, 47]   ch02.ManHattanPt2.ManHattanPt2(int _x,int _y)
    Use [PointDCloserSimplify.java, 52]   ch02.ManHattanPt2.distanceTo0

ch02.MoreThanOne.MoreThanOne._d   (Parameter)
  Declared as: NumD
    Define [NumD.java, 46]           ch02.MoreThanOne.MoreThanOne(NumD _d)
    Use [NumD.java, 48]              ch02.MoreThanOne.MoreThanOne(NumD _d)

ch02.MoreThanOne.predecessor   (Variable)
  Declared as: NumD
    Define [NumD.java, 45]           ch02.MoreThanOne
    Set [NumD.java, 48]              ch02.MoreThanOne.MoreThanOne(NumD _d)

ch02.Onion.Onion._s   (Parameter)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 47]   ch02.Onion.Onion(YangRouChuan _s)
    Use [YangRouChuan.java, 49]      ch02.Onion.Onion(YangRouChuan _s)

ch02.Onion.s1   (Variable)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 45]   ch02.Onion
    Set [YangRouChuan.java, 49]      ch02.Onion.Onion(YangRouChuan _s)
    Use [YangRouChuan.java, 60]      ch02.Onion.isVegetarian
    Use [YangRouChuan.java, 54]      ch02.Onion.onlyOnions

ch02.Pepper.kaoroujia   (Variable)
  Declared as: KaoRou
    Define [KaoRou.java, 94]         ch02.Pepper
    Set [KaoRou.java, 97]            ch02.Pepper.Pepper(KaoRou kaoroujia)
    Use [KaoRou.java, 102]           ch02.Pepper.isVeggie
    Use [KaoRou.java, 108]           ch02.Pepper.whatHolder

ch02.Pepper.Pepper.kaoroujia   (Parameter)
  Declared as: KaoRou
    Define [KaoRou.java, 95]         ch02.Pepper.Pepper(KaoRou kaoroujia)
    Use [KaoRou.java, 97]            ch02.Pepper.Pepper(KaoRou kaoroujia)

ch02.PointDCloserSimplify.closerTo0.p1   (Parameter)
  Declared as: CartesianPt2
    Define [PointDCloserSimplify.java, 13]   ch02.PointDCloserSimplify.closerTo0(CartesianPt2 p1)
    Use [PointDCloserSimplify.java, 15]   ch02.PointDCloserSimplify.closerTo0(CartesianPt2 p1)

ch02.Radish.kaoroujia   (Variable)
  Declared as: KaoRou
    Define [KaoRou.java, 76]         ch02.Radish
    Set [KaoRou.java, 79]            ch02.Radish.Radish(KaoRou kaoroujia)
    Use [KaoRou.java, 84]            ch02.Radish.isVeggie
    Use [KaoRou.java, 90]            ch02.Radish.whatHolder
                                                                     Page 150
                         Object Cross Reference Report
===============================================================================

ch02.Radish.Radish.kaoroujia   (Parameter)
  Declared as: KaoRou
    Define [KaoRou.java, 77]         ch02.Radish.Radish(KaoRou kaoroujia)
    Use [KaoRou.java, 79]            ch02.Radish.Radish(KaoRou kaoroujia)

ch02.Shallot.kaoroujia   (Variable)
  Declared as: KaoRou
    Define [KaoRou.java, 40]         ch02.Shallot
    Set [KaoRou.java, 43]            ch02.Shallot.Shallot(KaoRou kaoroujia)
    Use [KaoRou.java, 48]            ch02.Shallot.isVeggie
    Use [KaoRou.java, 54]            ch02.Shallot.whatHolder

ch02.Shallot.Shallot.kaoroujia   (Parameter)
  Declared as: KaoRou
    Define [KaoRou.java, 41]         ch02.Shallot.Shallot(KaoRou kaoroujia)
    Use [KaoRou.java, 43]            ch02.Shallot.Shallot(KaoRou kaoroujia)

ch02.Shrimp.kaoroujia   (Variable)
  Declared as: KaoRou
    Define [KaoRou.java, 58]         ch02.Shrimp
    Set [KaoRou.java, 61]            ch02.Shrimp.Shrimp(KaoRou kaoroujia)
    Use [KaoRou.java, 72]            ch02.Shrimp.whatHolder

ch02.Shrimp.Shrimp.kaoroujia   (Parameter)
  Declared as: KaoRou
    Define [KaoRou.java, 59]         ch02.Shrimp.Shrimp(KaoRou kaoroujia)
    Use [KaoRou.java, 61]            ch02.Shrimp.Shrimp(KaoRou kaoroujia)

ch02.Test.main.args   (Parameter)
  Declared as: String[]
    Define [Test.java, 5]            ch02.Test.main(String[] args)

ch02.Test.main.m2   (Variable)
  Declared as: ManHattanPt1=ManHattanPt1(1020,)
    Define [Test.java, 9]            ch02.Test.main(String[] args)
    Set [Test.java, 9]               ch02.Test.main(String[] args)
    Use [Test.java, 11]              ch02.Test.main(String[] args)

ch02.Test.main.m3   (Variable)
  Declared as: ManHattanPt1=ManHattanPt1(3020,)
    Define [Test.java, 10]           ch02.Test.main(String[] args)
    Set [Test.java, 10]              ch02.Test.main(String[] args)
    Use [Test.java, 11]              ch02.Test.main(String[] args)

ch02.Test.main.mhpt   (Variable)
  Declared as: ManHattanPt=ManHattanPt(8010,)
    Define [Test.java, 6]            ch02.Test.main(String[] args)
    Set [Test.java, 6]               ch02.Test.main(String[] args)
    Use [Test.java, 7]               ch02.Test.main(String[] args)

ch02.TestTYangRouChuan.main.args   (Parameter)
  Declared as: String[]
    Define [TestTYangRouChuan.java, 5]   ch02.TestTYangRouChuan.main(String[] args)
                                                                     Page 151
                         Object Cross Reference Report
===============================================================================

ch02.Tomato.Tomato._y   (Parameter)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 95]   ch02.Tomato.Tomato(YangRouChuan _y)
    Use [YangRouChuan.java, 97]      ch02.Tomato.Tomato(YangRouChuan _y)

ch02.Tomato.y   (Variable)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 94]   ch02.Tomato
    Set [YangRouChuan.java, 97]      ch02.Tomato.Tomato(YangRouChuan _y)
    Use [YangRouChuan.java, 108]     ch02.Tomato.isVegetarian

ch02.Zucchini.kaoroujia   (Variable)
  Declared as: KaoRou
    Define [KaoRou.java, 112]        ch02.Zucchini
    Set [KaoRou.java, 115]           ch02.Zucchini.Zucchini(KaoRou kaoroujia)
    Use [KaoRou.java, 120]           ch02.Zucchini.isVeggie
    Use [KaoRou.java, 126]           ch02.Zucchini.whatHolder

ch02.Zucchini.Zucchini.kaoroujia   (Parameter)
  Declared as: KaoRou
    Define [KaoRou.java, 113]        ch02.Zucchini.Zucchini(KaoRou kaoroujia)
    Use [KaoRou.java, 115]           ch02.Zucchini.Zucchini(KaoRou kaoroujia)

ch03.Anchovy.Anchovy._p   (Parameter)
  Declared as: PizzaD
    Define [PizzaD.java, 99]         ch03.Anchovy.Anchovy(PizzaD _p)
    Use [PizzaD.java, 101]           ch03.Anchovy.Anchovy(PizzaD _p)

ch03.Anchovy.p   (Variable)
  Declared as: PizzaD
    Define [PizzaD.java, 98]         ch03.Anchovy
    Set [PizzaD.java, 101]           ch03.Anchovy.Anchovy(PizzaD _p)
    Use [PizzaD.java, 107]           ch03.Anchovy.remA
    Use [PizzaD.java, 120]           ch03.Anchovy.subAwC
    Use [PizzaD.java, 114]           ch03.Anchovy.topAwC

ch03.Cheese.Cheese._p   (Parameter)
  Declared as: PizzaD
    Define [PizzaD.java, 40]         ch03.Cheese.Cheese(PizzaD _p)
    Use [PizzaD.java, 42]            ch03.Cheese.Cheese(PizzaD _p)

ch03.Cheese.p   (Variable)
  Declared as: PizzaD
    Define [PizzaD.java, 39]         ch03.Cheese
    Set [PizzaD.java, 42]            ch03.Cheese.Cheese(PizzaD _p)
    Use [PizzaD.java, 47]            ch03.Cheese.remA
    Use [PizzaD.java, 59]            ch03.Cheese.subAwC
    Use [PizzaD.java, 53]            ch03.Cheese.topAwC

ch03.Olive.Olive._p   (Parameter)
  Declared as: PizzaD
    Define [PizzaD.java, 70]         ch03.Olive.Olive(PizzaD _p)
    Use [PizzaD.java, 72]            ch03.Olive.Olive(PizzaD _p)
                                                                     Page 152
                         Object Cross Reference Report
===============================================================================

ch03.Olive.p   (Variable)
  Declared as: PizzaD
    Define [PizzaD.java, 69]         ch03.Olive
    Set [PizzaD.java, 72]            ch03.Olive.Olive(PizzaD _p)
    Use [PizzaD.java, 77]            ch03.Olive.remA
    Use [PizzaD.java, 89]            ch03.Olive.subAwC
    Use [PizzaD.java, 83]            ch03.Olive.topAwC

ch03.Sausage.p   (Variable)
  Declared as: PizzaD
    Define [PizzaD.java, 129]        ch03.Sausage
    Set [PizzaD.java, 132]           ch03.Sausage.Sausage(PizzaD _p)
    Use [PizzaD.java, 137]           ch03.Sausage.remA
    Use [PizzaD.java, 149]           ch03.Sausage.subAwC
    Use [PizzaD.java, 143]           ch03.Sausage.topAwC

ch03.Sausage.Sausage._p   (Parameter)
  Declared as: PizzaD
    Define [PizzaD.java, 130]        ch03.Sausage.Sausage(PizzaD _p)
    Use [PizzaD.java, 132]           ch03.Sausage.Sausage(PizzaD _p)

ch03.Spinach.p   (Variable)
  Declared as: PizzaD
    Define [PizzaD.java, 166]        ch03.Spinach
    Set [PizzaD.java, 169]           ch03.Spinach.Spinach(PizzaD _p)
    Use [PizzaD.java, 174]           ch03.Spinach.remA
    Use [PizzaD.java, 186]           ch03.Spinach.subAwC
    Use [PizzaD.java, 180]           ch03.Spinach.topAwC

ch03.Spinach.Spinach._p   (Parameter)
  Declared as: PizzaD
    Define [PizzaD.java, 167]        ch03.Spinach.Spinach(PizzaD _p)
    Use [PizzaD.java, 169]           ch03.Spinach.Spinach(PizzaD _p)

ch04.IsVegetarianV.forLamb.y   (Parameter)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 27]   ch04.IsVegetarianV.forLamb(YangRouChuan y)

ch04.IsVegetarianV.forOnion.y   (Parameter)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 24]   ch04.IsVegetarianV.forOnion(YangRouChuan y)
    Use [YangRouChuan.java, 25]      ch04.IsVegetarianV.forOnion(YangRouChuan y)

ch04.IsVegetarianV.forTomato.y   (Parameter)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 30]   ch04.IsVegetarianV.forTomato(YangRouChuan y)
    Use [YangRouChuan.java, 31]      ch04.IsVegetarianV.forTomato(YangRouChuan y)

ch04.Lamb.Lamb._y   (Parameter)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 92]   ch04.Lamb.Lamb(YangRouChuan _y)
    Use [YangRouChuan.java, 94]      ch04.Lamb.Lamb(YangRouChuan _y)

ch04.Lamb.y   (Variable)
  Declared as: YangRouChuan
                                                                     Page 153
                         Object Cross Reference Report
===============================================================================
    Define [YangRouChuan.java, 91]   ch04.Lamb
    Set [YangRouChuan.java, 94]      ch04.Lamb.Lamb(YangRouChuan _y)
    Use [YangRouChuan.java, 106]     ch04.Lamb.isVegetarian
    Use [YangRouChuan.java, 100]     ch04.Lamb.onlyOnions

ch04.Onion.Onion._s   (Parameter)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 70]   ch04.Onion.Onion(YangRouChuan _s)
    Use [YangRouChuan.java, 72]      ch04.Onion.Onion(YangRouChuan _s)

ch04.Onion.s1   (Variable)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 68]   ch04.Onion
    Set [YangRouChuan.java, 72]      ch04.Onion.Onion(YangRouChuan _s)
    Use [YangRouChuan.java, 83]      ch04.Onion.isVegetarian
    Use [YangRouChuan.java, 77]      ch04.Onion.onlyOnions

ch04.OnlyOnionsV.forLamb.y   (Parameter)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 12]   ch04.OnlyOnionsV.forLamb(YangRouChuan y)

ch04.OnlyOnionsV.forOnion.y   (Parameter)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 9]    ch04.OnlyOnionsV.forOnion(YangRouChuan y)
    Use [YangRouChuan.java, 10]      ch04.OnlyOnionsV.forOnion(YangRouChuan y)

ch04.OnlyOnionsV.forTomato.y   (Parameter)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 15]   ch04.OnlyOnionsV.forTomato(YangRouChuan y)

ch04.Tomato.Tomato._y   (Parameter)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 114]   ch04.Tomato.Tomato(YangRouChuan _y)
    Use [YangRouChuan.java, 116]     ch04.Tomato.Tomato(YangRouChuan _y)

ch04.Tomato.y   (Variable)
  Declared as: YangRouChuan
    Define [YangRouChuan.java, 113]   ch04.Tomato
    Set [YangRouChuan.java, 116]     ch04.Tomato.Tomato(YangRouChuan _y)
    Use [YangRouChuan.java, 127]     ch04.Tomato.isVegetarian
    Use [YangRouChuan.java, 121]     ch04.Tomato.onlyOnions

ch04.YangRouChuan.ivFn   (Variable)
  Declared as: IsVegetarianV=IsVegetarianV()
    Use [YangRouChuan.java, 106]     ch04.Lamb.isVegetarian
    Use [YangRouChuan.java, 83]      ch04.Onion.isVegetarian
    Use [YangRouChuan.java, 60]      ch04.Skewer.isVegetarian
    Use [YangRouChuan.java, 127]     ch04.Tomato.isVegetarian
    Define [YangRouChuan.java, 38]   ch04.YangRouChuan
    Set [YangRouChuan.java, 38]      ch04.YangRouChuan

ch04.YangRouChuan.ooFn   (Variable)
  Declared as: OnlyOnionsV=OnlyOnionsV()
    Use [YangRouChuan.java, 100]     ch04.Lamb.onlyOnions
    Use [YangRouChuan.java, 77]      ch04.Onion.onlyOnions
    Use [YangRouChuan.java, 54]      ch04.Skewer.onlyOnions
                                                                     Page 154
                         Object Cross Reference Report
===============================================================================
    Use [YangRouChuan.java, 121]     ch04.Tomato.onlyOnions
    Define [YangRouChuan.java, 37]   ch04.YangRouChuan
    Set [YangRouChuan.java, 37]      ch04.YangRouChuan

ch05.AnchovyFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 12]           ch05.AnchovyFish.equals(Object o)
    Use [PieD.java, 14]              ch05.AnchovyFish.equals(Object o)

ch05.Bot.remFish.f   (Parameter)
  Declared as: FishD
    Define [PieD.java, 85]           ch05.Bot.remFish(FishD f)

ch05.Bot1.remA.o   (Parameter)
  Declared as: Object
    Define [PieDGeneral.java, 60]    ch05.Bot1.remA(Object o)
    Use [PieDGeneral.java, 62]       ch05.Bot1.remA(Object o)

ch05.FishD.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 6]            ch05.FishD.equals(Object o)

ch05.MoreThanOne.equals.o   (Parameter)
  Declared as: Object
    Define [NumD.java, 53]           ch05.MoreThanOne.equals(Object o)
    Use [NumD.java, 54]              ch05.MoreThanOne.equals(Object o)
    Use [NumD.java, 55]              ch05.MoreThanOne.equals(Object o)

ch05.MoreThanOne.MoreThanOne._d   (Parameter)
  Declared as: NumD
    Define [NumD.java, 48]           ch05.MoreThanOne.MoreThanOne(NumD _d)
    Use [NumD.java, 50]              ch05.MoreThanOne.MoreThanOne(NumD _d)

ch05.MoreThanOne.predecessor   (Variable)
  Declared as: NumD
    Define [NumD.java, 47]           ch05.MoreThanOne
    Set [NumD.java, 50]              ch05.MoreThanOne.MoreThanOne(NumD _d)
    Use [NumD.java, 55]              ch05.MoreThanOne.equals(Object o)
    Use [NumD.java, 55]              ch05.MoreThanOne.equals(Object o)

ch05.PieD.raFn   (Variable)
  Declared as: RemAV=RemAV()
    Define [PieD.java, 70]           ch05.PieD
    Set [PieD.java, 70]              ch05.PieD
    Use [PieD.java, 106]             ch05.Top.remA

ch05.PieD.remFish.f   (Parameter)
  Declared as: FishD
    Define [PieD.java, 73]           ch05.PieD.remFish(FishD f)

ch05.PieD.rfFn   (Variable)
  Declared as: RemFishV=RemFishV()
    Define [PieD.java, 71]           ch05.PieD
    Set [PieD.java, 71]              ch05.PieD
    Use [PieD.java, 112]             ch05.Top.remFish(FishD f)
                                                                     Page 155
                         Object Cross Reference Report
===============================================================================

ch05.PieDGeneral.remA.o   (Parameter)
  Declared as: Object
    Define [PieDGeneral.java, 54]    ch05.PieDGeneral.remA(Object o)

ch05.PieDGeneral.remFn   (Variable)
  Declared as: RemV=RemV()
    Use [PieDGeneral.java, 62]       ch05.Bot1.remA(Object o)
    Define [PieDGeneral.java, 53]    ch05.PieDGeneral
    Set [PieDGeneral.java, 53]       ch05.PieDGeneral
    Use [PieDGeneral.java, 79]       ch05.Top1.remA(Object f)

ch05.RemAV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 45]           ch05.RemAV.forTop(Object t,PieD r)
    Use [PieD.java, 47]              ch05.RemAV.forTop(Object t,PieD r)
    Use [PieD.java, 49]              ch05.RemAV.forTop(Object t,PieD r)

ch05.RemAV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 45]           ch05.RemAV.forTop(Object t,PieD r)
    Use [PieD.java, 46]              ch05.RemAV.forTop(Object t,PieD r)
    Use [PieD.java, 49]              ch05.RemAV.forTop(Object t,PieD r)

ch05.RemFishInt.forBot.f   (Parameter)
  Declared as: FishD
    Define [PieDGeneral.java, 22]    ch05.RemFishInt.forBot(FishD f)

ch05.RemFishInt.forTop.f   (Parameter)
  Declared as: Integer
    Define [PieDGeneral.java, 26]    ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
    Use [PieDGeneral.java, 27]       ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
    Use [PieDGeneral.java, 28]       ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
    Use [PieDGeneral.java, 30]       ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)

ch05.RemFishInt.forTop.r   (Parameter)
  Declared as: PieDGeneral
    Define [PieDGeneral.java, 26]    ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
    Use [PieDGeneral.java, 28]       ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
    Use [PieDGeneral.java, 30]       ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)

ch05.RemFishInt.forTop.t   (Parameter)
  Declared as: Object
    Define [PieDGeneral.java, 26]    ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
    Use [PieDGeneral.java, 27]       ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
    Use [PieDGeneral.java, 30]       ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)

ch05.RemFishV.forBot.f   (Parameter)
  Declared as: FishD
    Define [PieD.java, 55]           ch05.RemFishV.forBot(FishD f)

ch05.RemFishV.forTop.f   (Parameter)
  Declared as: FishD
    Define [PieD.java, 59]           ch05.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 60]              ch05.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 61]              ch05.RemFishV.forTop(Object t,PieD r,FishD f)
                                                                     Page 156
                         Object Cross Reference Report
===============================================================================
    Use [PieD.java, 63]              ch05.RemFishV.forTop(Object t,PieD r,FishD f)

ch05.RemFishV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 59]           ch05.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 61]              ch05.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 63]              ch05.RemFishV.forTop(Object t,PieD r,FishD f)

ch05.RemFishV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 59]           ch05.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 60]              ch05.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 63]              ch05.RemFishV.forTop(Object t,PieD r,FishD f)

ch05.RemFishV1.forBot.f   (Parameter)
  Declared as: FishD
    Define [PieDGeneral.java, 7]     ch05.RemFishV1.forBot(FishD f)

ch05.RemFishV1.forTop.f   (Parameter)
  Declared as: FishD
    Define [PieDGeneral.java, 11]    ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
    Use [PieDGeneral.java, 12]       ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
    Use [PieDGeneral.java, 13]       ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
    Use [PieDGeneral.java, 15]       ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)

ch05.RemFishV1.forTop.r   (Parameter)
  Declared as: PieDGeneral
    Define [PieDGeneral.java, 11]    ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
    Use [PieDGeneral.java, 13]       ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
    Use [PieDGeneral.java, 15]       ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)

ch05.RemFishV1.forTop.t   (Parameter)
  Declared as: Object
    Define [PieDGeneral.java, 11]    ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
    Use [PieDGeneral.java, 12]       ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
    Use [PieDGeneral.java, 15]       ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)

ch05.RemV.forBot.f   (Parameter)
  Declared as: Object
    Define [PieDGeneral.java, 38]    ch05.RemV.forBot(Object f)

ch05.RemV.forTop.f   (Parameter)
  Declared as: Object
    Define [PieDGeneral.java, 42]    ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
    Use [PieDGeneral.java, 43]       ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
    Use [PieDGeneral.java, 44]       ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
    Use [PieDGeneral.java, 46]       ch05.RemV.forTop(Object t,PieDGeneral r,Object f)

ch05.RemV.forTop.r   (Parameter)
  Declared as: PieDGeneral
    Define [PieDGeneral.java, 42]    ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
    Use [PieDGeneral.java, 44]       ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
    Use [PieDGeneral.java, 46]       ch05.RemV.forTop(Object t,PieDGeneral r,Object f)

ch05.RemV.forTop.t   (Parameter)
  Declared as: Object
                                                                     Page 157
                         Object Cross Reference Report
===============================================================================
    Define [PieDGeneral.java, 42]    ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
    Use [PieDGeneral.java, 43]       ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
    Use [PieDGeneral.java, 46]       ch05.RemV.forTop(Object t,PieDGeneral r,Object f)

ch05.SalmonFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 22]           ch05.SalmonFish.equals(Object o)
    Use [PieD.java, 24]              ch05.SalmonFish.equals(Object o)

ch05.Top.r   (Variable)
  Declared as: PieD
    Define [PieD.java, 96]           ch05.Top
    Set [PieD.java, 100]             ch05.Top.Top(Object t,PieD r)
    Use [PieD.java, 106]             ch05.Top.remA
    Use [PieD.java, 112]             ch05.Top.remFish(FishD f)

ch05.Top.remFish.f   (Parameter)
  Declared as: FishD
    Define [PieD.java, 110]          ch05.Top.remFish(FishD f)
    Use [PieD.java, 112]             ch05.Top.remFish(FishD f)
    Use [PieD.java, 112]             ch05.Top.remFish(FishD f)

ch05.Top.t   (Variable)
  Declared as: Object
    Define [PieD.java, 95]           ch05.Top
    Set [PieD.java, 99]              ch05.Top.Top(Object t,PieD r)
    Use [PieD.java, 106]             ch05.Top.remA

ch05.Top.Top.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 97]           ch05.Top.Top(Object t,PieD r)
    Use [PieD.java, 100]             ch05.Top.Top(Object t,PieD r)

ch05.Top.Top.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 97]           ch05.Top.Top(Object t,PieD r)
    Use [PieD.java, 99]              ch05.Top.Top(Object t,PieD r)

ch05.Top1.r   (Variable)
  Declared as: PieDGeneral
    Define [PieDGeneral.java, 70]    ch05.Top1
    Set [PieDGeneral.java, 74]       ch05.Top1.Top1(Object t,PieDGeneral r)
    Use [PieDGeneral.java, 79]       ch05.Top1.remA(Object f)

ch05.Top1.remA.f   (Parameter)
  Declared as: Object
    Define [PieDGeneral.java, 77]    ch05.Top1.remA(Object f)
    Use [PieDGeneral.java, 79]       ch05.Top1.remA(Object f)

ch05.Top1.t   (Variable)
  Declared as: Object
    Define [PieDGeneral.java, 69]    ch05.Top1
    Set [PieDGeneral.java, 73]       ch05.Top1.Top1(Object t,PieDGeneral r)
    Use [PieDGeneral.java, 79]       ch05.Top1.remA(Object f)
                                                                     Page 158
                         Object Cross Reference Report
===============================================================================

ch05.Top1.Top1.r   (Parameter)
  Declared as: PieDGeneral
    Define [PieDGeneral.java, 71]    ch05.Top1.Top1(Object t,PieDGeneral r)
    Use [PieDGeneral.java, 74]       ch05.Top1.Top1(Object t,PieDGeneral r)

ch05.Top1.Top1.t   (Parameter)
  Declared as: Object
    Define [PieDGeneral.java, 71]    ch05.Top1.Top1(Object t,PieDGeneral r)
    Use [PieDGeneral.java, 73]       ch05.Top1.Top1(Object t,PieDGeneral r)

ch05.TunaFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 32]           ch05.TunaFish.equals(Object o)
    Use [PieD.java, 34]              ch05.TunaFish.equals(Object o)

ch05.Zero.equals.o   (Parameter)
  Declared as: Object
    Define [NumD.java, 38]           ch05.Zero.equals(Object o)
    Use [NumD.java, 39]              ch05.Zero.equals(Object o)

ch051.AnchovyFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 13]           ch051.AnchovyFish.equals(Object o)
    Use [PieD.java, 15]              ch051.AnchovyFish.equals(Object o)

ch051.Bot.remA.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 144]          ch051.Bot.remA(Object o)
    Use [PieD.java, 146]             ch051.Bot.remA(Object o)

ch051.Bot.substFish.n   (Parameter)
  Declared as: Object
    Define [PieD.java, 150]          ch051.Bot.substFish(Object n,Object o)
    Use [PieD.java, 152]             ch051.Bot.substFish(Object n,Object o)

ch051.Bot.substFish.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 150]          ch051.Bot.substFish(Object n,Object o)
    Use [PieD.java, 152]             ch051.Bot.substFish(Object n,Object o)

ch051.FishD.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 7]            ch051.FishD.equals(Object o)

ch051.PieD.remA.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 137]          ch051.PieD.remA(Object o)

ch051.PieD.remFn   (Variable)
  Declared as: RemV=RemV()
    Use [PieD.java, 146]             ch051.Bot.remA(Object o)
    Define [PieD.java, 135]          ch051.PieD
    Set [PieD.java, 135]             ch051.PieD
    Use [PieD.java, 169]             ch051.Top.remA(Object f)
                                                                     Page 159
                         Object Cross Reference Report
===============================================================================

ch051.PieD.subFn   (Variable)
  Declared as: SubstV=SubstV()
    Use [PieD.java, 152]             ch051.Bot.substFish(Object n,Object o)
    Define [PieD.java, 136]          ch051.PieD
    Set [PieD.java, 136]             ch051.PieD
    Use [PieD.java, 174]             ch051.Top.substFish(Object n,Object o)

ch051.PieD.substFish.n   (Parameter)
  Declared as: Object
    Define [PieD.java, 138]          ch051.PieD.substFish(Object n,Object o)

ch051.PieD.substFish.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 138]          ch051.PieD.substFish(Object n,Object o)

ch051.RemFishInt.forBot.f   (Parameter)
  Declared as: FishD
    Define [PieD.java, 58]           ch051.RemFishInt.forBot(FishD f)

ch051.RemFishInt.forTop.f   (Parameter)
  Declared as: Integer
    Define [PieD.java, 62]           ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
    Use [PieD.java, 63]              ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
    Use [PieD.java, 64]              ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
    Use [PieD.java, 66]              ch051.RemFishInt.forTop(Object t,PieD r,Integer f)

ch051.RemFishInt.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 62]           ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
    Use [PieD.java, 64]              ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
    Use [PieD.java, 66]              ch051.RemFishInt.forTop(Object t,PieD r,Integer f)

ch051.RemFishInt.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 62]           ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
    Use [PieD.java, 63]              ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
    Use [PieD.java, 66]              ch051.RemFishInt.forTop(Object t,PieD r,Integer f)

ch051.RemFishV.forBot.f   (Parameter)
  Declared as: FishD
    Define [PieD.java, 43]           ch051.RemFishV.forBot(FishD f)

ch051.RemFishV.forTop.f   (Parameter)
  Declared as: FishD
    Define [PieD.java, 47]           ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 48]              ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 49]              ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 51]              ch051.RemFishV.forTop(Object t,PieD r,FishD f)

ch051.RemFishV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 47]           ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 49]              ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 51]              ch051.RemFishV.forTop(Object t,PieD r,FishD f)
                                                                     Page 160
                         Object Cross Reference Report
===============================================================================

ch051.RemFishV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 47]           ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 48]              ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Use [PieD.java, 51]              ch051.RemFishV.forTop(Object t,PieD r,FishD f)

ch051.RemV.forBot.f   (Parameter)
  Declared as: Object
    Define [PieD.java, 74]           ch051.RemV.forBot(Object f)

ch051.RemV.forTop.f   (Parameter)
  Declared as: Object
    Define [PieD.java, 78]           ch051.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 79]              ch051.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 80]              ch051.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 82]              ch051.RemV.forTop(Object t,PieD r,Object f)

ch051.RemV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 78]           ch051.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 80]              ch051.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 82]              ch051.RemV.forTop(Object t,PieD r,Object f)

ch051.RemV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 78]           ch051.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 79]              ch051.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 82]              ch051.RemV.forTop(Object t,PieD r,Object f)

ch051.SalmonFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 23]           ch051.SalmonFish.equals(Object o)
    Use [PieD.java, 25]              ch051.SalmonFish.equals(Object o)

ch051.SubstFishV.forBot.n   (Parameter)
  Declared as: FishD
    Define [PieD.java, 90]           ch051.SubstFishV.forBot(FishD n,FishD o)

ch051.SubstFishV.forBot.o   (Parameter)
  Declared as: FishD
    Define [PieD.java, 90]           ch051.SubstFishV.forBot(FishD n,FishD o)

ch051.SubstFishV.forTop.n   (Parameter)
  Declared as: FishD
    Define [PieD.java, 94]           ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Use [PieD.java, 96]              ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Use [PieD.java, 96]              ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Use [PieD.java, 98]              ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)

ch051.SubstFishV.forTop.o   (Parameter)
  Declared as: FishD
    Define [PieD.java, 94]           ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Use [PieD.java, 95]              ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Use [PieD.java, 96]              ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Use [PieD.java, 98]              ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
                                                                     Page 161
                         Object Cross Reference Report
===============================================================================

ch051.SubstFishV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 94]           ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Use [PieD.java, 96]              ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Use [PieD.java, 98]              ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)

ch051.SubstFishV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 94]           ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Use [PieD.java, 95]              ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Use [PieD.java, 98]              ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)

ch051.SubstIntV.forBot.n   (Parameter)
  Declared as: Integer
    Define [PieD.java, 105]          ch051.SubstIntV.forBot(Integer n,Integer o)

ch051.SubstIntV.forBot.o   (Parameter)
  Declared as: Integer
    Define [PieD.java, 105]          ch051.SubstIntV.forBot(Integer n,Integer o)

ch051.SubstIntV.forTop.n   (Parameter)
  Declared as: Integer
    Define [PieD.java, 109]          ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Use [PieD.java, 111]             ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Use [PieD.java, 111]             ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Use [PieD.java, 113]             ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)

ch051.SubstIntV.forTop.o   (Parameter)
  Declared as: Integer
    Define [PieD.java, 109]          ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Use [PieD.java, 110]             ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Use [PieD.java, 111]             ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Use [PieD.java, 113]             ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)

ch051.SubstIntV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 109]          ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Use [PieD.java, 111]             ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Use [PieD.java, 113]             ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)

ch051.SubstIntV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 109]          ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Use [PieD.java, 110]             ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Use [PieD.java, 113]             ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)

ch051.SubstV.forBot.n   (Parameter)
  Declared as: Object
    Define [PieD.java, 119]          ch051.SubstV.forBot(Object n,Object o)

ch051.SubstV.forBot.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 119]          ch051.SubstV.forBot(Object n,Object o)
                                                                     Page 162
                         Object Cross Reference Report
===============================================================================

ch051.SubstV.forTop.n   (Parameter)
  Declared as: Object
    Define [PieD.java, 123]          ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 125]             ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 125]             ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 127]             ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)

ch051.SubstV.forTop.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 123]          ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 124]             ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 125]             ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 127]             ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)

ch051.SubstV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 123]          ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 125]             ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 127]             ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)

ch051.SubstV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 123]          ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 124]             ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 127]             ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)

ch051.Top.r   (Variable)
  Declared as: PieD
    Define [PieD.java, 160]          ch051.Top
    Set [PieD.java, 164]             ch051.Top.Top(Object t,PieD r)
    Use [PieD.java, 169]             ch051.Top.remA(Object f)
    Use [PieD.java, 174]             ch051.Top.substFish(Object n,Object o)

ch051.Top.remA.f   (Parameter)
  Declared as: Object
    Define [PieD.java, 167]          ch051.Top.remA(Object f)
    Use [PieD.java, 169]             ch051.Top.remA(Object f)

ch051.Top.substFish.n   (Parameter)
  Declared as: Object
    Define [PieD.java, 172]          ch051.Top.substFish(Object n,Object o)
    Use [PieD.java, 174]             ch051.Top.substFish(Object n,Object o)

ch051.Top.substFish.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 172]          ch051.Top.substFish(Object n,Object o)
    Use [PieD.java, 174]             ch051.Top.substFish(Object n,Object o)

ch051.Top.t   (Variable)
  Declared as: Object
    Define [PieD.java, 159]          ch051.Top
    Set [PieD.java, 163]             ch051.Top.Top(Object t,PieD r)
    Use [PieD.java, 169]             ch051.Top.remA(Object f)
    Use [PieD.java, 174]             ch051.Top.substFish(Object n,Object o)
                                                                     Page 163
                         Object Cross Reference Report
===============================================================================

ch051.Top.Top.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 161]          ch051.Top.Top(Object t,PieD r)
    Use [PieD.java, 164]             ch051.Top.Top(Object t,PieD r)

ch051.Top.Top.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 161]          ch051.Top.Top(Object t,PieD r)
    Use [PieD.java, 163]             ch051.Top.Top(Object t,PieD r)

ch051.TunaFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 33]           ch051.TunaFish.equals(Object o)
    Use [PieD.java, 35]              ch051.TunaFish.equals(Object o)

ch06.AnchovyFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 13]           ch06.AnchovyFish.equals(Object o)
    Use [PieD.java, 15]              ch06.AnchovyFish.equals(Object o)

ch06.Bot.remA.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 144]          ch06.Bot.remA(RemV remFn,Object o)
    Use [PieD.java, 146]             ch06.Bot.remA(RemV remFn,Object o)

ch06.Bot.remA.remFn   (Parameter)
  Declared as: RemV
    Define [PieD.java, 144]          ch06.Bot.remA(RemV remFn,Object o)
    Use [PieD.java, 146]             ch06.Bot.remA(RemV remFn,Object o)

ch06.Bot.substFish.n   (Parameter)
  Declared as: Object
    Define [PieD.java, 150]          ch06.Bot.substFish(SubstV subFn,Object n,Object o)
    Use [PieD.java, 152]             ch06.Bot.substFish(SubstV subFn,Object n,Object o)

ch06.Bot.substFish.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 150]          ch06.Bot.substFish(SubstV subFn,Object n,Object o)
    Use [PieD.java, 152]             ch06.Bot.substFish(SubstV subFn,Object n,Object o)

ch06.Bot.substFish.subFn   (Parameter)
  Declared as: SubstV
    Define [PieD.java, 150]          ch06.Bot.substFish(SubstV subFn,Object n,Object o)
    Use [PieD.java, 152]             ch06.Bot.substFish(SubstV subFn,Object n,Object o)

ch06.FishD.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 7]            ch06.FishD.equals(Object o)

ch06.PieD.remA.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 137]          ch06.PieD.remA(RemV remFn,Object o)

ch06.PieD.remA.remFn   (Parameter)
  Declared as: RemV
                                                                     Page 164
                         Object Cross Reference Report
===============================================================================
    Define [PieD.java, 137]          ch06.PieD.remA(RemV remFn,Object o)

ch06.PieD.substFish.n   (Parameter)
  Declared as: Object
    Define [PieD.java, 138]          ch06.PieD.substFish(SubstV subFn,Object n,Object o)

ch06.PieD.substFish.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 138]          ch06.PieD.substFish(SubstV subFn,Object n,Object o)

ch06.PieD.substFish.subFn   (Parameter)
  Declared as: SubstV
    Define [PieD.java, 138]          ch06.PieD.substFish(SubstV subFn,Object n,Object o)

ch06.RemV.forBot.f   (Parameter)
  Declared as: Object
    Define [PieD.java, 74]           ch06.RemV.forBot(Object f)

ch06.RemV.forTop.f   (Parameter)
  Declared as: Object
    Define [PieD.java, 78]           ch06.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 79]              ch06.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 80]              ch06.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 82]              ch06.RemV.forTop(Object t,PieD r,Object f)

ch06.RemV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 78]           ch06.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 80]              ch06.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 82]              ch06.RemV.forTop(Object t,PieD r,Object f)

ch06.RemV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 78]           ch06.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 79]              ch06.RemV.forTop(Object t,PieD r,Object f)
    Use [PieD.java, 82]              ch06.RemV.forTop(Object t,PieD r,Object f)

ch06.SalmonFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 23]           ch06.SalmonFish.equals(Object o)
    Use [PieD.java, 25]              ch06.SalmonFish.equals(Object o)

ch06.SubstV.forBot.n   (Parameter)
  Declared as: Object
    Define [PieD.java, 119]          ch06.SubstV.forBot(Object n,Object o)

ch06.SubstV.forBot.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 119]          ch06.SubstV.forBot(Object n,Object o)

ch06.SubstV.forTop.n   (Parameter)
  Declared as: Object
    Define [PieD.java, 123]          ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 125]             ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 125]             ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 127]             ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
                                                                     Page 165
                         Object Cross Reference Report
===============================================================================

ch06.SubstV.forTop.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 123]          ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 124]             ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 125]             ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 127]             ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)

ch06.SubstV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 123]          ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 125]             ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 127]             ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)

ch06.SubstV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 123]          ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 124]             ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Use [PieD.java, 127]             ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)

ch06.Top.r   (Variable)
  Declared as: PieD
    Define [PieD.java, 160]          ch06.Top
    Set [PieD.java, 164]             ch06.Top.Top(Object t,PieD r)
    Use [PieD.java, 169]             ch06.Top.remA(RemV remFn,Object f)
    Use [PieD.java, 174]             ch06.Top.substFish(SubstV subFn,Object n,Object o)

ch06.Top.remA.f   (Parameter)
  Declared as: Object
    Define [PieD.java, 167]          ch06.Top.remA(RemV remFn,Object f)
    Use [PieD.java, 169]             ch06.Top.remA(RemV remFn,Object f)

ch06.Top.remA.remFn   (Parameter)
  Declared as: RemV
    Define [PieD.java, 167]          ch06.Top.remA(RemV remFn,Object f)
    Use [PieD.java, 169]             ch06.Top.remA(RemV remFn,Object f)

ch06.Top.substFish.n   (Parameter)
  Declared as: Object
    Define [PieD.java, 172]          ch06.Top.substFish(SubstV subFn,Object n,Object o)
    Use [PieD.java, 174]             ch06.Top.substFish(SubstV subFn,Object n,Object o)

ch06.Top.substFish.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 172]          ch06.Top.substFish(SubstV subFn,Object n,Object o)
    Use [PieD.java, 174]             ch06.Top.substFish(SubstV subFn,Object n,Object o)

ch06.Top.substFish.subFn   (Parameter)
  Declared as: SubstV
    Define [PieD.java, 172]          ch06.Top.substFish(SubstV subFn,Object n,Object o)
    Use [PieD.java, 174]             ch06.Top.substFish(SubstV subFn,Object n,Object o)

ch06.Top.t   (Variable)
  Declared as: Object
    Define [PieD.java, 159]          ch06.Top
    Set [PieD.java, 163]             ch06.Top.Top(Object t,PieD r)
                                                                     Page 166
                         Object Cross Reference Report
===============================================================================
    Use [PieD.java, 169]             ch06.Top.remA(RemV remFn,Object f)
    Use [PieD.java, 174]             ch06.Top.substFish(SubstV subFn,Object n,Object o)

ch06.Top.Top.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 161]          ch06.Top.Top(Object t,PieD r)
    Use [PieD.java, 164]             ch06.Top.Top(Object t,PieD r)

ch06.Top.Top.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 161]          ch06.Top.Top(Object t,PieD r)
    Use [PieD.java, 163]             ch06.Top.Top(Object t,PieD r)

ch06.TunaFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 33]           ch06.TunaFish.equals(Object o)
    Use [PieD.java, 35]              ch06.TunaFish.equals(Object o)

ch061.AnchovyFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 13]           ch061.AnchovyFish.equals(Object o)
    Use [PieD.java, 15]              ch061.AnchovyFish.equals(Object o)

ch061.Bot.Bot._r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 96]           ch061.Bot.Bot(Object _t,PieD _r)
    Use [PieD.java, 99]              ch061.Bot.Bot(Object _t,PieD _r)

ch061.Bot.Bot._t   (Parameter)
  Declared as: Object
    Define [PieD.java, 96]           ch061.Bot.Bot(Object _t,PieD _r)
    Use [PieD.java, 98]              ch061.Bot.Bot(Object _t,PieD _r)

ch061.Bot.r   (Variable)
  Declared as: PieD
    Define [PieD.java, 95]           ch061.Bot
    Set [PieD.java, 99]              ch061.Bot.Bot(Object _t,PieD _r)
    Use [PieD.java, 104]             ch061.Bot.remA(RemV remFn)
    Use [PieD.java, 110]             ch061.Bot.substFish(SubstV subFn)

ch061.Bot.remA.remFn   (Parameter)
  Declared as: RemV
    Define [PieD.java, 102]          ch061.Bot.remA(RemV remFn)
    Use [PieD.java, 104]             ch061.Bot.remA(RemV remFn)

ch061.Bot.substFish.subFn   (Parameter)
  Declared as: SubstV
    Define [PieD.java, 108]          ch061.Bot.substFish(SubstV subFn)
    Use [PieD.java, 110]             ch061.Bot.substFish(SubstV subFn)

ch061.Bot.t   (Variable)
  Declared as: Object
    Define [PieD.java, 94]           ch061.Bot
    Set [PieD.java, 98]              ch061.Bot.Bot(Object _t,PieD _r)
    Use [PieD.java, 104]             ch061.Bot.remA(RemV remFn)
    Use [PieD.java, 110]             ch061.Bot.substFish(SubstV subFn)
                                                                     Page 167
                         Object Cross Reference Report
===============================================================================

ch061.FishD.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 7]            ch061.FishD.equals(Object o)

ch061.PieD.remA.remFn   (Parameter)
  Declared as: RemV
    Define [PieD.java, 88]           ch061.PieD.remA(RemV remFn)

ch061.PieD.substFish.subFn   (Parameter)
  Declared as: SubstV
    Define [PieD.java, 89]           ch061.PieD.substFish(SubstV subFn)

ch061.RemV.forBot.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 48]           ch061.RemV.forBot(Object t,PieD r)
    Use [PieD.java, 49]              ch061.RemV.forBot(Object t,PieD r)

ch061.RemV.forBot.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 48]           ch061.RemV.forBot(Object t,PieD r)
    Use [PieD.java, 49]              ch061.RemV.forBot(Object t,PieD r)

ch061.RemV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 52]           ch061.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 54]              ch061.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 56]              ch061.RemV.forTop(Object t,PieD r)

ch061.RemV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 52]           ch061.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 53]              ch061.RemV.forTop(Object t,PieD r)

ch061.RemV.o   (Variable)
  Declared as: Object
    Define [PieD.java, 43]           ch061.RemV
    Set [PieD.java, 46]              ch061.RemV.RemV(Object _o)
    Use [PieD.java, 53]              ch061.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 56]              ch061.RemV.forTop(Object t,PieD r)

ch061.RemV.RemV._o   (Parameter)
  Declared as: Object
    Define [PieD.java, 44]           ch061.RemV.RemV(Object _o)
    Use [PieD.java, 46]              ch061.RemV.RemV(Object _o)

ch061.SalmonFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 23]           ch061.SalmonFish.equals(Object o)
    Use [PieD.java, 25]              ch061.SalmonFish.equals(Object o)

ch061.SubstV.forBot.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 70]           ch061.SubstV.forBot(Object t,PieD r)
    Use [PieD.java, 72]              ch061.SubstV.forBot(Object t,PieD r)
                                                                     Page 168
                         Object Cross Reference Report
===============================================================================

ch061.SubstV.forBot.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 70]           ch061.SubstV.forBot(Object t,PieD r)
    Use [PieD.java, 72]              ch061.SubstV.forBot(Object t,PieD r)

ch061.SubstV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 74]           ch061.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 76]              ch061.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 78]              ch061.SubstV.forTop(Object t,PieD r)

ch061.SubstV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 74]           ch061.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 75]              ch061.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 78]              ch061.SubstV.forTop(Object t,PieD r)

ch061.SubstV.n   (Variable)
  Declared as: Object
    Define [PieD.java, 63]           ch061.SubstV
    Set [PieD.java, 67]              ch061.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 76]              ch061.SubstV.forTop(Object t,PieD r)

ch061.SubstV.o   (Variable)
  Declared as: Object
    Define [PieD.java, 64]           ch061.SubstV
    Set [PieD.java, 68]              ch061.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 75]              ch061.SubstV.forTop(Object t,PieD r)

ch061.SubstV.SubstV._n   (Parameter)
  Declared as: Object
    Define [PieD.java, 65]           ch061.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 67]              ch061.SubstV.SubstV(Object _n,Object _o)

ch061.SubstV.SubstV._o   (Parameter)
  Declared as: Object
    Define [PieD.java, 65]           ch061.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 68]              ch061.SubstV.SubstV(Object _n,Object _o)

ch061.Top.r   (Variable)
  Declared as: PieD
    Define [PieD.java, 118]          ch061.Top
    Set [PieD.java, 122]             ch061.Top.Top(Object t,PieD r)
    Use [PieD.java, 127]             ch061.Top.remA(RemV remFn)
    Use [PieD.java, 132]             ch061.Top.substFish(SubstV subFn)

ch061.Top.remA.remFn   (Parameter)
  Declared as: RemV
    Define [PieD.java, 125]          ch061.Top.remA(RemV remFn)
    Use [PieD.java, 127]             ch061.Top.remA(RemV remFn)

ch061.Top.substFish.subFn   (Parameter)
  Declared as: SubstV
    Define [PieD.java, 130]          ch061.Top.substFish(SubstV subFn)
    Use [PieD.java, 132]             ch061.Top.substFish(SubstV subFn)
                                                                     Page 169
                         Object Cross Reference Report
===============================================================================

ch061.Top.t   (Variable)
  Declared as: Object
    Define [PieD.java, 117]          ch061.Top
    Set [PieD.java, 121]             ch061.Top.Top(Object t,PieD r)
    Use [PieD.java, 127]             ch061.Top.remA(RemV remFn)
    Use [PieD.java, 132]             ch061.Top.substFish(SubstV subFn)

ch061.Top.Top.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 119]          ch061.Top.Top(Object t,PieD r)
    Use [PieD.java, 122]             ch061.Top.Top(Object t,PieD r)

ch061.Top.Top.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 119]          ch061.Top.Top(Object t,PieD r)
    Use [PieD.java, 121]             ch061.Top.Top(Object t,PieD r)

ch061.TunaFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 33]           ch061.TunaFish.equals(Object o)
    Use [PieD.java, 35]              ch061.TunaFish.equals(Object o)

ch062.Bot.accept.ask   (Parameter)
  Declared as: PieVistor1
    Define [PieD.java, 96]           ch062.Bot.accept(PieVistor1 ask)
    Use [PieD.java, 98]              ch062.Bot.accept(PieVistor1 ask)

ch062.LtSubstV.c   (Variable)
  Declared as: int
    Define [PieD.java, 54]           ch062.LtSubstV
    Set [PieD.java, 59]              ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 72]              ch062.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 77]              ch062.LtSubstV.forTop(Object t,PieD r)

ch062.LtSubstV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 70]           ch062.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 74]              ch062.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 77]              ch062.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 79]              ch062.LtSubstV.forTop(Object t,PieD r)

ch062.LtSubstV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 70]           ch062.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 74]              ch062.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 76]              ch062.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 79]              ch062.LtSubstV.forTop(Object t,PieD r)

ch062.LtSubstV.LtSubstV._c   (Parameter)
  Declared as: int
    Define [PieD.java, 57]           ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 59]              ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)

ch062.LtSubstV.LtSubstV._n   (Parameter)
  Declared as: Object
                                                                     Page 170
                         Object Cross Reference Report
===============================================================================
    Define [PieD.java, 57]           ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 60]              ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)

ch062.LtSubstV.LtSubstV._o   (Parameter)
  Declared as: Object
    Define [PieD.java, 57]           ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 61]              ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)

ch062.LtSubstV.n   (Variable)
  Declared as: Object
    Define [PieD.java, 55]           ch062.LtSubstV
    Set [PieD.java, 60]              ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 77]              ch062.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 77]              ch062.LtSubstV.forTop(Object t,PieD r)

ch062.LtSubstV.o   (Variable)
  Declared as: Object
    Define [PieD.java, 56]           ch062.LtSubstV
    Set [PieD.java, 61]              ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 76]              ch062.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 77]              ch062.LtSubstV.forTop(Object t,PieD r)

ch062.PieD.accept.ask   (Parameter)
  Declared as: PieVistor1
    Define [PieD.java, 90]           ch062.PieD.accept(PieVistor1 ask)

ch062.PieVistor1.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 7]            ch062.PieVistor1.forTop(Object t,PieD r)

ch062.PieVistor1.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 7]            ch062.PieVistor1.forTop(Object t,PieD r)

ch062.RemV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 21]           ch062.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 23]              ch062.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 25]              ch062.RemV.forTop(Object t,PieD r)

ch062.RemV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 21]           ch062.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 22]              ch062.RemV.forTop(Object t,PieD r)

ch062.RemV.o   (Variable)
  Declared as: Object
    Define [PieD.java, 11]           ch062.RemV
    Set [PieD.java, 14]              ch062.RemV.RemV(Object _o)
    Use [PieD.java, 22]              ch062.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 25]              ch062.RemV.forTop(Object t,PieD r)

ch062.RemV.RemV._o   (Parameter)
  Declared as: Object
    Define [PieD.java, 12]           ch062.RemV.RemV(Object _o)
    Use [PieD.java, 14]              ch062.RemV.RemV(Object _o)
                                                                     Page 171
                         Object Cross Reference Report
===============================================================================

ch062.SubstV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 43]           ch062.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 45]              ch062.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 47]              ch062.SubstV.forTop(Object t,PieD r)

ch062.SubstV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 43]           ch062.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 44]              ch062.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 47]              ch062.SubstV.forTop(Object t,PieD r)

ch062.SubstV.n   (Variable)
  Declared as: Object
    Define [PieD.java, 32]           ch062.SubstV
    Set [PieD.java, 36]              ch062.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 45]              ch062.SubstV.forTop(Object t,PieD r)

ch062.SubstV.o   (Variable)
  Declared as: Object
    Define [PieD.java, 33]           ch062.SubstV
    Set [PieD.java, 37]              ch062.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 44]              ch062.SubstV.forTop(Object t,PieD r)

ch062.SubstV.SubstV._n   (Parameter)
  Declared as: Object
    Define [PieD.java, 34]           ch062.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 36]              ch062.SubstV.SubstV(Object _n,Object _o)

ch062.SubstV.SubstV._o   (Parameter)
  Declared as: Object
    Define [PieD.java, 34]           ch062.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 37]              ch062.SubstV.SubstV(Object _n,Object _o)

ch062.Top.accept.ask   (Parameter)
  Declared as: PieVistor1
    Define [PieD.java, 114]          ch062.Top.accept(PieVistor1 ask)
    Use [PieD.java, 116]             ch062.Top.accept(PieVistor1 ask)

ch062.Top.r   (Variable)
  Declared as: PieD
    Define [PieD.java, 107]          ch062.Top
    Set [PieD.java, 111]             ch062.Top.Top(Object t,PieD r)
    Use [PieD.java, 116]             ch062.Top.accept(PieVistor1 ask)

ch062.Top.t   (Variable)
  Declared as: Object
    Define [PieD.java, 106]          ch062.Top
    Set [PieD.java, 110]             ch062.Top.Top(Object t,PieD r)
    Use [PieD.java, 116]             ch062.Top.accept(PieVistor1 ask)

ch062.Top.Top.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 108]          ch062.Top.Top(Object t,PieD r)
    Use [PieD.java, 111]             ch062.Top.Top(Object t,PieD r)
                                                                     Page 172
                         Object Cross Reference Report
===============================================================================

ch062.Top.Top.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 108]          ch062.Top.Top(Object t,PieD r)
    Use [PieD.java, 110]             ch062.Top.Top(Object t,PieD r)

ch07.Apple.equals.o   (Parameter)
  Declared as: Object
    Define [FruitD.java, 12]         ch07.Apple.equals(Object o)
    Use [FruitD.java, 13]            ch07.Apple.equals(Object o)

ch07.BHasFruitV.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 161]         ch07.BHasFruitV.forFlat(FruitD f,TreeD t)

ch07.BHasFruitV.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 161]         ch07.BHasFruitV.forFlat(FruitD f,TreeD t)

ch07.BHasFruitV.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 167]         ch07.BHasFruitV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 169]            ch07.BHasFruitV.forSplit(TreeD l,TreeD t)

ch07.BHasFruitV.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 167]         ch07.BHasFruitV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 169]            ch07.BHasFruitV.forSplit(TreeD l,TreeD t)

ch07.BIsFlatV.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 107]         ch07.BIsFlatV.forFlat(FruitD f,TreeD t)

ch07.BIsFlatV.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 107]         ch07.BIsFlatV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 109]            ch07.BIsFlatV.forFlat(FruitD f,TreeD t)

ch07.BIsFlatV.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 113]         ch07.BIsFlatV.forSplit(TreeD l,TreeD t)

ch07.BIsFlatV.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 113]         ch07.BIsFlatV.forSplit(TreeD l,TreeD t)

ch07.BIsSplitV.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 130]         ch07.BIsSplitV.forFlat(FruitD f,TreeD t)

ch07.BIsSplitV.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 130]         ch07.BIsSplitV.forFlat(FruitD f,TreeD t)

ch07.BIsSplitV.forSplit.l   (Parameter)
  Declared as: TreeD
                                                                     Page 173
                         Object Cross Reference Report
===============================================================================
    Define [TreeD.java, 136]         ch07.BIsSplitV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 138]            ch07.BIsSplitV.forSplit(TreeD l,TreeD t)

ch07.BIsSplitV.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 136]         ch07.BIsSplitV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 138]            ch07.BIsSplitV.forSplit(TreeD l,TreeD t)

ch07.BTreeVisitorI.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 94]          ch07.BTreeVisitorI.forFlat(FruitD f,TreeD t)

ch07.BTreeVisitorI.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 94]          ch07.BTreeVisitorI.forFlat(FruitD f,TreeD t)

ch07.BTreeVisitorI.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 95]          ch07.BTreeVisitorI.forSplit(TreeD l,TreeD t)

ch07.BTreeVisitorI.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 95]          ch07.BTreeVisitorI.forSplit(TreeD l,TreeD t)

ch07.Bud.accept.ask   (Parameter)
  Declared as: BTreeVisitorI
    Define [TreeD.java, 12]          ch07.Bud.accept(BTreeVisitorI ask)
    Use [TreeD.java, 14]             ch07.Bud.accept(BTreeVisitorI ask)

ch07.Bud.accept.ask   (Parameter)
  Declared as: ITreeVisitorI
    Define [TreeD.java, 18]          ch07.Bud.accept(ITreeVisitorI ask)
    Use [TreeD.java, 20]             ch07.Bud.accept(ITreeVisitorI ask)

ch07.Bud.accept.ask   (Parameter)
  Declared as: TTreeVisitorI
    Define [TreeD.java, 24]          ch07.Bud.accept(TTreeVisitorI ask)
    Use [TreeD.java, 26]             ch07.Bud.accept(TTreeVisitorI ask)

ch07.Fig.equals.o   (Parameter)
  Declared as: Object
    Define [FruitD.java, 30]         ch07.Fig.equals(Object o)
    Use [FruitD.java, 31]            ch07.Fig.equals(Object o)

ch07.Flat.accept.ask   (Parameter)
  Declared as: BTreeVisitorI
    Define [TreeD.java, 43]          ch07.Flat.accept(BTreeVisitorI ask)
    Use [TreeD.java, 45]             ch07.Flat.accept(BTreeVisitorI ask)

ch07.Flat.accept.ask   (Parameter)
  Declared as: ITreeVisitorI
    Define [TreeD.java, 49]          ch07.Flat.accept(ITreeVisitorI ask)
    Use [TreeD.java, 51]             ch07.Flat.accept(ITreeVisitorI ask)

ch07.Flat.accept.ask   (Parameter)
  Declared as: TTreeVisitorI
                                                                     Page 174
                         Object Cross Reference Report
===============================================================================
    Define [TreeD.java, 55]          ch07.Flat.accept(TTreeVisitorI ask)
    Use [TreeD.java, 57]             ch07.Flat.accept(TTreeVisitorI ask)

ch07.Flat.f   (Variable)
  Declared as: FruitD
    Define [TreeD.java, 33]          ch07.Flat
    Set [TreeD.java, 38]             ch07.Flat.Flat(FruitD _f,TreeD _t)
    Use [TreeD.java, 45]             ch07.Flat.accept(BTreeVisitorI ask)
    Use [TreeD.java, 51]             ch07.Flat.accept(ITreeVisitorI ask)
    Use [TreeD.java, 57]             ch07.Flat.accept(TTreeVisitorI ask)

ch07.Flat.Flat._f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 36]          ch07.Flat.Flat(FruitD _f,TreeD _t)
    Use [TreeD.java, 38]             ch07.Flat.Flat(FruitD _f,TreeD _t)

ch07.Flat.Flat._t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 36]          ch07.Flat.Flat(FruitD _f,TreeD _t)
    Use [TreeD.java, 39]             ch07.Flat.Flat(FruitD _f,TreeD _t)

ch07.Flat.t   (Variable)
  Declared as: TreeD
    Define [TreeD.java, 34]          ch07.Flat
    Set [TreeD.java, 39]             ch07.Flat.Flat(FruitD _f,TreeD _t)
    Use [TreeD.java, 45]             ch07.Flat.accept(BTreeVisitorI ask)
    Use [TreeD.java, 51]             ch07.Flat.accept(ITreeVisitorI ask)
    Use [TreeD.java, 57]             ch07.Flat.accept(TTreeVisitorI ask)

ch07.IHeightV.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 182]         ch07.IHeightV.forFlat(FruitD f,TreeD t)

ch07.IHeightV.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 182]         ch07.IHeightV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 184]            ch07.IHeightV.forFlat(FruitD f,TreeD t)

ch07.IHeightV.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 188]         ch07.IHeightV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 192]            ch07.IHeightV.forSplit(TreeD l,TreeD t)

ch07.IHeightV.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 188]         ch07.IHeightV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 192]            ch07.IHeightV.forSplit(TreeD l,TreeD t)

ch07.IOccursV.a   (Variable)
  Declared as: FruitD
    Define [TreeD.java, 199]         ch07.IOccursV
    Set [TreeD.java, 202]            ch07.IOccursV.IOccursV(FruitD _a)
    Use [TreeD.java, 214]            ch07.IOccursV.forFlat(FruitD f,TreeD t)

ch07.IOccursV.forFlat.f   (Parameter)
  Declared as: FruitD
                                                                     Page 175
                         Object Cross Reference Report
===============================================================================
    Define [TreeD.java, 212]         ch07.IOccursV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 214]            ch07.IOccursV.forFlat(FruitD f,TreeD t)

ch07.IOccursV.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 212]         ch07.IOccursV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 215]            ch07.IOccursV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 218]            ch07.IOccursV.forFlat(FruitD f,TreeD t)

ch07.IOccursV.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 224]         ch07.IOccursV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 226]            ch07.IOccursV.forSplit(TreeD l,TreeD t)

ch07.IOccursV.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 224]         ch07.IOccursV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 226]            ch07.IOccursV.forSplit(TreeD l,TreeD t)

ch07.IOccursV.IOccursV._a   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 200]         ch07.IOccursV.IOccursV(FruitD _a)
    Use [TreeD.java, 202]            ch07.IOccursV.IOccursV(FruitD _a)

ch07.ITreeVisitorI.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 147]         ch07.ITreeVisitorI.forFlat(FruitD f,TreeD t)

ch07.ITreeVisitorI.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 147]         ch07.ITreeVisitorI.forFlat(FruitD f,TreeD t)

ch07.ITreeVisitorI.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 148]         ch07.ITreeVisitorI.forSplit(TreeD l,TreeD t)

ch07.ITreeVisitorI.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 148]         ch07.ITreeVisitorI.forSplit(TreeD l,TreeD t)

ch07.Lemon.equals.o   (Parameter)
  Declared as: Object
    Define [FruitD.java, 24]         ch07.Lemon.equals(Object o)
    Use [FruitD.java, 25]            ch07.Lemon.equals(Object o)

ch07.Peach.equals.o   (Parameter)
  Declared as: Object
    Define [FruitD.java, 6]          ch07.Peach.equals(Object o)
    Use [FruitD.java, 7]             ch07.Peach.equals(Object o)

ch07.Pear.equals.o   (Parameter)
  Declared as: Object
    Define [FruitD.java, 18]         ch07.Pear.equals(Object o)
    Use [FruitD.java, 19]            ch07.Pear.equals(Object o)
                                                                     Page 176
                         Object Cross Reference Report
===============================================================================

ch07.Split.accept.ask   (Parameter)
  Declared as: BTreeVisitorI
    Define [TreeD.java, 74]          ch07.Split.accept(BTreeVisitorI ask)
    Use [TreeD.java, 76]             ch07.Split.accept(BTreeVisitorI ask)

ch07.Split.accept.ask   (Parameter)
  Declared as: ITreeVisitorI
    Define [TreeD.java, 80]          ch07.Split.accept(ITreeVisitorI ask)
    Use [TreeD.java, 82]             ch07.Split.accept(ITreeVisitorI ask)

ch07.Split.accept.ask   (Parameter)
  Declared as: TTreeVisitorI
    Define [TreeD.java, 86]          ch07.Split.accept(TTreeVisitorI ask)
    Use [TreeD.java, 88]             ch07.Split.accept(TTreeVisitorI ask)

ch07.Split.l   (Variable)
  Declared as: TreeD
    Define [TreeD.java, 65]          ch07.Split
    Set [TreeD.java, 69]             ch07.Split.Split(TreeD _l,TreeD _t)
    Use [TreeD.java, 76]             ch07.Split.accept(BTreeVisitorI ask)
    Use [TreeD.java, 82]             ch07.Split.accept(ITreeVisitorI ask)
    Use [TreeD.java, 88]             ch07.Split.accept(TTreeVisitorI ask)

ch07.Split.Split._l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 67]          ch07.Split.Split(TreeD _l,TreeD _t)
    Use [TreeD.java, 69]             ch07.Split.Split(TreeD _l,TreeD _t)

ch07.Split.Split._t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 67]          ch07.Split.Split(TreeD _l,TreeD _t)
    Use [TreeD.java, 70]             ch07.Split.Split(TreeD _l,TreeD _t)

ch07.Split.t   (Variable)
  Declared as: TreeD
    Define [TreeD.java, 66]          ch07.Split
    Set [TreeD.java, 70]             ch07.Split.Split(TreeD _l,TreeD _t)
    Use [TreeD.java, 76]             ch07.Split.accept(BTreeVisitorI ask)
    Use [TreeD.java, 82]             ch07.Split.accept(ITreeVisitorI ask)
    Use [TreeD.java, 88]             ch07.Split.accept(TTreeVisitorI ask)

ch07.TreeD.accept.ask   (Parameter)
  Declared as: BTreeVisitorI
    Define [TreeD.java, 4]           ch07.TreeD.accept(BTreeVisitorI ask)

ch07.TreeD.accept.ask   (Parameter)
  Declared as: ITreeVisitorI
    Define [TreeD.java, 5]           ch07.TreeD.accept(ITreeVisitorI ask)

ch07.TreeD.accept.ask   (Parameter)
  Declared as: TTreeVisitorI
    Define [TreeD.java, 6]           ch07.TreeD.accept(TTreeVisitorI ask)

ch07.TSubstsV.forFlat.f   (Parameter)
  Declared as: FruitD
                                                                     Page 177
                         Object Cross Reference Report
===============================================================================
    Define [TreeD.java, 254]         ch07.TSubstsV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 256]            ch07.TSubstsV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 259]            ch07.TSubstsV.forFlat(FruitD f,TreeD t)

ch07.TSubstsV.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 254]         ch07.TSubstsV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 257]            ch07.TSubstsV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 259]            ch07.TSubstsV.forFlat(FruitD f,TreeD t)

ch07.TSubstsV.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 264]         ch07.TSubstsV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 266]            ch07.TSubstsV.forSplit(TreeD l,TreeD t)

ch07.TSubstsV.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 264]         ch07.TSubstsV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 266]            ch07.TSubstsV.forSplit(TreeD l,TreeD t)

ch07.TSubstsV.n   (Variable)
  Declared as: FruitD
    Define [TreeD.java, 240]         ch07.TSubstsV
    Set [TreeD.java, 244]            ch07.TSubstsV.TSubstsV(FruitD _n,FruitD _o)
    Use [TreeD.java, 257]            ch07.TSubstsV.forFlat(FruitD f,TreeD t)

ch07.TSubstsV.o   (Variable)
  Declared as: FruitD
    Define [TreeD.java, 241]         ch07.TSubstsV
    Set [TreeD.java, 245]            ch07.TSubstsV.TSubstsV(FruitD _n,FruitD _o)
    Use [TreeD.java, 256]            ch07.TSubstsV.forFlat(FruitD f,TreeD t)

ch07.TSubstsV.TSubstsV._n   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 242]         ch07.TSubstsV.TSubstsV(FruitD _n,FruitD _o)
    Use [TreeD.java, 244]            ch07.TSubstsV.TSubstsV(FruitD _n,FruitD _o)

ch07.TSubstsV.TSubstsV._o   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 242]         ch07.TSubstsV.TSubstsV(FruitD _n,FruitD _o)
    Use [TreeD.java, 245]            ch07.TSubstsV.TSubstsV(FruitD _n,FruitD _o)

ch07.TTreeVisitorI.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 233]         ch07.TTreeVisitorI.forFlat(FruitD f,TreeD t)

ch07.TTreeVisitorI.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 233]         ch07.TTreeVisitorI.forFlat(FruitD f,TreeD t)

ch07.TTreeVisitorI.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 234]         ch07.TTreeVisitorI.forSplit(TreeD l,TreeD t)

ch07.TTreeVisitorI.forSplit.t   (Parameter)
  Declared as: TreeD
                                                                     Page 178
                         Object Cross Reference Report
===============================================================================
    Define [TreeD.java, 234]         ch07.TTreeVisitorI.forSplit(TreeD l,TreeD t)

ch071.Apple.equals.o   (Parameter)
  Declared as: Object
    Define [FruitD.java, 12]         ch071.Apple.equals(Object o)
    Use [FruitD.java, 13]            ch071.Apple.equals(Object o)

ch071.Bud.accept.ask   (Parameter)
  Declared as: TreeVisitorI
    Define [TreeD.java, 11]          ch071.Bud.accept(TreeVisitorI ask)

ch071.Fig.equals.o   (Parameter)
  Declared as: Object
    Define [FruitD.java, 30]         ch071.Fig.equals(Object o)
    Use [FruitD.java, 31]            ch071.Fig.equals(Object o)

ch071.Flat.accept.ask   (Parameter)
  Declared as: TreeVisitorI
    Define [TreeD.java, 32]          ch071.Flat.accept(TreeVisitorI ask)
    Use [TreeD.java, 34]             ch071.Flat.accept(TreeVisitorI ask)

ch071.Flat.f   (Variable)
  Declared as: FruitD
    Define [TreeD.java, 22]          ch071.Flat
    Set [TreeD.java, 27]             ch071.Flat.Flat(FruitD _f,TreeD _t)
    Use [TreeD.java, 34]             ch071.Flat.accept(TreeVisitorI ask)

ch071.Flat.Flat._f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 25]          ch071.Flat.Flat(FruitD _f,TreeD _t)
    Use [TreeD.java, 27]             ch071.Flat.Flat(FruitD _f,TreeD _t)

ch071.Flat.Flat._t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 25]          ch071.Flat.Flat(FruitD _f,TreeD _t)
    Use [TreeD.java, 28]             ch071.Flat.Flat(FruitD _f,TreeD _t)

ch071.Flat.t   (Variable)
  Declared as: TreeD
    Define [TreeD.java, 23]          ch071.Flat
    Set [TreeD.java, 28]             ch071.Flat.Flat(FruitD _f,TreeD _t)
    Use [TreeD.java, 34]             ch071.Flat.accept(TreeVisitorI ask)

ch071.HasFruitV.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 127]         ch071.HasFruitV.forFlat(FruitD f,TreeD t)

ch071.HasFruitV.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 127]         ch071.HasFruitV.forFlat(FruitD f,TreeD t)

ch071.HasFruitV.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 133]         ch071.HasFruitV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 135]            ch071.HasFruitV.forSplit(TreeD l,TreeD t)
                                                                     Page 179
                         Object Cross Reference Report
===============================================================================

ch071.HasFruitV.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 133]         ch071.HasFruitV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 135]            ch071.HasFruitV.forSplit(TreeD l,TreeD t)

ch071.IHeightV.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 149]         ch071.IHeightV.forFlat(FruitD f,TreeD t)

ch071.IHeightV.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 149]         ch071.IHeightV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 151]            ch071.IHeightV.forFlat(FruitD f,TreeD t)

ch071.IHeightV.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 155]         ch071.IHeightV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 159]            ch071.IHeightV.forSplit(TreeD l,TreeD t)

ch071.IHeightV.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 155]         ch071.IHeightV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 159]            ch071.IHeightV.forSplit(TreeD l,TreeD t)

ch071.IOccursV.a   (Variable)
  Declared as: FruitD
    Define [TreeD.java, 166]         ch071.IOccursV
    Set [TreeD.java, 169]            ch071.IOccursV.IOccursV(FruitD _a)
    Use [TreeD.java, 181]            ch071.IOccursV.forFlat(FruitD f,TreeD t)

ch071.IOccursV.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 179]         ch071.IOccursV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 181]            ch071.IOccursV.forFlat(FruitD f,TreeD t)

ch071.IOccursV.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 179]         ch071.IOccursV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 182]            ch071.IOccursV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 185]            ch071.IOccursV.forFlat(FruitD f,TreeD t)

ch071.IOccursV.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 191]         ch071.IOccursV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 193]            ch071.IOccursV.forSplit(TreeD l,TreeD t)

ch071.IOccursV.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 191]         ch071.IOccursV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 193]            ch071.IOccursV.forSplit(TreeD l,TreeD t)

ch071.IOccursV.IOccursV._a   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 167]         ch071.IOccursV.IOccursV(FruitD _a)
    Use [TreeD.java, 169]            ch071.IOccursV.IOccursV(FruitD _a)
                                                                     Page 180
                         Object Cross Reference Report
===============================================================================

ch071.IsFlatV.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 75]          ch071.IsFlatV.forFlat(FruitD f,TreeD t)

ch071.IsFlatV.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 75]          ch071.IsFlatV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 77]             ch071.IsFlatV.forFlat(FruitD f,TreeD t)

ch071.IsFlatV.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 81]          ch071.IsFlatV.forSplit(TreeD l,TreeD t)

ch071.IsFlatV.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 81]          ch071.IsFlatV.forSplit(TreeD l,TreeD t)

ch071.IsSplitV.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 100]         ch071.IsSplitV.forFlat(FruitD f,TreeD t)

ch071.IsSplitV.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 100]         ch071.IsSplitV.forFlat(FruitD f,TreeD t)

ch071.IsSplitV.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 106]         ch071.IsSplitV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 108]            ch071.IsSplitV.forSplit(TreeD l,TreeD t)

ch071.IsSplitV.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 106]         ch071.IsSplitV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 109]            ch071.IsSplitV.forSplit(TreeD l,TreeD t)

ch071.Lemon.equals.o   (Parameter)
  Declared as: Object
    Define [FruitD.java, 24]         ch071.Lemon.equals(Object o)
    Use [FruitD.java, 25]            ch071.Lemon.equals(Object o)

ch071.Peach.equals.o   (Parameter)
  Declared as: Object
    Define [FruitD.java, 6]          ch071.Peach.equals(Object o)
    Use [FruitD.java, 7]             ch071.Peach.equals(Object o)

ch071.Pear.equals.o   (Parameter)
  Declared as: Object
    Define [FruitD.java, 18]         ch071.Pear.equals(Object o)
    Use [FruitD.java, 19]            ch071.Pear.equals(Object o)

ch071.Split.accept.ask   (Parameter)
  Declared as: TreeVisitorI
    Define [TreeD.java, 52]          ch071.Split.accept(TreeVisitorI ask)
    Use [TreeD.java, 54]             ch071.Split.accept(TreeVisitorI ask)
                                                                     Page 181
                         Object Cross Reference Report
===============================================================================

ch071.Split.l   (Variable)
  Declared as: TreeD
    Define [TreeD.java, 44]          ch071.Split
    Set [TreeD.java, 48]             ch071.Split.Split(TreeD _l,TreeD _t)
    Use [TreeD.java, 54]             ch071.Split.accept(TreeVisitorI ask)

ch071.Split.Split._l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 46]          ch071.Split.Split(TreeD _l,TreeD _t)
    Use [TreeD.java, 48]             ch071.Split.Split(TreeD _l,TreeD _t)

ch071.Split.Split._t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 46]          ch071.Split.Split(TreeD _l,TreeD _t)
    Use [TreeD.java, 49]             ch071.Split.Split(TreeD _l,TreeD _t)

ch071.Split.t   (Variable)
  Declared as: TreeD
    Define [TreeD.java, 45]          ch071.Split
    Set [TreeD.java, 49]             ch071.Split.Split(TreeD _l,TreeD _t)
    Use [TreeD.java, 54]             ch071.Split.accept(TreeVisitorI ask)

ch071.TreeD.accept.ask   (Parameter)
  Declared as: TreeVisitorI
    Define [TreeD.java, 4]           ch071.TreeD.accept(TreeVisitorI ask)

ch071.TreeVisitorI.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 62]          ch071.TreeVisitorI.forFlat(FruitD f,TreeD t)

ch071.TreeVisitorI.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 62]          ch071.TreeVisitorI.forFlat(FruitD f,TreeD t)

ch071.TreeVisitorI.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 63]          ch071.TreeVisitorI.forSplit(TreeD l,TreeD t)

ch071.TreeVisitorI.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 63]          ch071.TreeVisitorI.forSplit(TreeD l,TreeD t)

ch071.TSubstsV.forFlat.f   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 216]         ch071.TSubstsV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 218]            ch071.TSubstsV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 221]            ch071.TSubstsV.forFlat(FruitD f,TreeD t)

ch071.TSubstsV.forFlat.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 216]         ch071.TSubstsV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 219]            ch071.TSubstsV.forFlat(FruitD f,TreeD t)
    Use [TreeD.java, 221]            ch071.TSubstsV.forFlat(FruitD f,TreeD t)
                                                                     Page 182
                         Object Cross Reference Report
===============================================================================

ch071.TSubstsV.forSplit.l   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 226]         ch071.TSubstsV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 228]            ch071.TSubstsV.forSplit(TreeD l,TreeD t)

ch071.TSubstsV.forSplit.t   (Parameter)
  Declared as: TreeD
    Define [TreeD.java, 226]         ch071.TSubstsV.forSplit(TreeD l,TreeD t)
    Use [TreeD.java, 228]            ch071.TSubstsV.forSplit(TreeD l,TreeD t)

ch071.TSubstsV.n   (Variable)
  Declared as: FruitD
    Define [TreeD.java, 202]         ch071.TSubstsV
    Set [TreeD.java, 206]            ch071.TSubstsV.TSubstsV(FruitD _n,FruitD _o)
    Use [TreeD.java, 219]            ch071.TSubstsV.forFlat(FruitD f,TreeD t)

ch071.TSubstsV.o   (Variable)
  Declared as: FruitD
    Define [TreeD.java, 203]         ch071.TSubstsV
    Set [TreeD.java, 207]            ch071.TSubstsV.TSubstsV(FruitD _n,FruitD _o)
    Use [TreeD.java, 218]            ch071.TSubstsV.forFlat(FruitD f,TreeD t)

ch071.TSubstsV.TSubstsV._n   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 204]         ch071.TSubstsV.TSubstsV(FruitD _n,FruitD _o)
    Use [TreeD.java, 206]            ch071.TSubstsV.TSubstsV(FruitD _n,FruitD _o)

ch071.TSubstsV.TSubstsV._o   (Parameter)
  Declared as: FruitD
    Define [TreeD.java, 204]         ch071.TSubstsV.TSubstsV(FruitD _n,FruitD _o)
    Use [TreeD.java, 207]            ch071.TSubstsV.TSubstsV(FruitD _n,FruitD _o)

ch08.Add.Add._i   (Parameter)
  Declared as: Integer
    Define [SetD.java, 52]           ch08.Add.Add(Integer _i,SetD _s)
    Use [SetD.java, 54]              ch08.Add.Add(Integer _i,SetD _s)

ch08.Add.Add._s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 52]           ch08.Add.Add(Integer _i,SetD _s)
    Use [SetD.java, 55]              ch08.Add.Add(Integer _i,SetD _s)

ch08.Add.diff.t   (Parameter)
  Declared as: SetD
    Define [SetD.java, 74]           ch08.Add.diff(SetD t)
    Use [SetD.java, 76]              ch08.Add.diff(SetD t)
    Use [SetD.java, 77]              ch08.Add.diff(SetD t)
    Use [SetD.java, 79]              ch08.Add.diff(SetD t)

ch08.Add.i   (Variable)
  Declared as: Integer
    Define [SetD.java, 50]           ch08.Add
    Set [SetD.java, 54]              ch08.Add.Add(Integer _i,SetD _s)
    Use [SetD.java, 76]              ch08.Add.diff(SetD t)
    Use [SetD.java, 79]              ch08.Add.diff(SetD t)
                                                                     Page 183
                         Object Cross Reference Report
===============================================================================
    Use [SetD.java, 60]              ch08.Add.mem(Integer n)
    Use [SetD.java, 70]              ch08.Add.plus(SetD t)
    Use [SetD.java, 86]              ch08.Add.prod(SetD t)
    Use [SetD.java, 87]              ch08.Add.prod(SetD t)

ch08.Add.mem.n   (Parameter)
  Declared as: Integer
    Define [SetD.java, 58]           ch08.Add.mem(Integer n)
    Use [SetD.java, 60]              ch08.Add.mem(Integer n)
    Use [SetD.java, 63]              ch08.Add.mem(Integer n)

ch08.Add.plus.t   (Parameter)
  Declared as: SetD
    Define [SetD.java, 68]           ch08.Add.plus(SetD t)
    Use [SetD.java, 70]              ch08.Add.plus(SetD t)

ch08.Add.prod.t   (Parameter)
  Declared as: SetD
    Define [SetD.java, 84]           ch08.Add.prod(SetD t)
    Use [SetD.java, 86]              ch08.Add.prod(SetD t)
    Use [SetD.java, 87]              ch08.Add.prod(SetD t)
    Use [SetD.java, 89]              ch08.Add.prod(SetD t)

ch08.Add.s   (Variable)
  Declared as: SetD
    Define [SetD.java, 51]           ch08.Add
    Set [SetD.java, 55]              ch08.Add.Add(Integer _i,SetD _s)
    Use [SetD.java, 77]              ch08.Add.diff(SetD t)
    Use [SetD.java, 79]              ch08.Add.diff(SetD t)
    Use [SetD.java, 63]              ch08.Add.mem(Integer n)
    Use [SetD.java, 70]              ch08.Add.plus(SetD t)
    Use [SetD.java, 87]              ch08.Add.prod(SetD t)
    Use [SetD.java, 89]              ch08.Add.prod(SetD t)

ch08.Const.accpet.ask   (Parameter)
  Declared as: ExprVisitorI
    Define [ExprD.java, 109]         ch08.Const.accpet(ExprVisitorI ask)
    Use [ExprD.java, 111]            ch08.Const.accpet(ExprVisitorI ask)

ch08.Const.c   (Variable)
  Declared as: Object
    Define [ExprD.java, 103]         ch08.Const
    Set [ExprD.java, 106]            ch08.Const.Const(Object _c)
    Use [ExprD.java, 111]            ch08.Const.accpet(ExprVisitorI ask)

ch08.Const.Const._c   (Parameter)
  Declared as: Object
    Define [ExprD.java, 104]         ch08.Const.Const(Object _c)
    Use [ExprD.java, 106]            ch08.Const.Const(Object _c)

ch08.Diff.accpet.ask   (Parameter)
  Declared as: ExprVisitorI
    Define [ExprD.java, 80]          ch08.Diff.accpet(ExprVisitorI ask)
    Use [ExprD.java, 82]             ch08.Diff.accpet(ExprVisitorI ask)
                                                                     Page 184
                         Object Cross Reference Report
===============================================================================

ch08.Diff.Diff._l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 74]          ch08.Diff.Diff(ExprD _l,ExprD _r)
    Use [ExprD.java, 76]             ch08.Diff.Diff(ExprD _l,ExprD _r)

ch08.Diff.Diff._r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 74]          ch08.Diff.Diff(ExprD _l,ExprD _r)
    Use [ExprD.java, 77]             ch08.Diff.Diff(ExprD _l,ExprD _r)

ch08.Diff.l   (Variable)
  Declared as: ExprD
    Define [ExprD.java, 72]          ch08.Diff
    Set [ExprD.java, 76]             ch08.Diff.Diff(ExprD _l,ExprD _r)
    Use [ExprD.java, 82]             ch08.Diff.accpet(ExprVisitorI ask)

ch08.Diff.r   (Variable)
  Declared as: ExprD
    Define [ExprD.java, 73]          ch08.Diff
    Set [ExprD.java, 77]             ch08.Diff.Diff(ExprD _l,ExprD _r)
    Use [ExprD.java, 82]             ch08.Diff.accpet(ExprVisitorI ask)

ch08.Empty.diff.s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 34]           ch08.Empty.diff(SetD s)

ch08.Empty.mem.i   (Parameter)
  Declared as: Integer
    Define [SetD.java, 22]           ch08.Empty.mem(Integer i)

ch08.Empty.plus.s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 28]           ch08.Empty.plus(SetD s)
    Use [SetD.java, 30]              ch08.Empty.plus(SetD s)

ch08.Empty.prod.s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 40]           ch08.Empty.prod(SetD s)

ch08.ExprD.accpet.ask   (Parameter)
  Declared as: ExprVisitorI
    Define [ExprD.java, 48]          ch08.ExprD.accpet(ExprVisitorI ask)

ch08.ExprVisitorI.forConst.c   (Parameter)
  Declared as: Object
    Define [ExprD.java, 7]           ch08.ExprVisitorI.forConst(Object c)

ch08.ExprVisitorI.forDiff.l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 5]           ch08.ExprVisitorI.forDiff(ExprD l,ExprD r)

ch08.ExprVisitorI.forDiff.r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 5]           ch08.ExprVisitorI.forDiff(ExprD l,ExprD r)
                                                                     Page 185
                         Object Cross Reference Report
===============================================================================

ch08.ExprVisitorI.forPlus.l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 4]           ch08.ExprVisitorI.forPlus(ExprD l,ExprD r)

ch08.ExprVisitorI.forPlus.r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 4]           ch08.ExprVisitorI.forPlus(ExprD l,ExprD r)

ch08.ExprVisitorI.forProd.l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 6]           ch08.ExprVisitorI.forProd(ExprD l,ExprD r)

ch08.ExprVisitorI.forProd.r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 6]           ch08.ExprVisitorI.forProd(ExprD l,ExprD r)

ch08.IntEvalV.diff.l   (Parameter)
  Declared as: Object
    Define [ExprD.java, 39]          ch08.IntEvalV.diff(Object l,Object r)
    Use [ExprD.java, 40]             ch08.IntEvalV.diff(Object l,Object r)

ch08.IntEvalV.diff.r   (Parameter)
  Declared as: Object
    Define [ExprD.java, 39]          ch08.IntEvalV.diff(Object l,Object r)
    Use [ExprD.java, 40]             ch08.IntEvalV.diff(Object l,Object r)

ch08.IntEvalV.forConst.c   (Parameter)
  Declared as: Object
    Define [ExprD.java, 31]          ch08.IntEvalV.forConst(Object c)
    Use [ExprD.java, 33]             ch08.IntEvalV.forConst(Object c)

ch08.IntEvalV.forDiff.l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 19]          ch08.IntEvalV.forDiff(ExprD l,ExprD r)
    Use [ExprD.java, 21]             ch08.IntEvalV.forDiff(ExprD l,ExprD r)

ch08.IntEvalV.forDiff.r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 19]          ch08.IntEvalV.forDiff(ExprD l,ExprD r)
    Use [ExprD.java, 21]             ch08.IntEvalV.forDiff(ExprD l,ExprD r)

ch08.IntEvalV.forPlus.l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 13]          ch08.IntEvalV.forPlus(ExprD l,ExprD r)
    Use [ExprD.java, 15]             ch08.IntEvalV.forPlus(ExprD l,ExprD r)

ch08.IntEvalV.forPlus.r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 13]          ch08.IntEvalV.forPlus(ExprD l,ExprD r)
    Use [ExprD.java, 15]             ch08.IntEvalV.forPlus(ExprD l,ExprD r)

ch08.IntEvalV.forProd.l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 25]          ch08.IntEvalV.forProd(ExprD l,ExprD r)
    Use [ExprD.java, 27]             ch08.IntEvalV.forProd(ExprD l,ExprD r)
                                                                     Page 186
                         Object Cross Reference Report
===============================================================================

ch08.IntEvalV.forProd.r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 25]          ch08.IntEvalV.forProd(ExprD l,ExprD r)
    Use [ExprD.java, 27]             ch08.IntEvalV.forProd(ExprD l,ExprD r)

ch08.IntEvalV.plus.l   (Parameter)
  Declared as: Object
    Define [ExprD.java, 36]          ch08.IntEvalV.plus(Object l,Object r)
    Use [ExprD.java, 37]             ch08.IntEvalV.plus(Object l,Object r)

ch08.IntEvalV.plus.r   (Parameter)
  Declared as: Object
    Define [ExprD.java, 36]          ch08.IntEvalV.plus(Object l,Object r)
    Use [ExprD.java, 37]             ch08.IntEvalV.plus(Object l,Object r)

ch08.IntEvalV.prod.l   (Parameter)
  Declared as: Object
    Define [ExprD.java, 42]          ch08.IntEvalV.prod(Object l,Object r)
    Use [ExprD.java, 43]             ch08.IntEvalV.prod(Object l,Object r)

ch08.IntEvalV.prod.r   (Parameter)
  Declared as: Object
    Define [ExprD.java, 42]          ch08.IntEvalV.prod(Object l,Object r)
    Use [ExprD.java, 43]             ch08.IntEvalV.prod(Object l,Object r)

ch08.Plus.accpet.ask   (Parameter)
  Declared as: ExprVisitorI
    Define [ExprD.java, 64]          ch08.Plus.accpet(ExprVisitorI ask)
    Use [ExprD.java, 66]             ch08.Plus.accpet(ExprVisitorI ask)

ch08.Plus.l   (Variable)
  Declared as: ExprD
    Define [ExprD.java, 56]          ch08.Plus
    Set [ExprD.java, 60]             ch08.Plus.Plus(ExprD _l,ExprD _r)
    Use [ExprD.java, 66]             ch08.Plus.accpet(ExprVisitorI ask)

ch08.Plus.Plus._l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 58]          ch08.Plus.Plus(ExprD _l,ExprD _r)
    Use [ExprD.java, 60]             ch08.Plus.Plus(ExprD _l,ExprD _r)

ch08.Plus.Plus._r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 58]          ch08.Plus.Plus(ExprD _l,ExprD _r)
    Use [ExprD.java, 61]             ch08.Plus.Plus(ExprD _l,ExprD _r)

ch08.Plus.r   (Variable)
  Declared as: ExprD
    Define [ExprD.java, 57]          ch08.Plus
    Set [ExprD.java, 61]             ch08.Plus.Plus(ExprD _l,ExprD _r)
    Use [ExprD.java, 66]             ch08.Plus.accpet(ExprVisitorI ask)

ch08.Prod.accpet.ask   (Parameter)
  Declared as: ExprVisitorI
    Define [ExprD.java, 95]          ch08.Prod.accpet(ExprVisitorI ask)
                                                                     Page 187
                         Object Cross Reference Report
===============================================================================
    Use [ExprD.java, 97]             ch08.Prod.accpet(ExprVisitorI ask)

ch08.Prod.l   (Variable)
  Declared as: ExprD
    Define [ExprD.java, 87]          ch08.Prod
    Set [ExprD.java, 91]             ch08.Prod.Prod(ExprD _l,ExprD _r)
    Use [ExprD.java, 97]             ch08.Prod.accpet(ExprVisitorI ask)

ch08.Prod.Prod._l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 89]          ch08.Prod.Prod(ExprD _l,ExprD _r)
    Use [ExprD.java, 91]             ch08.Prod.Prod(ExprD _l,ExprD _r)

ch08.Prod.Prod._r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 89]          ch08.Prod.Prod(ExprD _l,ExprD _r)
    Use [ExprD.java, 92]             ch08.Prod.Prod(ExprD _l,ExprD _r)

ch08.Prod.r   (Variable)
  Declared as: ExprD
    Define [ExprD.java, 88]          ch08.Prod
    Set [ExprD.java, 92]             ch08.Prod.Prod(ExprD _l,ExprD _r)
    Use [ExprD.java, 97]             ch08.Prod.accpet(ExprVisitorI ask)

ch08.SetD.add.i   (Parameter)
  Declared as: Integer
    Define [SetD.java, 4]            ch08.SetD.add(Integer i)
    Use [SetD.java, 5]               ch08.SetD.add(Integer i)
    Use [SetD.java, 8]               ch08.SetD.add(Integer i)

ch08.SetD.diff.s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 14]           ch08.SetD.diff(SetD s)

ch08.SetD.mem.i   (Parameter)
  Declared as: Integer
    Define [SetD.java, 12]           ch08.SetD.mem(Integer i)

ch08.SetD.plus.s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 13]           ch08.SetD.plus(SetD s)

ch08.SetD.prod.s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 15]           ch08.SetD.prod(SetD s)

ch08.SetEvalV.diff.l   (Parameter)
  Declared as: Object
    Define [SetD.java, 103]          ch08.SetEvalV.diff(Object l,Object r)
    Use [SetD.java, 105]             ch08.SetEvalV.diff(Object l,Object r)

ch08.SetEvalV.diff.r   (Parameter)
  Declared as: Object
    Define [SetD.java, 103]          ch08.SetEvalV.diff(Object l,Object r)
    Use [SetD.java, 105]             ch08.SetEvalV.diff(Object l,Object r)
                                                                     Page 188
                         Object Cross Reference Report
===============================================================================

ch08.SetEvalV.plus.l   (Parameter)
  Declared as: Object
    Define [SetD.java, 98]           ch08.SetEvalV.plus(Object l,Object r)
    Use [SetD.java, 100]             ch08.SetEvalV.plus(Object l,Object r)

ch08.SetEvalV.plus.r   (Parameter)
  Declared as: Object
    Define [SetD.java, 98]           ch08.SetEvalV.plus(Object l,Object r)
    Use [SetD.java, 100]             ch08.SetEvalV.plus(Object l,Object r)

ch08.SetEvalV.prod.l   (Parameter)
  Declared as: Object
    Define [SetD.java, 108]          ch08.SetEvalV.prod(Object l,Object r)
    Use [SetD.java, 110]             ch08.SetEvalV.prod(Object l,Object r)

ch08.SetEvalV.prod.r   (Parameter)
  Declared as: Object
    Define [SetD.java, 108]          ch08.SetEvalV.prod(Object l,Object r)
    Use [SetD.java, 110]             ch08.SetEvalV.prod(Object l,Object r)

ch0801That.Bot.accept.ask   (Parameter)
  Declared as: PieVistor1
    Define [PieDUpdate.java, 13]     ch0801That.Bot.accept(PieVistor1 ask)
    Use [PieDUpdate.java, 15]        ch0801That.Bot.accept(PieVistor1 ask)

ch0801That.LtSubstV.c   (Variable)
  Declared as: int
    Define [PieDUpdate.java, 92]     ch0801That.LtSubstV
    Set [PieDUpdate.java, 97]        ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieDUpdate.java, 110]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 115]       ch0801That.LtSubstV.forTop(Top that)

ch0801That.LtSubstV.forBot.that   (Parameter)
  Declared as: Bot
    Define [PieDUpdate.java, 102]    ch0801That.LtSubstV.forBot(Bot that)

ch0801That.LtSubstV.forTop.that   (Parameter)
  Declared as: Top
    Define [PieDUpdate.java, 108]    ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 112]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 112]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 114]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 115]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 117]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 117]       ch0801That.LtSubstV.forTop(Top that)

ch0801That.LtSubstV.LtSubstV._c   (Parameter)
  Declared as: int
    Define [PieDUpdate.java, 95]     ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieDUpdate.java, 97]        ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)

ch0801That.LtSubstV.LtSubstV._n   (Parameter)
  Declared as: Object
    Define [PieDUpdate.java, 95]     ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieDUpdate.java, 98]        ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
                                                                     Page 189
                         Object Cross Reference Report
===============================================================================

ch0801That.LtSubstV.LtSubstV._o   (Parameter)
  Declared as: Object
    Define [PieDUpdate.java, 95]     ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieDUpdate.java, 99]        ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)

ch0801That.LtSubstV.n   (Variable)
  Declared as: Object
    Define [PieDUpdate.java, 93]     ch0801That.LtSubstV
    Set [PieDUpdate.java, 98]        ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieDUpdate.java, 115]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 115]       ch0801That.LtSubstV.forTop(Top that)

ch0801That.LtSubstV.o   (Variable)
  Declared as: Object
    Define [PieDUpdate.java, 94]     ch0801That.LtSubstV
    Set [PieDUpdate.java, 99]        ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieDUpdate.java, 114]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 115]       ch0801That.LtSubstV.forTop(Top that)

ch0801That.PieDUpdate.accept.ask   (Parameter)
  Declared as: PieVistor1
    Define [PieDUpdate.java, 8]      ch0801That.PieDUpdate.accept(PieVistor1 ask)

ch0801That.PieVistor1.forBot.that   (Parameter)
  Declared as: Bot
    Define [PieDUpdate.java, 44]     ch0801That.PieVistor1.forBot(Bot that)

ch0801That.PieVistor1.forTop.that   (Parameter)
  Declared as: Top
    Define [PieDUpdate.java, 45]     ch0801That.PieVistor1.forTop(Top that)

ch0801That.RemV.forBot.that   (Parameter)
  Declared as: Bot
    Define [PieDUpdate.java, 55]     ch0801That.RemV.forBot(Bot that)

ch0801That.RemV.forTop.that   (Parameter)
  Declared as: Top
    Define [PieDUpdate.java, 60]     ch0801That.RemV.forTop(Top that)
    Use [PieDUpdate.java, 61]        ch0801That.RemV.forTop(Top that)
    Use [PieDUpdate.java, 62]        ch0801That.RemV.forTop(Top that)
    Use [PieDUpdate.java, 64]        ch0801That.RemV.forTop(Top that)
    Use [PieDUpdate.java, 64]        ch0801That.RemV.forTop(Top that)

ch0801That.RemV.o   (Variable)
  Declared as: Object
    Define [PieDUpdate.java, 49]     ch0801That.RemV
    Set [PieDUpdate.java, 52]        ch0801That.RemV.RemV(Object _o)
    Use [PieDUpdate.java, 61]        ch0801That.RemV.forTop(Top that)

ch0801That.RemV.RemV._o   (Parameter)
  Declared as: Object
    Define [PieDUpdate.java, 50]     ch0801That.RemV.RemV(Object _o)
    Use [PieDUpdate.java, 52]        ch0801That.RemV.RemV(Object _o)
                                                                     Page 190
                         Object Cross Reference Report
===============================================================================

ch0801That.SubstV.forBot.that   (Parameter)
  Declared as: Bot
    Define [PieDUpdate.java, 77]     ch0801That.SubstV.forBot(Bot that)

ch0801That.SubstV.forTop.that   (Parameter)
  Declared as: Top
    Define [PieDUpdate.java, 81]     ch0801That.SubstV.forTop(Top that)
    Use [PieDUpdate.java, 82]        ch0801That.SubstV.forTop(Top that)
    Use [PieDUpdate.java, 83]        ch0801That.SubstV.forTop(Top that)
    Use [PieDUpdate.java, 85]        ch0801That.SubstV.forTop(Top that)
    Use [PieDUpdate.java, 85]        ch0801That.SubstV.forTop(Top that)

ch0801That.SubstV.n   (Variable)
  Declared as: Object
    Define [PieDUpdate.java, 70]     ch0801That.SubstV
    Set [PieDUpdate.java, 74]        ch0801That.SubstV.SubstV(Object _n,Object _o)
    Use [PieDUpdate.java, 83]        ch0801That.SubstV.forTop(Top that)

ch0801That.SubstV.o   (Variable)
  Declared as: Object
    Define [PieDUpdate.java, 71]     ch0801That.SubstV
    Set [PieDUpdate.java, 75]        ch0801That.SubstV.SubstV(Object _n,Object _o)
    Use [PieDUpdate.java, 82]        ch0801That.SubstV.forTop(Top that)

ch0801That.SubstV.SubstV._n   (Parameter)
  Declared as: Object
    Define [PieDUpdate.java, 72]     ch0801That.SubstV.SubstV(Object _n,Object _o)
    Use [PieDUpdate.java, 74]        ch0801That.SubstV.SubstV(Object _n,Object _o)

ch0801That.SubstV.SubstV._o   (Parameter)
  Declared as: Object
    Define [PieDUpdate.java, 72]     ch0801That.SubstV.SubstV(Object _n,Object _o)
    Use [PieDUpdate.java, 75]        ch0801That.SubstV.SubstV(Object _n,Object _o)

ch0801That.TestThat.main.args   (Parameter)
  Declared as: String[]
    Define [TestThat.java, 4]        ch0801That.TestThat.main(String[] args)

ch0801That.Top.accept.ask   (Parameter)
  Declared as: PieVistor1
    Define [PieDUpdate.java, 33]     ch0801That.Top.accept(PieVistor1 ask)
    Use [PieDUpdate.java, 35]        ch0801That.Top.accept(PieVistor1 ask)

ch0801That.Top.r   (Variable)
  Declared as: PieDUpdate
    Use [PieDUpdate.java, 112]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 115]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 117]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 62]        ch0801That.RemV.forTop(Top that)
    Use [PieDUpdate.java, 64]        ch0801That.RemV.forTop(Top that)
    Use [PieDUpdate.java, 83]        ch0801That.SubstV.forTop(Top that)
    Use [PieDUpdate.java, 85]        ch0801That.SubstV.forTop(Top that)
    Define [PieDUpdate.java, 26]     ch0801That.Top
    Set [PieDUpdate.java, 30]        ch0801That.Top.Top(Object t,PieDUpdate r)
    Use [PieDUpdate.java, 38]        ch0801That.Top.toString
                                                                     Page 191
                         Object Cross Reference Report
===============================================================================

ch0801That.Top.t   (Variable)
  Declared as: Object
    Use [PieDUpdate.java, 112]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 114]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 117]       ch0801That.LtSubstV.forTop(Top that)
    Use [PieDUpdate.java, 61]        ch0801That.RemV.forTop(Top that)
    Use [PieDUpdate.java, 64]        ch0801That.RemV.forTop(Top that)
    Use [PieDUpdate.java, 82]        ch0801That.SubstV.forTop(Top that)
    Use [PieDUpdate.java, 85]        ch0801That.SubstV.forTop(Top that)
    Define [PieDUpdate.java, 25]     ch0801That.Top
    Set [PieDUpdate.java, 29]        ch0801That.Top.Top(Object t,PieDUpdate r)
    Use [PieDUpdate.java, 38]        ch0801That.Top.toString

ch0801That.Top.Top.r   (Parameter)
  Declared as: PieDUpdate
    Define [PieDUpdate.java, 27]     ch0801That.Top.Top(Object t,PieDUpdate r)
    Use [PieDUpdate.java, 30]        ch0801That.Top.Top(Object t,PieDUpdate r)

ch0801That.Top.Top.t   (Parameter)
  Declared as: Object
    Define [PieDUpdate.java, 27]     ch0801That.Top.Top(Object t,PieDUpdate r)
    Use [PieDUpdate.java, 29]        ch0801That.Top.Top(Object t,PieDUpdate r)

ch081.Add.Add._i   (Parameter)
  Declared as: Integer
    Define [SetD.java, 52]           ch081.Add.Add(Integer _i,SetD _s)
    Use [SetD.java, 54]              ch081.Add.Add(Integer _i,SetD _s)

ch081.Add.Add._s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 52]           ch081.Add.Add(Integer _i,SetD _s)
    Use [SetD.java, 55]              ch081.Add.Add(Integer _i,SetD _s)

ch081.Add.diff.t   (Parameter)
  Declared as: SetD
    Define [SetD.java, 74]           ch081.Add.diff(SetD t)
    Use [SetD.java, 76]              ch081.Add.diff(SetD t)
    Use [SetD.java, 77]              ch081.Add.diff(SetD t)
    Use [SetD.java, 79]              ch081.Add.diff(SetD t)

ch081.Add.i   (Variable)
  Declared as: Integer
    Define [SetD.java, 50]           ch081.Add
    Set [SetD.java, 54]              ch081.Add.Add(Integer _i,SetD _s)
    Use [SetD.java, 76]              ch081.Add.diff(SetD t)
    Use [SetD.java, 79]              ch081.Add.diff(SetD t)
    Use [SetD.java, 60]              ch081.Add.mem(Integer n)
    Use [SetD.java, 70]              ch081.Add.plus(SetD t)
    Use [SetD.java, 86]              ch081.Add.prod(SetD t)
    Use [SetD.java, 87]              ch081.Add.prod(SetD t)

ch081.Add.mem.n   (Parameter)
  Declared as: Integer
    Define [SetD.java, 58]           ch081.Add.mem(Integer n)
    Use [SetD.java, 60]              ch081.Add.mem(Integer n)
                                                                     Page 192
                         Object Cross Reference Report
===============================================================================
    Use [SetD.java, 63]              ch081.Add.mem(Integer n)

ch081.Add.plus.t   (Parameter)
  Declared as: SetD
    Define [SetD.java, 68]           ch081.Add.plus(SetD t)
    Use [SetD.java, 70]              ch081.Add.plus(SetD t)

ch081.Add.prod.t   (Parameter)
  Declared as: SetD
    Define [SetD.java, 84]           ch081.Add.prod(SetD t)
    Use [SetD.java, 86]              ch081.Add.prod(SetD t)
    Use [SetD.java, 87]              ch081.Add.prod(SetD t)
    Use [SetD.java, 89]              ch081.Add.prod(SetD t)

ch081.Add.s   (Variable)
  Declared as: SetD
    Define [SetD.java, 51]           ch081.Add
    Set [SetD.java, 55]              ch081.Add.Add(Integer _i,SetD _s)
    Use [SetD.java, 77]              ch081.Add.diff(SetD t)
    Use [SetD.java, 79]              ch081.Add.diff(SetD t)
    Use [SetD.java, 63]              ch081.Add.mem(Integer n)
    Use [SetD.java, 70]              ch081.Add.plus(SetD t)
    Use [SetD.java, 87]              ch081.Add.prod(SetD t)
    Use [SetD.java, 89]              ch081.Add.prod(SetD t)

ch081.Bot.accept.ask   (Parameter)
  Declared as: PieVistor1
    Define [PieD.java, 96]           ch081.Bot.accept(PieVistor1 ask)
    Use [PieD.java, 98]              ch081.Bot.accept(PieVistor1 ask)

ch081.Const.accpet.ask   (Parameter)
  Declared as: ExprVisitorI
    Define [ExprD.java, 115]         ch081.Const.accpet(ExprVisitorI ask)
    Use [ExprD.java, 117]            ch081.Const.accpet(ExprVisitorI ask)

ch081.Const.c   (Variable)
  Declared as: Object
    Define [ExprD.java, 109]         ch081.Const
    Set [ExprD.java, 112]            ch081.Const.Const(Object _c)
    Use [ExprD.java, 117]            ch081.Const.accpet(ExprVisitorI ask)

ch081.Const.Const._c   (Parameter)
  Declared as: Object
    Define [ExprD.java, 110]         ch081.Const.Const(Object _c)
    Use [ExprD.java, 112]            ch081.Const.Const(Object _c)

ch081.Diff.accpet.ask   (Parameter)
  Declared as: ExprVisitorI
    Define [ExprD.java, 86]          ch081.Diff.accpet(ExprVisitorI ask)
    Use [ExprD.java, 88]             ch081.Diff.accpet(ExprVisitorI ask)

ch081.Diff.Diff._l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 80]          ch081.Diff.Diff(ExprD _l,ExprD _r)
    Use [ExprD.java, 82]             ch081.Diff.Diff(ExprD _l,ExprD _r)
                                                                     Page 193
                         Object Cross Reference Report
===============================================================================

ch081.Diff.Diff._r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 80]          ch081.Diff.Diff(ExprD _l,ExprD _r)
    Use [ExprD.java, 83]             ch081.Diff.Diff(ExprD _l,ExprD _r)

ch081.Diff.l   (Variable)
  Declared as: ExprD
    Define [ExprD.java, 78]          ch081.Diff
    Set [ExprD.java, 82]             ch081.Diff.Diff(ExprD _l,ExprD _r)
    Use [ExprD.java, 88]             ch081.Diff.accpet(ExprVisitorI ask)

ch081.Diff.r   (Variable)
  Declared as: ExprD
    Define [ExprD.java, 79]          ch081.Diff
    Set [ExprD.java, 83]             ch081.Diff.Diff(ExprD _l,ExprD _r)
    Use [ExprD.java, 88]             ch081.Diff.accpet(ExprVisitorI ask)

ch081.Empty.diff.s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 34]           ch081.Empty.diff(SetD s)

ch081.Empty.mem.i   (Parameter)
  Declared as: Integer
    Define [SetD.java, 22]           ch081.Empty.mem(Integer i)

ch081.Empty.plus.s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 28]           ch081.Empty.plus(SetD s)
    Use [SetD.java, 30]              ch081.Empty.plus(SetD s)

ch081.Empty.prod.s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 40]           ch081.Empty.prod(SetD s)

ch081.EvalV.diff.l   (Parameter)
  Declared as: Object
    Define [ExprD.java, 36]          ch081.EvalV.diff(Object l,Object r)

ch081.EvalV.diff.r   (Parameter)
  Declared as: Object
    Define [ExprD.java, 36]          ch081.EvalV.diff(Object l,Object r)

ch081.EvalV.forConst.c   (Parameter)
  Declared as: Object
    Define [ExprD.java, 30]          ch081.EvalV.forConst(Object c)
    Use [ExprD.java, 32]             ch081.EvalV.forConst(Object c)

ch081.EvalV.forDiff.l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 18]          ch081.EvalV.forDiff(ExprD l,ExprD r)
    Use [ExprD.java, 20]             ch081.EvalV.forDiff(ExprD l,ExprD r)

ch081.EvalV.forDiff.r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 18]          ch081.EvalV.forDiff(ExprD l,ExprD r)
                                                                     Page 194
                         Object Cross Reference Report
===============================================================================
    Use [ExprD.java, 20]             ch081.EvalV.forDiff(ExprD l,ExprD r)

ch081.EvalV.forPlus.l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 12]          ch081.EvalV.forPlus(ExprD l,ExprD r)
    Use [ExprD.java, 14]             ch081.EvalV.forPlus(ExprD l,ExprD r)

ch081.EvalV.forPlus.r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 12]          ch081.EvalV.forPlus(ExprD l,ExprD r)
    Use [ExprD.java, 14]             ch081.EvalV.forPlus(ExprD l,ExprD r)

ch081.EvalV.forProd.l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 24]          ch081.EvalV.forProd(ExprD l,ExprD r)
    Use [ExprD.java, 26]             ch081.EvalV.forProd(ExprD l,ExprD r)

ch081.EvalV.forProd.r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 24]          ch081.EvalV.forProd(ExprD l,ExprD r)
    Use [ExprD.java, 26]             ch081.EvalV.forProd(ExprD l,ExprD r)

ch081.EvalV.plus.l   (Parameter)
  Declared as: Object
    Define [ExprD.java, 35]          ch081.EvalV.plus(Object l,Object r)

ch081.EvalV.plus.r   (Parameter)
  Declared as: Object
    Define [ExprD.java, 35]          ch081.EvalV.plus(Object l,Object r)

ch081.EvalV.prod.l   (Parameter)
  Declared as: Object
    Define [ExprD.java, 37]          ch081.EvalV.prod(Object l,Object r)

ch081.EvalV.prod.r   (Parameter)
  Declared as: Object
    Define [ExprD.java, 37]          ch081.EvalV.prod(Object l,Object r)

ch081.ExprD.accpet.ask   (Parameter)
  Declared as: ExprVisitorI
    Define [ExprD.java, 54]          ch081.ExprD.accpet(ExprVisitorI ask)

ch081.ExprVisitorI.forConst.c   (Parameter)
  Declared as: Object
    Define [ExprD.java, 7]           ch081.ExprVisitorI.forConst(Object c)

ch081.ExprVisitorI.forDiff.l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 5]           ch081.ExprVisitorI.forDiff(ExprD l,ExprD r)

ch081.ExprVisitorI.forDiff.r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 5]           ch081.ExprVisitorI.forDiff(ExprD l,ExprD r)

ch081.ExprVisitorI.forPlus.l   (Parameter)
  Declared as: ExprD
                                                                     Page 195
                         Object Cross Reference Report
===============================================================================
    Define [ExprD.java, 4]           ch081.ExprVisitorI.forPlus(ExprD l,ExprD r)

ch081.ExprVisitorI.forPlus.r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 4]           ch081.ExprVisitorI.forPlus(ExprD l,ExprD r)

ch081.ExprVisitorI.forProd.l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 6]           ch081.ExprVisitorI.forProd(ExprD l,ExprD r)

ch081.ExprVisitorI.forProd.r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 6]           ch081.ExprVisitorI.forProd(ExprD l,ExprD r)

ch081.IntEvalV.diff.l   (Parameter)
  Declared as: Object
    Define [ExprD.java, 44]          ch081.IntEvalV.diff(Object l,Object r)
    Use [ExprD.java, 45]             ch081.IntEvalV.diff(Object l,Object r)

ch081.IntEvalV.diff.r   (Parameter)
  Declared as: Object
    Define [ExprD.java, 44]          ch081.IntEvalV.diff(Object l,Object r)
    Use [ExprD.java, 45]             ch081.IntEvalV.diff(Object l,Object r)

ch081.IntEvalV.plus.l   (Parameter)
  Declared as: Object
    Define [ExprD.java, 41]          ch081.IntEvalV.plus(Object l,Object r)
    Use [ExprD.java, 42]             ch081.IntEvalV.plus(Object l,Object r)

ch081.IntEvalV.plus.r   (Parameter)
  Declared as: Object
    Define [ExprD.java, 41]          ch081.IntEvalV.plus(Object l,Object r)
    Use [ExprD.java, 42]             ch081.IntEvalV.plus(Object l,Object r)

ch081.IntEvalV.prod.l   (Parameter)
  Declared as: Object
    Define [ExprD.java, 47]          ch081.IntEvalV.prod(Object l,Object r)
    Use [ExprD.java, 48]             ch081.IntEvalV.prod(Object l,Object r)

ch081.IntEvalV.prod.r   (Parameter)
  Declared as: Object
    Define [ExprD.java, 47]          ch081.IntEvalV.prod(Object l,Object r)
    Use [ExprD.java, 48]             ch081.IntEvalV.prod(Object l,Object r)

ch081.LtSubstV.c   (Variable)
  Declared as: int
    Define [PieD.java, 54]           ch081.LtSubstV
    Set [PieD.java, 59]              ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 72]              ch081.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 77]              ch081.LtSubstV.forTop(Object t,PieD r)

ch081.LtSubstV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 70]           ch081.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 74]              ch081.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 77]              ch081.LtSubstV.forTop(Object t,PieD r)
                                                                     Page 196
                         Object Cross Reference Report
===============================================================================
    Use [PieD.java, 79]              ch081.LtSubstV.forTop(Object t,PieD r)

ch081.LtSubstV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 70]           ch081.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 74]              ch081.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 76]              ch081.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 79]              ch081.LtSubstV.forTop(Object t,PieD r)

ch081.LtSubstV.LtSubstV._c   (Parameter)
  Declared as: int
    Define [PieD.java, 57]           ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 59]              ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)

ch081.LtSubstV.LtSubstV._n   (Parameter)
  Declared as: Object
    Define [PieD.java, 57]           ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 60]              ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)

ch081.LtSubstV.LtSubstV._o   (Parameter)
  Declared as: Object
    Define [PieD.java, 57]           ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 61]              ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)

ch081.LtSubstV.n   (Variable)
  Declared as: Object
    Define [PieD.java, 55]           ch081.LtSubstV
    Set [PieD.java, 60]              ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 77]              ch081.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 77]              ch081.LtSubstV.forTop(Object t,PieD r)

ch081.LtSubstV.o   (Variable)
  Declared as: Object
    Define [PieD.java, 56]           ch081.LtSubstV
    Set [PieD.java, 61]              ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 76]              ch081.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 77]              ch081.LtSubstV.forTop(Object t,PieD r)

ch081.LtSubstV1.c   (Variable)
  Declared as: int
    Define [SubstD.java, 43]         ch081.LtSubstV1
    Set [SubstD.java, 47]            ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)
    Use [SubstD.java, 52]            ch081.LtSubstV1.forTop(Object t,PieD r)
    Use [SubstD.java, 57]            ch081.LtSubstV1.forTop(Object t,PieD r)

ch081.LtSubstV1.forTop.r   (Parameter)
  Declared as: PieD
    Define [SubstD.java, 50]         ch081.LtSubstV1.forTop(Object t,PieD r)
    Use [SubstD.java, 54]            ch081.LtSubstV1.forTop(Object t,PieD r)
    Use [SubstD.java, 57]            ch081.LtSubstV1.forTop(Object t,PieD r)
    Use [SubstD.java, 59]            ch081.LtSubstV1.forTop(Object t,PieD r)

ch081.LtSubstV1.forTop.t   (Parameter)
  Declared as: Object
    Define [SubstD.java, 50]         ch081.LtSubstV1.forTop(Object t,PieD r)
    Use [SubstD.java, 54]            ch081.LtSubstV1.forTop(Object t,PieD r)
                                                                     Page 197
                         Object Cross Reference Report
===============================================================================
    Use [SubstD.java, 56]            ch081.LtSubstV1.forTop(Object t,PieD r)
    Use [SubstD.java, 59]            ch081.LtSubstV1.forTop(Object t,PieD r)

ch081.LtSubstV1.LtSubstV1._n   (Parameter)
  Declared as: Object
    Define [SubstD.java, 44]         ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)
    Use [SubstD.java, 46]            ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)

ch081.LtSubstV1.LtSubstV1._o   (Parameter)
  Declared as: Object
    Define [SubstD.java, 44]         ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)
    Use [SubstD.java, 46]            ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)

ch081.LtSubstV1.LtSubstV1.c   (Parameter)
  Declared as: int
    Define [SubstD.java, 44]         ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)
    Use [SubstD.java, 47]            ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)

ch081.LtSubstV2.c   (Variable)
  Declared as: int
    Define [SubstVExt.java, 31]      ch081.LtSubstV2
    Set [SubstVExt.java, 35]         ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)
    Use [SubstVExt.java, 40]         ch081.LtSubstV2.forTop(Object t,PieD r)
    Use [SubstVExt.java, 45]         ch081.LtSubstV2.forTop(Object t,PieD r)

ch081.LtSubstV2.forTop.r   (Parameter)
  Declared as: PieD
    Define [SubstVExt.java, 38]      ch081.LtSubstV2.forTop(Object t,PieD r)
    Use [SubstVExt.java, 42]         ch081.LtSubstV2.forTop(Object t,PieD r)
    Use [SubstVExt.java, 45]         ch081.LtSubstV2.forTop(Object t,PieD r)
    Use [SubstVExt.java, 47]         ch081.LtSubstV2.forTop(Object t,PieD r)

ch081.LtSubstV2.forTop.t   (Parameter)
  Declared as: Object
    Define [SubstVExt.java, 38]      ch081.LtSubstV2.forTop(Object t,PieD r)
    Use [SubstVExt.java, 42]         ch081.LtSubstV2.forTop(Object t,PieD r)
    Use [SubstVExt.java, 44]         ch081.LtSubstV2.forTop(Object t,PieD r)
    Use [SubstVExt.java, 47]         ch081.LtSubstV2.forTop(Object t,PieD r)

ch081.LtSubstV2.LtSubstV2._n   (Parameter)
  Declared as: Object
    Define [SubstVExt.java, 32]      ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)
    Use [SubstVExt.java, 34]         ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)

ch081.LtSubstV2.LtSubstV2._o   (Parameter)
  Declared as: Object
    Define [SubstVExt.java, 32]      ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)
    Use [SubstVExt.java, 34]         ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)

ch081.LtSubstV2.LtSubstV2.c   (Parameter)
  Declared as: int
    Define [SubstVExt.java, 32]      ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)
    Use [SubstVExt.java, 35]         ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)

ch081.PieD.accept.ask   (Parameter)
  Declared as: PieVistor1
                                                                     Page 198
                         Object Cross Reference Report
===============================================================================
    Define [PieD.java, 90]           ch081.PieD.accept(PieVistor1 ask)

ch081.PieVistor1.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 7]            ch081.PieVistor1.forTop(Object t,PieD r)

ch081.PieVistor1.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 7]            ch081.PieVistor1.forTop(Object t,PieD r)

ch081.Plus.accpet.ask   (Parameter)
  Declared as: ExprVisitorI
    Define [ExprD.java, 70]          ch081.Plus.accpet(ExprVisitorI ask)
    Use [ExprD.java, 72]             ch081.Plus.accpet(ExprVisitorI ask)

ch081.Plus.l   (Variable)
  Declared as: ExprD
    Define [ExprD.java, 62]          ch081.Plus
    Set [ExprD.java, 66]             ch081.Plus.Plus(ExprD _l,ExprD _r)
    Use [ExprD.java, 72]             ch081.Plus.accpet(ExprVisitorI ask)

ch081.Plus.Plus._l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 64]          ch081.Plus.Plus(ExprD _l,ExprD _r)
    Use [ExprD.java, 66]             ch081.Plus.Plus(ExprD _l,ExprD _r)

ch081.Plus.Plus._r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 64]          ch081.Plus.Plus(ExprD _l,ExprD _r)
    Use [ExprD.java, 67]             ch081.Plus.Plus(ExprD _l,ExprD _r)

ch081.Plus.r   (Variable)
  Declared as: ExprD
    Define [ExprD.java, 63]          ch081.Plus
    Set [ExprD.java, 67]             ch081.Plus.Plus(ExprD _l,ExprD _r)
    Use [ExprD.java, 72]             ch081.Plus.accpet(ExprVisitorI ask)

ch081.Prod.accpet.ask   (Parameter)
  Declared as: ExprVisitorI
    Define [ExprD.java, 101]         ch081.Prod.accpet(ExprVisitorI ask)
    Use [ExprD.java, 103]            ch081.Prod.accpet(ExprVisitorI ask)

ch081.Prod.l   (Variable)
  Declared as: ExprD
    Define [ExprD.java, 93]          ch081.Prod
    Set [ExprD.java, 97]             ch081.Prod.Prod(ExprD _l,ExprD _r)
    Use [ExprD.java, 103]            ch081.Prod.accpet(ExprVisitorI ask)

ch081.Prod.Prod._l   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 95]          ch081.Prod.Prod(ExprD _l,ExprD _r)
    Use [ExprD.java, 97]             ch081.Prod.Prod(ExprD _l,ExprD _r)

ch081.Prod.Prod._r   (Parameter)
  Declared as: ExprD
    Define [ExprD.java, 95]          ch081.Prod.Prod(ExprD _l,ExprD _r)
                                                                     Page 199
                         Object Cross Reference Report
===============================================================================
    Use [ExprD.java, 98]             ch081.Prod.Prod(ExprD _l,ExprD _r)

ch081.Prod.r   (Variable)
  Declared as: ExprD
    Define [ExprD.java, 94]          ch081.Prod
    Set [ExprD.java, 98]             ch081.Prod.Prod(ExprD _l,ExprD _r)
    Use [ExprD.java, 103]            ch081.Prod.accpet(ExprVisitorI ask)

ch081.RemV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 21]           ch081.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 23]              ch081.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 25]              ch081.RemV.forTop(Object t,PieD r)

ch081.RemV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 21]           ch081.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 22]              ch081.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 25]              ch081.RemV.forTop(Object t,PieD r)

ch081.RemV.o   (Variable)
  Declared as: Object
    Define [PieD.java, 11]           ch081.RemV
    Set [PieD.java, 14]              ch081.RemV.RemV(Object _o)
    Use [PieD.java, 22]              ch081.RemV.forTop(Object t,PieD r)

ch081.RemV.RemV._o   (Parameter)
  Declared as: Object
    Define [PieD.java, 12]           ch081.RemV.RemV(Object _o)
    Use [PieD.java, 14]              ch081.RemV.RemV(Object _o)

ch081.SetD.add.i   (Parameter)
  Declared as: Integer
    Define [SetD.java, 4]            ch081.SetD.add(Integer i)
    Use [SetD.java, 5]               ch081.SetD.add(Integer i)
    Use [SetD.java, 8]               ch081.SetD.add(Integer i)

ch081.SetD.diff.s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 14]           ch081.SetD.diff(SetD s)

ch081.SetD.mem.i   (Parameter)
  Declared as: Integer
    Define [SetD.java, 12]           ch081.SetD.mem(Integer i)

ch081.SetD.plus.s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 13]           ch081.SetD.plus(SetD s)

ch081.SetD.prod.s   (Parameter)
  Declared as: SetD
    Define [SetD.java, 15]           ch081.SetD.prod(SetD s)

ch081.SetEvalV.diff.l   (Parameter)
  Declared as: Object
    Define [SetD.java, 104]          ch081.SetEvalV.diff(Object l,Object r)
                                                                     Page 200
                         Object Cross Reference Report
===============================================================================
    Use [SetD.java, 106]             ch081.SetEvalV.diff(Object l,Object r)

ch081.SetEvalV.diff.r   (Parameter)
  Declared as: Object
    Define [SetD.java, 104]          ch081.SetEvalV.diff(Object l,Object r)
    Use [SetD.java, 106]             ch081.SetEvalV.diff(Object l,Object r)

ch081.SetEvalV.plus.l   (Parameter)
  Declared as: Object
    Define [SetD.java, 99]           ch081.SetEvalV.plus(Object l,Object r)
    Use [SetD.java, 101]             ch081.SetEvalV.plus(Object l,Object r)

ch081.SetEvalV.plus.r   (Parameter)
  Declared as: Object
    Define [SetD.java, 99]           ch081.SetEvalV.plus(Object l,Object r)
    Use [SetD.java, 101]             ch081.SetEvalV.plus(Object l,Object r)

ch081.SetEvalV.prod.l   (Parameter)
  Declared as: Object
    Define [SetD.java, 109]          ch081.SetEvalV.prod(Object l,Object r)
    Use [SetD.java, 111]             ch081.SetEvalV.prod(Object l,Object r)

ch081.SetEvalV.prod.r   (Parameter)
  Declared as: Object
    Define [SetD.java, 109]          ch081.SetEvalV.prod(Object l,Object r)
    Use [SetD.java, 111]             ch081.SetEvalV.prod(Object l,Object r)

ch081.SubstD.forTop.r   (Parameter)
  Declared as: PieD
    Define [SubstD.java, 19]         ch081.SubstD.forTop(Object t,PieD r)

ch081.SubstD.forTop.t   (Parameter)
  Declared as: Object
    Define [SubstD.java, 19]         ch081.SubstD.forTop(Object t,PieD r)

ch081.SubstD.n   (Variable)
  Declared as: Object
    Use [SubstD.java, 57]            ch081.LtSubstV1.forTop(Object t,PieD r)
    Use [SubstD.java, 57]            ch081.LtSubstV1.forTop(Object t,PieD r)
    Define [SubstD.java, 6]          ch081.SubstD
    Set [SubstD.java, 10]            ch081.SubstD.SubstD(Object _n,Object _o)
    Use [SubstD.java, 34]            ch081.SubstV1.forTop(Object t,PieD r)

ch081.SubstD.o   (Variable)
  Declared as: Object
    Use [SubstD.java, 56]            ch081.LtSubstV1.forTop(Object t,PieD r)
    Use [SubstD.java, 57]            ch081.LtSubstV1.forTop(Object t,PieD r)
    Define [SubstD.java, 7]          ch081.SubstD
    Set [SubstD.java, 11]            ch081.SubstD.SubstD(Object _n,Object _o)
    Use [SubstD.java, 32]            ch081.SubstV1.forTop(Object t,PieD r)

ch081.SubstD.SubstD._n   (Parameter)
  Declared as: Object
    Define [SubstD.java, 8]          ch081.SubstD.SubstD(Object _n,Object _o)
    Use [SubstD.java, 10]            ch081.SubstD.SubstD(Object _n,Object _o)
                                                                     Page 201
                         Object Cross Reference Report
===============================================================================

ch081.SubstD.SubstD._o   (Parameter)
  Declared as: Object
    Define [SubstD.java, 8]          ch081.SubstD.SubstD(Object _n,Object _o)
    Use [SubstD.java, 11]            ch081.SubstD.SubstD(Object _n,Object _o)

ch081.SubstV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 43]           ch081.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 45]              ch081.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 47]              ch081.SubstV.forTop(Object t,PieD r)

ch081.SubstV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 43]           ch081.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 44]              ch081.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 47]              ch081.SubstV.forTop(Object t,PieD r)

ch081.SubstV.n   (Variable)
  Declared as: Object
    Define [PieD.java, 32]           ch081.SubstV
    Set [PieD.java, 36]              ch081.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 45]              ch081.SubstV.forTop(Object t,PieD r)

ch081.SubstV.o   (Variable)
  Declared as: Object
    Define [PieD.java, 33]           ch081.SubstV
    Set [PieD.java, 37]              ch081.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 44]              ch081.SubstV.forTop(Object t,PieD r)

ch081.SubstV.SubstV._n   (Parameter)
  Declared as: Object
    Define [PieD.java, 34]           ch081.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 36]              ch081.SubstV.SubstV(Object _n,Object _o)

ch081.SubstV.SubstV._o   (Parameter)
  Declared as: Object
    Define [PieD.java, 34]           ch081.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 37]              ch081.SubstV.SubstV(Object _n,Object _o)

ch081.SubstV1.forTop.r   (Parameter)
  Declared as: PieD
    Define [SubstD.java, 30]         ch081.SubstV1.forTop(Object t,PieD r)
    Use [SubstD.java, 34]            ch081.SubstV1.forTop(Object t,PieD r)
    Use [SubstD.java, 36]            ch081.SubstV1.forTop(Object t,PieD r)

ch081.SubstV1.forTop.t   (Parameter)
  Declared as: Object
    Define [SubstD.java, 30]         ch081.SubstV1.forTop(Object t,PieD r)
    Use [SubstD.java, 32]            ch081.SubstV1.forTop(Object t,PieD r)
    Use [SubstD.java, 36]            ch081.SubstV1.forTop(Object t,PieD r)

ch081.SubstV1.SubstV1._n   (Parameter)
  Declared as: Object
    Define [SubstD.java, 25]         ch081.SubstV1.SubstV1(Object _n,Object _o)
    Use [SubstD.java, 27]            ch081.SubstV1.SubstV1(Object _n,Object _o)
                                                                     Page 202
                         Object Cross Reference Report
===============================================================================

ch081.SubstV1.SubstV1._o   (Parameter)
  Declared as: Object
    Define [SubstD.java, 25]         ch081.SubstV1.SubstV1(Object _n,Object _o)
    Use [SubstD.java, 27]            ch081.SubstV1.SubstV1(Object _n,Object _o)

ch081.SubstVExt.forTop.r   (Parameter)
  Declared as: PieD
    Define [SubstVExt.java, 19]      ch081.SubstVExt.forTop(Object t,PieD r)
    Use [SubstVExt.java, 21]         ch081.SubstVExt.forTop(Object t,PieD r)
    Use [SubstVExt.java, 23]         ch081.SubstVExt.forTop(Object t,PieD r)

ch081.SubstVExt.forTop.t   (Parameter)
  Declared as: Object
    Define [SubstVExt.java, 19]      ch081.SubstVExt.forTop(Object t,PieD r)
    Use [SubstVExt.java, 20]         ch081.SubstVExt.forTop(Object t,PieD r)
    Use [SubstVExt.java, 23]         ch081.SubstVExt.forTop(Object t,PieD r)

ch081.SubstVExt.n   (Variable)
  Declared as: Object
    Use [SubstVExt.java, 45]         ch081.LtSubstV2.forTop(Object t,PieD r)
    Use [SubstVExt.java, 45]         ch081.LtSubstV2.forTop(Object t,PieD r)
    Define [SubstVExt.java, 6]       ch081.SubstVExt
    Set [SubstVExt.java, 10]         ch081.SubstVExt.SubstVExt(Object _n,Object _o)
    Use [SubstVExt.java, 21]         ch081.SubstVExt.forTop(Object t,PieD r)

ch081.SubstVExt.o   (Variable)
  Declared as: Object
    Use [SubstVExt.java, 44]         ch081.LtSubstV2.forTop(Object t,PieD r)
    Use [SubstVExt.java, 45]         ch081.LtSubstV2.forTop(Object t,PieD r)
    Define [SubstVExt.java, 7]       ch081.SubstVExt
    Set [SubstVExt.java, 11]         ch081.SubstVExt.SubstVExt(Object _n,Object _o)
    Use [SubstVExt.java, 20]         ch081.SubstVExt.forTop(Object t,PieD r)

ch081.SubstVExt.SubstVExt._n   (Parameter)
  Declared as: Object
    Define [SubstVExt.java, 8]       ch081.SubstVExt.SubstVExt(Object _n,Object _o)
    Use [SubstVExt.java, 10]         ch081.SubstVExt.SubstVExt(Object _n,Object _o)

ch081.SubstVExt.SubstVExt._o   (Parameter)
  Declared as: Object
    Define [SubstVExt.java, 8]       ch081.SubstVExt.SubstVExt(Object _n,Object _o)
    Use [SubstVExt.java, 11]         ch081.SubstVExt.SubstVExt(Object _n,Object _o)

ch081.TestPieD.main.args   (Parameter)
  Declared as: String[]
    Define [TestPieD.java, 4]        ch081.TestPieD.main(String[] args)

ch081.Top.accept.ask   (Parameter)
  Declared as: PieVistor1
    Define [PieD.java, 117]          ch081.Top.accept(PieVistor1 ask)
    Use [PieD.java, 119]             ch081.Top.accept(PieVistor1 ask)

ch081.Top.r   (Variable)
  Declared as: PieD
    Define [PieD.java, 110]          ch081.Top
                                                                     Page 203
                         Object Cross Reference Report
===============================================================================
    Set [PieD.java, 114]             ch081.Top.Top(Object t,PieD r)
    Use [PieD.java, 119]             ch081.Top.accept(PieVistor1 ask)
    Use [PieD.java, 122]             ch081.Top.toString

ch081.Top.t   (Variable)
  Declared as: Object
    Define [PieD.java, 109]          ch081.Top
    Set [PieD.java, 113]             ch081.Top.Top(Object t,PieD r)
    Use [PieD.java, 119]             ch081.Top.accept(PieVistor1 ask)
    Use [PieD.java, 122]             ch081.Top.toString

ch081.Top.Top.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 111]          ch081.Top.Top(Object t,PieD r)
    Use [PieD.java, 114]             ch081.Top.Top(Object t,PieD r)

ch081.Top.Top.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 111]          ch081.Top.Top(Object t,PieD r)
    Use [PieD.java, 113]             ch081.Top.Top(Object t,PieD r)

ch09.CartesianPt2.CartesianPt2._x   (Parameter)
  Declared as: int
    Define [PointDCloserSimplify.java, 36]   ch09.CartesianPt2.CartesianPt2(int _x,int _y)
    Use [PointDCloserSimplify.java, 38]   ch09.CartesianPt2.CartesianPt2(int _x,int _y)

ch09.CartesianPt2.CartesianPt2._y   (Parameter)
  Declared as: int
    Define [PointDCloserSimplify.java, 36]   ch09.CartesianPt2.CartesianPt2(int _x,int _y)
    Use [PointDCloserSimplify.java, 38]   ch09.CartesianPt2.CartesianPt2(int _x,int _y)

ch09.CartesianPt2.x   (Variable)
  Declared as: int
    Define [PointDCloserSimplify.java, 33]   ch09.CartesianPt2
    Use [PointDCloserSimplify.java, 48]   ch09.CartesianPt2.distanceTo0
    Use [PointDCloserSimplify.java, 48]   ch09.CartesianPt2.distanceTo0

ch09.CartesianPt2.y   (Variable)
  Declared as: int
    Define [PointDCloserSimplify.java, 34]   ch09.CartesianPt2
    Use [PointDCloserSimplify.java, 48]   ch09.CartesianPt2.distanceTo0
    Use [PointDCloserSimplify.java, 48]   ch09.CartesianPt2.distanceTo0

ch09.Circle.accept.ask   (Parameter)
  Declared as: ShapeVisitorI
    Define [ShapeD.java, 22]         ch09.Circle.accept(ShapeVisitorI ask)
    Use [ShapeD.java, 24]            ch09.Circle.accept(ShapeVisitorI ask)

ch09.Circle.Circle._r   (Parameter)
  Declared as: int
    Define [ShapeD.java, 17]         ch09.Circle.Circle(int _r)
    Use [ShapeD.java, 19]            ch09.Circle.Circle(int _r)

ch09.Circle.r   (Variable)
  Declared as: int
    Define [ShapeD.java, 16]         ch09.Circle
                                                                     Page 204
                         Object Cross Reference Report
===============================================================================
    Set [ShapeD.java, 19]            ch09.Circle.Circle(int _r)
    Use [ShapeD.java, 24]            ch09.Circle.accept(ShapeVisitorI ask)

ch09.HasPtV.forCircle.r   (Parameter)
  Declared as: int
    Define [ShapeD.java, 66]         ch09.HasPtV.forCircle(int r)
    Use [ShapeD.java, 68]            ch09.HasPtV.forCircle(int r)

ch09.HasPtV.forSquare.s   (Parameter)
  Declared as: int
    Define [ShapeD.java, 72]         ch09.HasPtV.forSquare(int s)
    Use [ShapeD.java, 74]            ch09.HasPtV.forSquare(int s)
    Use [ShapeD.java, 74]            ch09.HasPtV.forSquare(int s)

ch09.HasPtV.forTrans.q   (Parameter)
  Declared as: PointDCloserSimplify
    Define [ShapeD.java, 78]         ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)
    Use [ShapeD.java, 80]            ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)

ch09.HasPtV.forTrans.s   (Parameter)
  Declared as: ShapeD
    Define [ShapeD.java, 78]         ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)
    Use [ShapeD.java, 80]            ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)

ch09.HasPtV.HasPtV._p   (Parameter)
  Declared as: PointDCloserSimplify
    Define [ShapeD.java, 61]         ch09.HasPtV.HasPtV(PointDCloserSimplify _p)
    Use [ShapeD.java, 63]            ch09.HasPtV.HasPtV(PointDCloserSimplify _p)

ch09.HasPtV.p   (Variable)
  Declared as: PointDCloserSimplify
    Define [ShapeD.java, 60]         ch09.HasPtV
    Set [ShapeD.java, 63]            ch09.HasPtV.HasPtV(PointDCloserSimplify _p)
    Use [ShapeD.java, 68]            ch09.HasPtV.forCircle(int r)
    Use [ShapeD.java, 74]            ch09.HasPtV.forSquare(int s)
    Use [ShapeD.java, 74]            ch09.HasPtV.forSquare(int s)

ch09.ManHattanPt2.closerTo0.p1   (Parameter)
  Declared as: CartesianPt2
    Define [PointDCloserSimplify.java, 74]   ch09.ManHattanPt2.closerTo0(CartesianPt2 p1)
    Use [PointDCloserSimplify.java, 76]   ch09.ManHattanPt2.closerTo0(CartesianPt2 p1)

ch09.ManHattanPt2.ManHattanPt2._x   (Parameter)
  Declared as: int
    Define [PointDCloserSimplify.java, 64]   ch09.ManHattanPt2.ManHattanPt2(int _x,int _y)
    Use [PointDCloserSimplify.java, 66]   ch09.ManHattanPt2.ManHattanPt2(int _x,int _y)

ch09.ManHattanPt2.ManHattanPt2._y   (Parameter)
  Declared as: int
    Define [PointDCloserSimplify.java, 64]   ch09.ManHattanPt2.ManHattanPt2(int _x,int _y)
    Use [PointDCloserSimplify.java, 66]   ch09.ManHattanPt2.ManHattanPt2(int _x,int _y)

ch09.ManHattanPt2.x   (Variable)
  Declared as: int
    Define [PointDCloserSimplify.java, 57]   ch09.ManHattanPt2
    Use [PointDCloserSimplify.java, 71]   ch09.ManHattanPt2.distanceTo0
                                                                     Page 205
                         Object Cross Reference Report
===============================================================================
    Use [Test.java, 7]               ch09.Test.main(String[] args)

ch09.ManHattanPt2.y   (Variable)
  Declared as: int
    Define [PointDCloserSimplify.java, 58]   ch09.ManHattanPt2
    Use [PointDCloserSimplify.java, 71]   ch09.ManHattanPt2.distanceTo0

ch09.PointDCloserSimplify.closerTo0.p1   (Parameter)
  Declared as: CartesianPt2
    Define [PointDCloserSimplify.java, 19]   ch09.PointDCloserSimplify.closerTo0(CartesianPt2 p1)
    Use [PointDCloserSimplify.java, 21]   ch09.PointDCloserSimplify.closerTo0(CartesianPt2 p1)

ch09.PointDCloserSimplify.minus.p   (Parameter)
  Declared as: PointDCloserSimplify
    Define [PointDCloserSimplify.java, 23]   ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)
    Use [PointDCloserSimplify.java, 25]   ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)
    Use [PointDCloserSimplify.java, 25]   ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)

ch09.PointDCloserSimplify.PointDCloserSimplify._x   (Parameter)
  Declared as: int
    Define [PointDCloserSimplify.java, 11]   ch09.PointDCloserSimplify.PointDCloserSimplify(int _x,int _y)
    Use [PointDCloserSimplify.java, 13]   ch09.PointDCloserSimplify.PointDCloserSimplify(int _x,int _y)

ch09.PointDCloserSimplify.PointDCloserSimplify._y   (Parameter)
  Declared as: int
    Define [PointDCloserSimplify.java, 11]   ch09.PointDCloserSimplify.PointDCloserSimplify(int _x,int _y)
    Use [PointDCloserSimplify.java, 14]   ch09.PointDCloserSimplify.PointDCloserSimplify(int _x,int _y)

ch09.PointDCloserSimplify.x   (Variable)
  Declared as: int
    Define [PointDCloserSimplify.java, 9]   ch09.PointDCloserSimplify
    Set [PointDCloserSimplify.java, 13]   ch09.PointDCloserSimplify.PointDCloserSimplify(int _x,int _y)
    Use [PointDCloserSimplify.java, 25]   ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)
    Use [PointDCloserSimplify.java, 25]   ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)
    Use [ShapeD.java, 74]            ch09.HasPtV.forSquare(int s)

ch09.PointDCloserSimplify.y   (Variable)
  Declared as: int
    Define [PointDCloserSimplify.java, 10]   ch09.PointDCloserSimplify
    Set [PointDCloserSimplify.java, 14]   ch09.PointDCloserSimplify.PointDCloserSimplify(int _x,int _y)
    Use [PointDCloserSimplify.java, 25]   ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)
    Use [PointDCloserSimplify.java, 25]   ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)
    Use [ShapeD.java, 74]            ch09.HasPtV.forSquare(int s)

ch09.ShadowCartesian.ShadowCartesian._tx   (Parameter)
  Declared as: int
    Define [ShadowCartesian.java, 11]   ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)
    Use [ShadowCartesian.java, 14]   ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)

ch09.ShadowCartesian.ShadowCartesian._ty   (Parameter)
  Declared as: int
    Define [ShadowCartesian.java, 11]   ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)
    Use [ShadowCartesian.java, 15]   ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)

ch09.ShadowCartesian.ShadowCartesian._x   (Parameter)
  Declared as: int
                                                                     Page 206
                         Object Cross Reference Report
===============================================================================
    Define [ShadowCartesian.java, 11]   ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)
    Use [ShadowCartesian.java, 13]   ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)

ch09.ShadowCartesian.ShadowCartesian._y   (Parameter)
  Declared as: int
    Define [ShadowCartesian.java, 11]   ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)
    Use [ShadowCartesian.java, 13]   ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)

ch09.ShadowCartesian.tx   (Variable)
  Declared as: int
    Define [ShadowCartesian.java, 9]   ch09.ShadowCartesian
    Set [ShadowCartesian.java, 14]   ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)
    Use [ShadowCartesian.java, 22]   ch09.ShadowCartesian.distanceTo0
    Use [ShadowCartesian.java, 22]   ch09.ShadowCartesian.distanceTo0

ch09.ShadowCartesian.ty   (Variable)
  Declared as: int
    Define [ShadowCartesian.java, 10]   ch09.ShadowCartesian
    Set [ShadowCartesian.java, 15]   ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)
    Use [ShadowCartesian.java, 22]   ch09.ShadowCartesian.distanceTo0
    Use [ShadowCartesian.java, 22]   ch09.ShadowCartesian.distanceTo0

ch09.ShapeD.accept.ask   (Parameter)
  Declared as: ShapeVisitorI
    Define [ShapeD.java, 4]          ch09.ShapeD.accept(ShapeVisitorI ask)

ch09.ShapeVisitorI.forCircle.r   (Parameter)
  Declared as: int
    Define [ShapeD.java, 8]          ch09.ShapeVisitorI.forCircle(int r)

ch09.ShapeVisitorI.forSquare.s   (Parameter)
  Declared as: int
    Define [ShapeD.java, 9]          ch09.ShapeVisitorI.forSquare(int s)

ch09.ShapeVisitorI.forTrans.q   (Parameter)
  Declared as: PointDCloserSimplify
    Define [ShapeD.java, 10]         ch09.ShapeVisitorI.forTrans(PointDCloserSimplify q,ShapeD s)

ch09.ShapeVisitorI.forTrans.s   (Parameter)
  Declared as: ShapeD
    Define [ShapeD.java, 10]         ch09.ShapeVisitorI.forTrans(PointDCloserSimplify q,ShapeD s)

ch09.Square.accept.ask   (Parameter)
  Declared as: ShapeVisitorI
    Define [ShapeD.java, 36]         ch09.Square.accept(ShapeVisitorI ask)
    Use [ShapeD.java, 38]            ch09.Square.accept(ShapeVisitorI ask)

ch09.Square.s   (Variable)
  Declared as: int
    Define [ShapeD.java, 30]         ch09.Square
    Set [ShapeD.java, 33]            ch09.Square.Square(int _s)
    Use [ShapeD.java, 38]            ch09.Square.accept(ShapeVisitorI ask)

ch09.Square.Square._s   (Parameter)
  Declared as: int
    Define [ShapeD.java, 31]         ch09.Square.Square(int _s)
                                                                     Page 207
                         Object Cross Reference Report
===============================================================================
    Use [ShapeD.java, 33]            ch09.Square.Square(int _s)

ch09.Test.main.args   (Parameter)
  Declared as: String[]
    Define [Test.java, 5]            ch09.Test.main(String[] args)

ch09.Test.main.mhpt   (Variable)
  Declared as: ManHattanPt2=ManHattanPt2(8010,)
    Define [Test.java, 6]            ch09.Test.main(String[] args)
    Set [Test.java, 6]               ch09.Test.main(String[] args)
    Use [Test.java, 7]               ch09.Test.main(String[] args)

ch09.Trans.accept.ask   (Parameter)
  Declared as: ShapeVisitorI
    Define [ShapeD.java, 51]         ch09.Trans.accept(ShapeVisitorI ask)
    Use [ShapeD.java, 53]            ch09.Trans.accept(ShapeVisitorI ask)

ch09.Trans.q   (Variable)
  Declared as: PointDCloserSimplify
    Define [ShapeD.java, 43]         ch09.Trans
    Set [ShapeD.java, 47]            ch09.Trans.Trans(PointDCloserSimplify _q,ShapeD _s)
    Use [ShapeD.java, 53]            ch09.Trans.accept(ShapeVisitorI ask)

ch09.Trans.s   (Variable)
  Declared as: ShapeD
    Define [ShapeD.java, 44]         ch09.Trans
    Set [ShapeD.java, 48]            ch09.Trans.Trans(PointDCloserSimplify _q,ShapeD _s)
    Use [ShapeD.java, 53]            ch09.Trans.accept(ShapeVisitorI ask)

ch09.Trans.Trans._q   (Parameter)
  Declared as: PointDCloserSimplify
    Define [ShapeD.java, 45]         ch09.Trans.Trans(PointDCloserSimplify _q,ShapeD _s)
    Use [ShapeD.java, 47]            ch09.Trans.Trans(PointDCloserSimplify _q,ShapeD _s)

ch09.Trans.Trans._s   (Parameter)
  Declared as: ShapeD
    Define [ShapeD.java, 45]         ch09.Trans.Trans(PointDCloserSimplify _q,ShapeD _s)
    Use [ShapeD.java, 48]            ch09.Trans.Trans(PointDCloserSimplify _q,ShapeD _s)

ch09.Union.accept.ask   (Parameter)
  Declared as: ShapeVisitorI
    Define [Union.java, 12]          ch09.Union.accept(ShapeVisitorI ask)
    Use [Union.java, 14]             ch09.Union.accept(ShapeVisitorI ask)

ch09.Union.s   (Variable)
  Declared as: ShapeD
    Define [Union.java, 4]           ch09.Union
    Set [Union.java, 8]              ch09.Union.Union(ShapeD _s,ShapeD _t)
    Use [Union.java, 14]             ch09.Union.accept(ShapeVisitorI ask)

ch09.Union.t   (Variable)
  Declared as: ShapeD
    Define [Union.java, 5]           ch09.Union
    Set [Union.java, 9]              ch09.Union.Union(ShapeD _s,ShapeD _t)
    Use [Union.java, 14]             ch09.Union.accept(ShapeVisitorI ask)
                                                                     Page 208
                         Object Cross Reference Report
===============================================================================

ch09.Union.Union._s   (Parameter)
  Declared as: ShapeD
    Define [Union.java, 6]           ch09.Union.Union(ShapeD _s,ShapeD _t)
    Use [Union.java, 8]              ch09.Union.Union(ShapeD _s,ShapeD _t)

ch09.Union.Union._t   (Parameter)
  Declared as: ShapeD
    Define [Union.java, 6]           ch09.Union.Union(ShapeD _s,ShapeD _t)
    Use [Union.java, 9]              ch09.Union.Union(ShapeD _s,ShapeD _t)

ch09.UnionHasPtV.forUnion.s   (Parameter)
  Declared as: ShapeD
    Define [Union.java, 30]          ch09.UnionHasPtV.forUnion(ShapeD s,ShapeD t)
    Use [Union.java, 31]             ch09.UnionHasPtV.forUnion(ShapeD s,ShapeD t)

ch09.UnionHasPtV.forUnion.t   (Parameter)
  Declared as: ShapeD
    Define [Union.java, 30]          ch09.UnionHasPtV.forUnion(ShapeD s,ShapeD t)
    Use [Union.java, 31]             ch09.UnionHasPtV.forUnion(ShapeD s,ShapeD t)

ch09.UnionHasPtV.UnionHasPtV._p   (Parameter)
  Declared as: CartesianPt2
    Define [Union.java, 25]          ch09.UnionHasPtV.UnionHasPtV(CartesianPt2 _p)
    Use [Union.java, 26]             ch09.UnionHasPtV.UnionHasPtV(CartesianPt2 _p)

ch09.UnionVisitorI.forUnion.s   (Parameter)
  Declared as: ShapeD
    Define [Union.java, 20]          ch09.UnionVisitorI.forUnion(ShapeD s,ShapeD t)

ch09.UnionVisitorI.forUnion.t   (Parameter)
  Declared as: ShapeD
    Define [Union.java, 20]          ch09.UnionVisitorI.forUnion(ShapeD s,ShapeD t)

ch10.AnchovyFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 132]          ch10.AnchovyFish.equals(Object o)
    Use [PieD.java, 134]             ch10.AnchovyFish.equals(Object o)

ch10.Bot.accept.ask   (Parameter)
  Declared as: PieVistor1
    Define [PieD.java, 98]           ch10.Bot.accept(PieVistor1 ask)
    Use [PieD.java, 100]             ch10.Bot.accept(PieVistor1 ask)

ch10.FishD.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 126]          ch10.FishD.equals(Object o)

ch10.LtSubstV.c   (Variable)
  Declared as: int
    Define [PieD.java, 56]           ch10.LtSubstV
    Set [PieD.java, 61]              ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 74]              ch10.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 79]              ch10.LtSubstV.forTop(Object t,PieD r)
                                                                     Page 209
                         Object Cross Reference Report
===============================================================================

ch10.LtSubstV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 72]           ch10.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 76]              ch10.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 79]              ch10.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 81]              ch10.LtSubstV.forTop(Object t,PieD r)

ch10.LtSubstV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 72]           ch10.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 76]              ch10.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 78]              ch10.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 81]              ch10.LtSubstV.forTop(Object t,PieD r)

ch10.LtSubstV.LtSubstV._c   (Parameter)
  Declared as: int
    Define [PieD.java, 59]           ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 61]              ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)

ch10.LtSubstV.LtSubstV._n   (Parameter)
  Declared as: Object
    Define [PieD.java, 59]           ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 62]              ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)

ch10.LtSubstV.LtSubstV._o   (Parameter)
  Declared as: Object
    Define [PieD.java, 59]           ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 63]              ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)

ch10.LtSubstV.n   (Variable)
  Declared as: Object
    Define [PieD.java, 57]           ch10.LtSubstV
    Set [PieD.java, 62]              ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 79]              ch10.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 79]              ch10.LtSubstV.forTop(Object t,PieD r)

ch10.LtSubstV.o   (Variable)
  Declared as: Object
    Define [PieD.java, 58]           ch10.LtSubstV
    Set [PieD.java, 63]              ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
    Use [PieD.java, 78]              ch10.LtSubstV.forTop(Object t,PieD r)
    Use [PieD.java, 79]              ch10.LtSubstV.forTop(Object t,PieD r)

ch10.Mian.main.args   (Parameter)
  Declared as: String[]
    Define [Mian.java, 4]            ch10.Mian.main(String[] args)

ch10.Mian.main.y   (Variable)
  Declared as: PiemanI=PiemanM(Bot())
    Define [Mian.java, 6]            ch10.Mian.main(String[] args)
    Set [Mian.java, 6]               ch10.Mian.main(String[] args)
    Use [Mian.java, 8]               ch10.Mian.main(String[] args)
    Use [Mian.java, 9]               ch10.Mian.main(String[] args)
    Use [Mian.java, 10]              ch10.Mian.main(String[] args)
                                                                     Page 210
                         Object Cross Reference Report
===============================================================================

ch10.OccursV.a   (Variable)
  Declared as: Object
    Define [PiemanM.java, 54]        ch10.OccursV
    Set [PiemanM.java, 57]           ch10.OccursV.OccursV(Object _a)
    Use [PiemanM.java, 69]           ch10.OccursV.forTop(Object t,PieD r)

ch10.OccursV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PiemanM.java, 67]        ch10.OccursV.forTop(Object t,PieD r)
    Use [PiemanM.java, 70]           ch10.OccursV.forTop(Object t,PieD r)
    Use [PiemanM.java, 72]           ch10.OccursV.forTop(Object t,PieD r)

ch10.OccursV.forTop.t   (Parameter)
  Declared as: Object
    Define [PiemanM.java, 67]        ch10.OccursV.forTop(Object t,PieD r)
    Use [PiemanM.java, 69]           ch10.OccursV.forTop(Object t,PieD r)

ch10.OccursV.OccursV._a   (Parameter)
  Declared as: Object
    Define [PiemanM.java, 55]        ch10.OccursV.OccursV(Object _a)
    Use [PiemanM.java, 57]           ch10.OccursV.OccursV(Object _a)

ch10.PieD.accept.ask   (Parameter)
  Declared as: PieVistor1
    Define [PieD.java, 92]           ch10.PieD.accept(PieVistor1 ask)

ch10.PiemanI.addTop.t   (Parameter)
  Declared as: Object
    Define [PiemanM.java, 5]         ch10.PiemanI.addTop(Object t)

ch10.PiemanI.occTop.o   (Parameter)
  Declared as: Object
    Define [PiemanM.java, 8]         ch10.PiemanI.occTop(Object o)

ch10.PiemanI.remTop.t   (Parameter)
  Declared as: Object
    Define [PiemanM.java, 6]         ch10.PiemanI.remTop(Object t)

ch10.PiemanI.substTop.n   (Parameter)
  Declared as: Object
    Define [PiemanM.java, 7]         ch10.PiemanI.substTop(Object n,Object o)

ch10.PiemanI.substTop.o   (Parameter)
  Declared as: Object
    Define [PiemanM.java, 7]         ch10.PiemanI.substTop(Object n,Object o)

ch10.PiemanM.addTop.t   (Parameter)
  Declared as: Object
    Define [PiemanM.java, 18]        ch10.PiemanM.addTop(Object t)
    Use [PiemanM.java, 20]           ch10.PiemanM.addTop(Object t)
    Use [PiemanM.java, 21]           ch10.PiemanM.addTop(Object t)

ch10.PiemanM.occTop.o   (Parameter)
  Declared as: Object
    Define [PiemanM.java, 39]        ch10.PiemanM.occTop(Object o)
                                                                     Page 211
                         Object Cross Reference Report
===============================================================================
    Use [PiemanM.java, 41]           ch10.PiemanM.occTop(Object o)

ch10.PiemanM.p   (Variable)
  Declared as: PieD=Bot()
    Define [PiemanM.java, 12]        ch10.PiemanM
    Set [PiemanM.java, 12]           ch10.PiemanM
    Set [PiemanM.java, 15]           ch10.PiemanM.PiemanM(PieD _p)
    Set [PiemanM.java, 20]           ch10.PiemanM.addTop(Object t)
    Use [PiemanM.java, 20]           ch10.PiemanM.addTop(Object t)
    Use [PiemanM.java, 41]           ch10.PiemanM.occTop(Object o)
    Set [PiemanM.java, 27]           ch10.PiemanM.remTop(Object t)
    Use [PiemanM.java, 27]           ch10.PiemanM.remTop(Object t)
    Use [PiemanM.java, 28]           ch10.PiemanM.remTop(Object t)
    Set [PiemanM.java, 34]           ch10.PiemanM.substTop(Object n,Object o)
    Use [PiemanM.java, 34]           ch10.PiemanM.substTop(Object n,Object o)
    Use [PiemanM.java, 35]           ch10.PiemanM.substTop(Object n,Object o)

ch10.PiemanM.PiemanM._p   (Parameter)
  Declared as: PieD
    Define [PiemanM.java, 13]        ch10.PiemanM.PiemanM(PieD _p)
    Use [PiemanM.java, 15]           ch10.PiemanM.PiemanM(PieD _p)

ch10.PiemanM.remTop.t   (Parameter)
  Declared as: Object
    Define [PiemanM.java, 25]        ch10.PiemanM.remTop(Object t)
    Use [PiemanM.java, 27]           ch10.PiemanM.remTop(Object t)

ch10.PiemanM.substTop.n   (Parameter)
  Declared as: Object
    Define [PiemanM.java, 32]        ch10.PiemanM.substTop(Object n,Object o)
    Use [PiemanM.java, 34]           ch10.PiemanM.substTop(Object n,Object o)

ch10.PiemanM.substTop.o   (Parameter)
  Declared as: Object
    Define [PiemanM.java, 32]        ch10.PiemanM.substTop(Object n,Object o)
    Use [PiemanM.java, 34]           ch10.PiemanM.substTop(Object n,Object o)

ch10.PieVistor1.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 9]            ch10.PieVistor1.forTop(Object t,PieD r)

ch10.PieVistor1.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 9]            ch10.PieVistor1.forTop(Object t,PieD r)

ch10.RemV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 23]           ch10.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 25]              ch10.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 27]              ch10.RemV.forTop(Object t,PieD r)

ch10.RemV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 23]           ch10.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 24]              ch10.RemV.forTop(Object t,PieD r)
    Use [PieD.java, 27]              ch10.RemV.forTop(Object t,PieD r)
                                                                     Page 212
                         Object Cross Reference Report
===============================================================================

ch10.RemV.o   (Variable)
  Declared as: Object
    Define [PieD.java, 13]           ch10.RemV
    Set [PieD.java, 16]              ch10.RemV.RemV(Object _o)
    Use [PieD.java, 24]              ch10.RemV.forTop(Object t,PieD r)

ch10.RemV.RemV._o   (Parameter)
  Declared as: Object
    Define [PieD.java, 14]           ch10.RemV.RemV(Object _o)
    Use [PieD.java, 16]              ch10.RemV.RemV(Object _o)

ch10.SalmonFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 147]          ch10.SalmonFish.equals(Object o)
    Use [PieD.java, 149]             ch10.SalmonFish.equals(Object o)

ch10.SubstV.forTop.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 45]           ch10.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 47]              ch10.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 49]              ch10.SubstV.forTop(Object t,PieD r)

ch10.SubstV.forTop.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 45]           ch10.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 46]              ch10.SubstV.forTop(Object t,PieD r)
    Use [PieD.java, 49]              ch10.SubstV.forTop(Object t,PieD r)

ch10.SubstV.n   (Variable)
  Declared as: Object
    Define [PieD.java, 34]           ch10.SubstV
    Set [PieD.java, 38]              ch10.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 47]              ch10.SubstV.forTop(Object t,PieD r)

ch10.SubstV.o   (Variable)
  Declared as: Object
    Define [PieD.java, 35]           ch10.SubstV
    Set [PieD.java, 39]              ch10.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 46]              ch10.SubstV.forTop(Object t,PieD r)

ch10.SubstV.SubstV._n   (Parameter)
  Declared as: Object
    Define [PieD.java, 36]           ch10.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 38]              ch10.SubstV.SubstV(Object _n,Object _o)

ch10.SubstV.SubstV._o   (Parameter)
  Declared as: Object
    Define [PieD.java, 36]           ch10.SubstV.SubstV(Object _n,Object _o)
    Use [PieD.java, 39]              ch10.SubstV.SubstV(Object _n,Object _o)

ch10.Top.accept.ask   (Parameter)
  Declared as: PieVistor1
    Define [PieD.java, 116]          ch10.Top.accept(PieVistor1 ask)
    Use [PieD.java, 118]             ch10.Top.accept(PieVistor1 ask)
                                                                     Page 213
                         Object Cross Reference Report
===============================================================================

ch10.Top.r   (Variable)
  Declared as: PieD
    Define [PieD.java, 109]          ch10.Top
    Set [PieD.java, 113]             ch10.Top.Top(Object t,PieD r)
    Use [PieD.java, 118]             ch10.Top.accept(PieVistor1 ask)

ch10.Top.t   (Variable)
  Declared as: Object
    Define [PieD.java, 108]          ch10.Top
    Set [PieD.java, 112]             ch10.Top.Top(Object t,PieD r)
    Use [PieD.java, 118]             ch10.Top.accept(PieVistor1 ask)

ch10.Top.Top.r   (Parameter)
  Declared as: PieD
    Define [PieD.java, 110]          ch10.Top.Top(Object t,PieD r)
    Use [PieD.java, 113]             ch10.Top.Top(Object t,PieD r)

ch10.Top.Top.t   (Parameter)
  Declared as: Object
    Define [PieD.java, 110]          ch10.Top.Top(Object t,PieD r)
    Use [PieD.java, 112]             ch10.Top.Top(Object t,PieD r)

ch10.TunaFish.equals.o   (Parameter)
  Declared as: Object
    Define [PieD.java, 157]          ch10.TunaFish.equals(Object o)
    Use [PieD.java, 159]             ch10.TunaFish.equals(Object o)

receive.result   (Parameter)
  Declared as: String
    Define [Callback.java, 8]        receive(String result)

receive.result   (Parameter)
  Declared as: String
    Define [Stranger.java, 34]       receive(String result)
    Use [Stranger.java, 35]          receive(String result)

ReCall.Stranger.askQuestion.question   (Parameter)
  Declared as: String
    Define [Stranger.java, 10]       ReCall.Stranger.askQuestion(String question)
    Use [Stranger.java, 19]          ReCall.Stranger.askQuestion.(Anon_1).run

ReCall.Stranger.Stranger.ye   (Parameter)
  Declared as: Ye
    Define [Stranger.java, 5]        ReCall.Stranger.Stranger(Ye ye)
    Use [Stranger.java, 6]           ReCall.Stranger.Stranger(Ye ye)

ReCall.Stranger.ye   (Private Variable)
  Declared as: Ye
    Define [Stranger.java, 4]        ReCall.Stranger
    Set [Stranger.java, 6]           ReCall.Stranger.Stranger(Ye ye)
    Use [Stranger.java, 19]          ReCall.Stranger.askQuestion.(Anon_1).run

ReCall.Test.main.args   (Parameter)
  Declared as: String[]
    Define [Test.java, 4]            ReCall.Test.main(String[] args)
                                                                     Page 214
                         Object Cross Reference Report
===============================================================================

ReCall.Test.main.stranger   (Variable)
  Declared as: Stranger=Stranger(zhaoliang)
    Define [Test.java, 9]            ReCall.Test.main(String[] args)
    Set [Test.java, 9]               ReCall.Test.main(String[] args)
    Use [Test.java, 15]              ReCall.Test.main(String[] args)

ReCall.Test.main.xiaodong   (Variable)
  Declared as: Wang=Wang(zhaoliang)
    Define [Test.java, 8]            ReCall.Test.main(String[] args)
    Set [Test.java, 8]               ReCall.Test.main(String[] args)
    Use [Test.java, 14]              ReCall.Test.main(String[] args)

ReCall.Test.main.zhaoliang   (Variable)
  Declared as: Ye=Ye()
    Define [Test.java, 5]            ReCall.Test.main(String[] args)
    Set [Test.java, 5]               ReCall.Test.main(String[] args)
    Use [Test.java, 8]               ReCall.Test.main(String[] args)
    Use [Test.java, 9]               ReCall.Test.main(String[] args)

receive.result   (Parameter)
  Declared as: String
    Define [Wang.java, 45]           receive(String result)
    Use [Wang.java, 46]              receive(String result)

ReCall.Wang.askQuestion.question   (Parameter)
  Declared as: String
    Define [Wang.java, 21]           ReCall.Wang.askQuestion(String question)
    Use [Wang.java, 30]              ReCall.Wang.askQuestion.(Anon_1).run

ReCall.Wang.Wang.ye   (Parameter)
  Declared as: Ye
    Define [Wang.java, 13]           ReCall.Wang.Wang(Ye ye)
    Use [Wang.java, 14]              ReCall.Wang.Wang(Ye ye)

ReCall.Wang.ye   (Private Variable)
  Declared as: Ye
    Define [Wang.java, 7]            ReCall.Wang
    Set [Wang.java, 14]              ReCall.Wang.Wang(Ye ye)
    Use [Wang.java, 30]              ReCall.Wang.askQuestion.(Anon_1).run

accept.(for_loop_1).i   (Variable)
  Declared as: int=0
    Set [Ye.java, 16]                accept(Callback callback,String question)
    Use [Ye.java, 16]                accept(Callback callback,String question)
    Modify [Ye.java, 16]             accept(Callback callback,String question)
    Define [Ye.java, 16]             accept(Callback callback,String question)

accept.(for_loop_2).i   (Variable)
  Declared as: int=0
    Set [Ye.java, 31]                accept(Callback callback,String question)
    Use [Ye.java, 31]                accept(Callback callback,String question)
    Modify [Ye.java, 31]             accept(Callback callback,String question)
    Define [Ye.java, 31]             accept(Callback callback,String question)
                                                                     Page 215
                         Object Cross Reference Report
===============================================================================

accept.callback   (Parameter)
  Declared as: Callback
    Define [Ye.java, 10]             accept(Callback callback,String question)
    Use [Ye.java, 24]                accept(Callback callback,String question)
    Use [Ye.java, 26]                accept(Callback callback,String question)
    Use [Ye.java, 43]                accept(Callback callback,String question)

accept.question   (Parameter)
  Declared as: String
    Define [Ye.java, 10]             accept(Callback callback,String question)
    Use [Ye.java, 11]                accept(Callback callback,String question)

accept.result   (Variable)
  Declared as: String=""
    Define [Ye.java, 23]             accept(Callback callback,String question)
    Set [Ye.java, 23]                accept(Callback callback,String question)
    Set [Ye.java, 25]                accept(Callback callback,String question)
    Set [Ye.java, 34]                accept(Callback callback,String question)
    Set [Ye.java, 36]                accept(Callback callback,String question)
    Use [Ye.java, 43]                accept(Callback callback,String question)

YeRestaurant.Restaurant.foods   (Private Variable)
  Declared as: List<Food>=ArrayList()
    Define [Restaurant.java, 36]     YeRestaurant.Restaurant
    Set [Restaurant.java, 36]        YeRestaurant.Restaurant
    Use [Restaurant.java, 72]        YeRestaurant.Restaurant.init
    Use [Restaurant.java, 91]        YeRestaurant.Restaurant.showFoods

YeRestaurant.Restaurant.init.(catch_1).e   (Catch Parameter)
  Declared as: IOException
    Use [Restaurant.java, 62]        YeRestaurant.Restaurant.init
    Define [Restaurant.java, 59]     YeRestaurant.Restaurant.init

YeRestaurant.Restaurant.init.(catch_2).e   (Catch Parameter)
  Declared as: ClassNotFoundException
    Define [Restaurant.java, 74]     YeRestaurant.Restaurant.init

YeRestaurant.Restaurant.init.(catch_3).e   (Catch Parameter)
  Declared as: InstantiationException
    Define [Restaurant.java, 78]     YeRestaurant.Restaurant.init

YeRestaurant.Restaurant.init.(catch_4).e   (Catch Parameter)
  Declared as: IllegalAccessException
    Use [Restaurant.java, 85]        YeRestaurant.Restaurant.init
    Define [Restaurant.java, 82]     YeRestaurant.Restaurant.init

YeRestaurant.Restaurant.init.(for_loop_1).food   (Variable)
  Declared as: Food=Food
    Set [Restaurant.java, 71]        YeRestaurant.Restaurant.init
    Use [Restaurant.java, 72]        YeRestaurant.Restaurant.init
    Define [Restaurant.java, 71]     YeRestaurant.Restaurant.init

YeRestaurant.Restaurant.init.(for_loop_1).foodClassName   (Variable)
  Declared as: Object
    Use [Restaurant.java, 69]        YeRestaurant.Restaurant.init
                                                                     Page 216
                         Object Cross Reference Report
===============================================================================
    Define [Restaurant.java, 65]     YeRestaurant.Restaurant.init

YeRestaurant.Restaurant.init.(for_loop_1).temp   (Variable)
  Declared as: Class
    Set [Restaurant.java, 69]        YeRestaurant.Restaurant.init
    Use [Restaurant.java, 71]        YeRestaurant.Restaurant.init
    Define [Restaurant.java, 67]     YeRestaurant.Restaurant.init

YeRestaurant.Restaurant.init.coll1   (Variable)
  Declared as: Collection=prop.values
    Define [Restaurant.java, 64]     YeRestaurant.Restaurant.init
    Set [Restaurant.java, 64]        YeRestaurant.Restaurant.init
    Use [Restaurant.java, 65]        YeRestaurant.Restaurant.init

YeRestaurant.Restaurant.init.is   (Variable)
  Declared as: InputStream=Restaurant.class.getResourceAsStream
    Define [Restaurant.java, 46]     YeRestaurant.Restaurant.init
    Set [Restaurant.java, 46]        YeRestaurant.Restaurant.init
    Use [Restaurant.java, 58]        YeRestaurant.Restaurant.init

YeRestaurant.Restaurant.init.prop   (Variable)
  Declared as: Properties=Properties()
    Define [Restaurant.java, 47]     YeRestaurant.Restaurant.init
    Set [Restaurant.java, 47]        YeRestaurant.Restaurant.init
    Use [Restaurant.java, 58]        YeRestaurant.Restaurant.init
    Use [Restaurant.java, 64]        YeRestaurant.Restaurant.init

YeRestaurant.Restaurant.main.args   (Parameter)
  Declared as: String[]
    Define [Restaurant.java, 97]     YeRestaurant.Restaurant.main(String[] args)

YeRestaurant.Restaurant.main.res   (Variable)
  Declared as: Restaurant=Restaurant()
    Define [Restaurant.java, 101]    YeRestaurant.Restaurant.main(String[] args)
    Set [Restaurant.java, 101]       YeRestaurant.Restaurant.main(String[] args)
    Use [Restaurant.java, 104]       YeRestaurant.Restaurant.main(String[] args)
    Use [Restaurant.java, 105]       YeRestaurant.Restaurant.main(String[] args)

YeRestaurant.Restaurant.showFoods.(for_loop_2).temp   (Variable)
  Declared as: Food
    Use [Restaurant.java, 94]        YeRestaurant.Restaurant.showFoods
    Define [Restaurant.java, 91]     YeRestaurant.Restaurant.showFoods
                                                                     Page 217
                          Type Cross Reference Report
===============================================================================

ch01.Base   (Class)
    Define [LayerD.java, 14]         LayerD.java

ch01.CartesianPt   (Class)
    Define [PointD.java, 11]         PointD.java

ch01.LayerD   (Public Abstract Class)
    Define [LayerD.java, 4]          LayerD.java
    Extend [LayerD.java, 14]         ch01.Base
    Extend [LayerD.java, 25]         ch01.Slice
    Typed [LayerD.java, 28]          ch01.Slice.Slice._s
    Typed [LayerD.java, 27]          ch01.Slice.s1

ch01.ManHattanPt   (Class)
    Define [PointD.java, 23]         PointD.java
    Create [Test.java, 6]            ch01.Test.main(String[] args)
    Typed [Test.java, 6]             ch01.Test.main.mhpt
    Create [TestMain.java, 5]        ch01.TestMain.main(String[] args)
    Typed [TestMain.java, 5]         ch01.TestMain.main.pd

ch01.MoreThanOne   (Class)
    Define [NumD.java, 43]           NumD.java

ch01.NumD   (Public Abstract Class)
    Define [NumD.java, 31]           NumD.java
    Extend [NumD.java, 43]           ch01.MoreThanOne
    Typed [NumD.java, 46]            ch01.MoreThanOne.MoreThanOne._d
    Typed [NumD.java, 45]            ch01.MoreThanOne.predecessor
    Extend [NumD.java, 37]           ch01.Zero

ch01.Pepper   (Class)
    Define [Seasoning.java, 14]      Seasoning.java

ch01.PointD   (Abstract Class)
    Define [PointD.java, 5]          PointD.java
    Extend [PointD.java, 11]         ch01.CartesianPt
    Extend [PointD.java, 23]         ch01.ManHattanPt

ch01.Sage   (Class)
    Define [Seasoning.java, 16]      Seasoning.java

ch01.Salt   (Class)
    Define [Seasoning.java, 13]      Seasoning.java

ch01.Seasoning   (Public Abstract Class)
    Define [Seasoning.java, 9]       Seasoning.java
    Extend [Seasoning.java, 14]      ch01.Pepper
    Extend [Seasoning.java, 16]      ch01.Sage
    Extend [Seasoning.java, 13]      ch01.Salt
    Extend [Seasoning.java, 15]      ch01.Thyme

ch01.Slice   (Class)
    Define [LayerD.java, 25]         LayerD.java

ch01.Test   (Public Class)
    Define [Test.java, 3]            Test.java

ch01.TestMain   (Public Class)
    Define [TestMain.java, 3]        TestMain.java

ch01.Thyme   (Class)
    Define [Seasoning.java, 15]      Seasoning.java

ch01.Zero   (Class)
    Define [NumD.java, 37]           NumD.java

ch02.Brass   (Class)
    Define [KaoRouPlates.java, 21]   KaoRouPlates.java

ch02.CartesianPt   (Class)
    Define [PointD.java, 20]         PointD.java
    Typed [PointDCloserSimplify.java, 55]   ch02.ManHattanPt2.closerTo0.p1
    Create [Main.java, 6]            ch02.Main.main(String[] args)

ch02.CartesianPt1   (Class)
    Define [PointDCloser.java, 15]   PointDCloser.java
    Typed [PointDCloser.java, 30]    ch02.CartesianPt1.closerTo0.p1

ch02.CartesianPt2   (Class)
    Define [PointDCloserSimplify.java, 22]   PointDCloserSimplify.java
    Typed [PointDCloserSimplify.java, 13]   ch02.PointDCloserSimplify.closerTo0.p1

ch02.Copper   (Class)
    Define [KaoRouPlates.java, 25]   KaoRouPlates.java

ch02.Dagger   (Class)
    Define [KaoRouChuan.java, 13]    KaoRouChuan.java

ch02.Gold   (Class)
    Define [KaoRouPlates.java, 13]   KaoRouPlates.java

ch02.Holder   (Class)
    Define [KaoRou.java, 20]         KaoRou.java

ch02.KaoRou   (Public Abstract Class)
    Define [KaoRou.java, 9]          KaoRou.java
    Extend [KaoRou.java, 20]         ch02.Holder
    Extend [KaoRou.java, 92]         ch02.Pepper
    Typed [KaoRou.java, 95]          ch02.Pepper.Pepper.kaoroujia
    Typed [KaoRou.java, 94]          ch02.Pepper.kaoroujia
    Extend [KaoRou.java, 74]         ch02.Radish
    Typed [KaoRou.java, 77]          ch02.Radish.Radish.kaoroujia
    Typed [KaoRou.java, 76]          ch02.Radish.kaoroujia
    Extend [KaoRou.java, 38]         ch02.Shallot
    Typed [KaoRou.java, 41]          ch02.Shallot.Shallot.kaoroujia
    Typed [KaoRou.java, 40]          ch02.Shallot.kaoroujia
    Extend [KaoRou.java, 56]         ch02.Shrimp
    Typed [KaoRou.java, 59]          ch02.Shrimp.Shrimp.kaoroujia
    Typed [KaoRou.java, 58]          ch02.Shrimp.kaoroujia
    Extend [KaoRou.java, 110]        ch02.Zucchini
    Typed [KaoRou.java, 113]         ch02.Zucchini.Zucchini.kaoroujia
    Typed [KaoRou.java, 112]         ch02.Zucchini.kaoroujia

ch02.KaoRouChuan   (Public Abstract Class)
    Define [KaoRouChuan.java, 7]     KaoRouChuan.java
    Extend [KaoRouChuan.java, 13]    ch02.Dagger
    Extend [KaoRouChuan.java, 17]    ch02.Sabre
    Extend [KaoRouChuan.java, 21]    ch02.Sword

ch02.KaoRouPlates   (Public Abstract Class)
    Define [KaoRouPlates.java, 7]    KaoRouPlates.java
    Extend [KaoRouPlates.java, 21]   ch02.Brass
    Extend [KaoRouPlates.java, 25]   ch02.Copper
    Extend [KaoRouPlates.java, 13]   ch02.Gold
    Extend [KaoRouPlates.java, 17]   ch02.Silver
    Extend [KaoRouPlates.java, 28]   ch02.Wood
                                                                     Page 218
                          Type Cross Reference Report
===============================================================================

ch02.Lamb   (Class)
    Define [YangRouChuan.java, 70]   YangRouChuan.java
    Create [TestTYangRouChuan.java, 10]   ch02.TestTYangRouChuan.main(String[] args)

ch02.Main   (Public Class)
    Define [Main.java, 3]            Main.java

ch02.ManHattanPt   (Class)
    Define [PointD.java, 37]         PointD.java
    Create [Test.java, 6]            ch02.Test.main(String[] args)
    Typed [Test.java, 6]             ch02.Test.main.mhpt
    Create [Main.java, 5]            ch02.Main.main(String[] args)

ch02.ManHattanPt1   (Class)
    Define [PointDCloser.java, 38]   PointDCloser.java
    Typed [PointDCloser.java, 52]    ch02.ManHattanPt1.closerTo0.p1
    Create [Test.java, 9]            ch02.Test.main(String[] args)
    Create [Test.java, 10]           ch02.Test.main(String[] args)
    Typed [Test.java, 9]             ch02.Test.main.m2
    Typed [Test.java, 10]            ch02.Test.main.m3

ch02.ManHattanPt2   (Class)
    Define [PointDCloserSimplify.java, 41]   PointDCloserSimplify.java

ch02.MoreThanOne   (Class)
    Define [NumD.java, 43]           NumD.java

ch02.NumD   (Public Abstract Class)
    Define [NumD.java, 31]           NumD.java
    Extend [NumD.java, 43]           ch02.MoreThanOne
    Typed [NumD.java, 46]            ch02.MoreThanOne.MoreThanOne._d
    Typed [NumD.java, 45]            ch02.MoreThanOne.predecessor
    Extend [NumD.java, 37]           ch02.Zero

ch02.Onion   (Class)
    Define [YangRouChuan.java, 44]   YangRouChuan.java
    Create [TestTYangRouChuan.java, 8]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 8]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 9]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 9]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 10]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 12]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 12]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 13]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 13]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 14]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 14]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 15]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 15]   ch02.TestTYangRouChuan.main(String[] args)
    Create [Main.java, 9]            ch02.Main.main(String[] args)
    Create [Main.java, 9]            ch02.Main.main(String[] args)

ch02.Pepper   (Class)
    Define [KaoRou.java, 92]         KaoRou.java

ch02.PointD   (Public Abstract Class)
    Define [PointD.java, 5]          PointD.java
    Extend [PointD.java, 20]         ch02.CartesianPt
    Extend [PointD.java, 37]         ch02.ManHattanPt
    Typed [Main.java, 5]             ch02.Main.main.p
    Typed [Main.java, 6]             ch02.Main.main.p1

ch02.PointDCloser   (Public Abstract Class)
    Define [PointDCloser.java, 6]    PointDCloser.java
    Extend [PointDCloser.java, 15]   ch02.CartesianPt1
    Extend [PointDCloser.java, 38]   ch02.ManHattanPt1

ch02.PointDCloserSimplify   (Public Abstract Class)
    Define [PointDCloserSimplify.java, 8]   PointDCloserSimplify.java
    Extend [PointDCloserSimplify.java, 22]   ch02.CartesianPt2
    Extend [PointDCloserSimplify.java, 41]   ch02.ManHattanPt2

ch02.Radish   (Class)
    Define [KaoRou.java, 74]         KaoRou.java

ch02.Sabre   (Class)
    Define [KaoRouChuan.java, 17]    KaoRouChuan.java

ch02.Shallot   (Class)
    Define [KaoRou.java, 38]         KaoRou.java

ch02.Shrimp   (Class)
    Define [KaoRou.java, 56]         KaoRou.java

ch02.Silver   (Class)
    Define [KaoRouPlates.java, 17]   KaoRouPlates.java

ch02.Skewer   (Class)
    Define [YangRouChuan.java, 26]   YangRouChuan.java
    Create [TestTYangRouChuan.java, 8]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 9]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 10]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 12]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 13]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 14]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 15]   ch02.TestTYangRouChuan.main(String[] args)
    Create [Main.java, 9]            ch02.Main.main(String[] args)

ch02.Sword   (Class)
    Define [KaoRouChuan.java, 21]    KaoRouChuan.java

ch02.Test   (Public Class)
    Define [Test.java, 3]            Test.java

ch02.TestTYangRouChuan   (Public Class)
    Define [TestTYangRouChuan.java, 3]   TestTYangRouChuan.java

ch02.Tomato   (Class)
    Define [YangRouChuan.java, 92]   YangRouChuan.java
    Create [TestTYangRouChuan.java, 12]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 13]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 14]   ch02.TestTYangRouChuan.main(String[] args)
    Create [TestTYangRouChuan.java, 15]   ch02.TestTYangRouChuan.main(String[] args)
    Create [Main.java, 9]            ch02.Main.main(String[] args)

ch02.Wood   (Class)
    Define [KaoRouPlates.java, 28]   KaoRouPlates.java

ch02.YangRouChuan   (Public Abstract Class)
    Define [YangRouChuan.java, 4]    YangRouChuan.java
    Extend [YangRouChuan.java, 70]   ch02.Lamb
    Typed [YangRouChuan.java, 73]    ch02.Lamb.Lamb._y
    Typed [YangRouChuan.java, 72]    ch02.Lamb.y
    Extend [YangRouChuan.java, 44]   ch02.Onion
    Typed [YangRouChuan.java, 47]    ch02.Onion.Onion._s
    Typed [YangRouChuan.java, 45]    ch02.Onion.s1
    Extend [YangRouChuan.java, 26]   ch02.Skewer
    Extend [YangRouChuan.java, 92]   ch02.Tomato
    Typed [YangRouChuan.java, 95]    ch02.Tomato.Tomato._y
    Typed [YangRouChuan.java, 94]    ch02.Tomato.y

ch02.Zero   (Class)
    Define [NumD.java, 37]           NumD.java

ch02.Zucchini   (Class)
    Define [KaoRou.java, 110]        KaoRou.java

ch03.Anchovy   (Class)
    Define [PizzaD.java, 96]         PizzaD.java
    Create [PizzaD.java, 114]        ch03.Anchovy.topAwC
                                                                     Page 219
                          Type Cross Reference Report
===============================================================================

ch03.Cheese   (Class)
    Define [PizzaD.java, 37]         PizzaD.java
    Create [PizzaD.java, 120]        ch03.Anchovy.subAwC
    Create [PizzaD.java, 114]        ch03.Anchovy.topAwC
    Create [PizzaD.java, 47]         ch03.Cheese.remA
    Create [PizzaD.java, 59]         ch03.Cheese.subAwC
    Create [PizzaD.java, 53]         ch03.Cheese.topAwC

ch03.Crust   (Class)
    Define [PizzaD.java, 13]         PizzaD.java
    Create [PizzaD.java, 18]         ch03.Crust.remA
    Create [PizzaD.java, 30]         ch03.Crust.subAwC
    Create [PizzaD.java, 24]         ch03.Crust.topAwC

ch03.Olive   (Class)
    Define [PizzaD.java, 67]         PizzaD.java
    Create [PizzaD.java, 77]         ch03.Olive.remA
    Create [PizzaD.java, 89]         ch03.Olive.subAwC
    Create [PizzaD.java, 83]         ch03.Olive.topAwC

ch03.PizzaD   (Public Abstract Class)
    Define [PizzaD.java, 4]          PizzaD.java
    Extend [PizzaD.java, 96]         ch03.Anchovy
    Typed [PizzaD.java, 99]          ch03.Anchovy.Anchovy._p
    Typed [PizzaD.java, 104]         ch03.Anchovy.remA
    Typed [PizzaD.java, 118]         ch03.Anchovy.subAwC
    Typed [PizzaD.java, 112]         ch03.Anchovy.topAwC
    Typed [PizzaD.java, 98]          ch03.Anchovy.p
    Extend [PizzaD.java, 37]         ch03.Cheese
    Typed [PizzaD.java, 40]          ch03.Cheese.Cheese._p
    Typed [PizzaD.java, 45]          ch03.Cheese.remA
    Typed [PizzaD.java, 57]          ch03.Cheese.subAwC
    Typed [PizzaD.java, 51]          ch03.Cheese.topAwC
    Typed [PizzaD.java, 39]          ch03.Cheese.p
    Extend [PizzaD.java, 13]         ch03.Crust
    Typed [PizzaD.java, 16]          ch03.Crust.remA
    Typed [PizzaD.java, 28]          ch03.Crust.subAwC
    Typed [PizzaD.java, 22]          ch03.Crust.topAwC
    Extend [PizzaD.java, 67]         ch03.Olive
    Typed [PizzaD.java, 70]          ch03.Olive.Olive._p
    Typed [PizzaD.java, 75]          ch03.Olive.remA
    Typed [PizzaD.java, 87]          ch03.Olive.subAwC
    Typed [PizzaD.java, 81]          ch03.Olive.topAwC
    Typed [PizzaD.java, 69]          ch03.Olive.p
    Typed [PizzaD.java, 5]           ch03.PizzaD.remA
    Typed [PizzaD.java, 7]           ch03.PizzaD.subAwC
    Typed [PizzaD.java, 6]           ch03.PizzaD.topAwC
    Extend [PizzaD.java, 127]        ch03.Sausage
    Typed [PizzaD.java, 130]         ch03.Sausage.Sausage._p
    Typed [PizzaD.java, 135]         ch03.Sausage.remA
    Typed [PizzaD.java, 147]         ch03.Sausage.subAwC
    Typed [PizzaD.java, 141]         ch03.Sausage.topAwC
    Typed [PizzaD.java, 129]         ch03.Sausage.p
    Extend [PizzaD.java, 164]        ch03.Spinach
    Typed [PizzaD.java, 167]         ch03.Spinach.Spinach._p
    Typed [PizzaD.java, 172]         ch03.Spinach.remA
    Typed [PizzaD.java, 184]         ch03.Spinach.subAwC
    Typed [PizzaD.java, 178]         ch03.Spinach.topAwC
    Typed [PizzaD.java, 166]         ch03.Spinach.p

ch03.Sausage   (Class)
    Define [PizzaD.java, 127]        PizzaD.java
    Create [PizzaD.java, 137]        ch03.Sausage.remA
    Create [PizzaD.java, 149]        ch03.Sausage.subAwC
    Create [PizzaD.java, 143]        ch03.Sausage.topAwC

ch03.Spinach   (Class)
    Define [PizzaD.java, 164]        PizzaD.java
    Create [PizzaD.java, 174]        ch03.Spinach.remA
    Create [PizzaD.java, 186]        ch03.Spinach.subAwC
    Create [PizzaD.java, 180]        ch03.Spinach.topAwC

ch04.IsVegetarianV   (Class)
    Define [YangRouChuan.java, 20]   YangRouChuan.java
    Create [YangRouChuan.java, 38]   ch04.YangRouChuan
    Typed [YangRouChuan.java, 38]    ch04.YangRouChuan.ivFn

ch04.Lamb   (Class)
    Define [YangRouChuan.java, 89]   YangRouChuan.java

ch04.Onion   (Class)
    Define [YangRouChuan.java, 67]   YangRouChuan.java

ch04.OnlyOnionsV   (Class)
    Define [YangRouChuan.java, 5]    YangRouChuan.java
    Create [YangRouChuan.java, 37]   ch04.YangRouChuan
    Typed [YangRouChuan.java, 37]    ch04.YangRouChuan.ooFn

ch04.Skewer   (Class)
    Define [YangRouChuan.java, 49]   YangRouChuan.java

ch04.Tomato   (Class)
    Define [YangRouChuan.java, 111]   YangRouChuan.java

ch04.YangRouChuan   (Public Abstract Class)
    Define [YangRouChuan.java, 34]   YangRouChuan.java
    Typed [YangRouChuan.java, 27]    ch04.IsVegetarianV.forLamb.y
    Typed [YangRouChuan.java, 24]    ch04.IsVegetarianV.forOnion.y
    Typed [YangRouChuan.java, 30]    ch04.IsVegetarianV.forTomato.y
    Extend [YangRouChuan.java, 89]   ch04.Lamb
    Typed [YangRouChuan.java, 92]    ch04.Lamb.Lamb._y
    Typed [YangRouChuan.java, 91]    ch04.Lamb.y
    Extend [YangRouChuan.java, 67]   ch04.Onion
    Typed [YangRouChuan.java, 70]    ch04.Onion.Onion._s
    Typed [YangRouChuan.java, 68]    ch04.Onion.s1
    Typed [YangRouChuan.java, 12]    ch04.OnlyOnionsV.forLamb.y
    Typed [YangRouChuan.java, 9]     ch04.OnlyOnionsV.forOnion.y
    Typed [YangRouChuan.java, 15]    ch04.OnlyOnionsV.forTomato.y
    Extend [YangRouChuan.java, 49]   ch04.Skewer
    Extend [YangRouChuan.java, 111]   ch04.Tomato
    Typed [YangRouChuan.java, 114]   ch04.Tomato.Tomato._y
    Typed [YangRouChuan.java, 113]   ch04.Tomato.y

ch05.AnchovyFish   (Class)
    Define [PieD.java, 9]            PieD.java
    Use [PieD.java, 14]              ch05.AnchovyFish.equals(Object o)
    Create [PieD.java, 46]           ch05.RemAV.forTop(Object t,PieD r)

ch05.Bot   (Class)
    Define [PieD.java, 76]           PieD.java
    Create [PieD.java, 43]           ch05.RemAV.forBot
    Create [PieD.java, 56]           ch05.RemFishV.forBot(FishD f)

ch05.Bot1   (Class)
    Define [PieDGeneral.java, 57]    PieDGeneral.java
    Create [PieDGeneral.java, 23]    ch05.RemFishInt.forBot(FishD f)
    Create [PieDGeneral.java, 8]     ch05.RemFishV1.forBot(FishD f)
    Create [PieDGeneral.java, 39]    ch05.RemV.forBot(Object f)

ch05.FishD   (Abstract Class)
    Define [PieD.java, 5]            PieD.java
    Extend [PieD.java, 9]            ch05.AnchovyFish
    Typed [PieD.java, 85]            ch05.Bot.remFish.f
    Typed [PieD.java, 73]            ch05.PieD.remFish.f
    Typed [PieD.java, 55]            ch05.RemFishV.forBot.f
    Typed [PieD.java, 59]            ch05.RemFishV.forTop.f
    Extend [PieD.java, 19]           ch05.SalmonFish
    Typed [PieD.java, 110]           ch05.Top.remFish.f
    Extend [PieD.java, 29]           ch05.TunaFish
    Typed [PieDGeneral.java, 22]     ch05.RemFishInt.forBot.f
    Typed [PieDGeneral.java, 7]      ch05.RemFishV1.forBot.f
    Typed [PieDGeneral.java, 11]     ch05.RemFishV1.forTop.f

ch05.MoreThanOne   (Class)
    Define [NumD.java, 45]           NumD.java
    Use [NumD.java, 54]              ch05.MoreThanOne.equals(Object o)
    Cast [NumD.java, 55]             ch05.MoreThanOne.equals(Object o)

ch05.NumD   (Public Abstract Class)
    Define [NumD.java, 31]           NumD.java
    Extend [NumD.java, 45]           ch05.MoreThanOne
    Typed [NumD.java, 48]            ch05.MoreThanOne.MoreThanOne._d
    Typed [NumD.java, 47]            ch05.MoreThanOne.predecessor
    Extend [NumD.java, 37]           ch05.Zero

ch05.PieD   (Public Abstract Class)
    Define [PieD.java, 67]           PieD.java
    Extend [PieD.java, 76]           ch05.Bot
    Typed [PieD.java, 79]            ch05.Bot.remA
    Typed [PieD.java, 85]            ch05.Bot.remFish(FishD f)
    Typed [PieD.java, 72]            ch05.PieD.remA
    Typed [PieD.java, 73]            ch05.PieD.remFish(FishD f)
    Typed [PieD.java, 42]            ch05.RemAV.forBot
    Typed [PieD.java, 45]            ch05.RemAV.forTop(Object t,PieD r)
    Typed [PieD.java, 45]            ch05.RemAV.forTop.r
    Typed [PieD.java, 55]            ch05.RemFishV.forBot(FishD f)
    Typed [PieD.java, 59]            ch05.RemFishV.forTop(Object t,PieD r,FishD f)
    Typed [PieD.java, 59]            ch05.RemFishV.forTop.r
    Extend [PieD.java, 93]           ch05.Top
    Typed [PieD.java, 97]            ch05.Top.Top.r
    Typed [PieD.java, 104]           ch05.Top.remA
    Typed [PieD.java, 110]           ch05.Top.remFish(FishD f)
    Typed [PieD.java, 96]            ch05.Top.r

ch05.PieDGeneral   (Public Abstract Class)
    Define [PieDGeneral.java, 50]    PieDGeneral.java
    Extend [PieDGeneral.java, 57]    ch05.Bot1
    Typed [PieDGeneral.java, 60]     ch05.Bot1.remA(Object o)
    Typed [PieDGeneral.java, 54]     ch05.PieDGeneral.remA(Object o)
    Typed [PieDGeneral.java, 22]     ch05.RemFishInt.forBot(FishD f)
    Typed [PieDGeneral.java, 26]     ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
    Typed [PieDGeneral.java, 26]     ch05.RemFishInt.forTop.r
    Typed [PieDGeneral.java, 7]      ch05.RemFishV1.forBot(FishD f)
    Typed [PieDGeneral.java, 11]     ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
    Typed [PieDGeneral.java, 11]     ch05.RemFishV1.forTop.r
    Typed [PieDGeneral.java, 38]     ch05.RemV.forBot(Object f)
    Typed [PieDGeneral.java, 42]     ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
    Typed [PieDGeneral.java, 42]     ch05.RemV.forTop.r
    Extend [PieDGeneral.java, 67]    ch05.Top1
    Typed [PieDGeneral.java, 71]     ch05.Top1.Top1.r
    Typed [PieDGeneral.java, 77]     ch05.Top1.remA(Object f)
    Typed [PieDGeneral.java, 70]     ch05.Top1.r

ch05.RemAV   (Class)
    Define [PieD.java, 41]           PieD.java
    Create [PieD.java, 70]           ch05.PieD
    Typed [PieD.java, 70]            ch05.PieD.raFn

ch05.RemFishInt   (Class)
    Define [PieDGeneral.java, 21]    PieDGeneral.java

ch05.RemFishV   (Class)
    Define [PieD.java, 54]           PieD.java
    Create [PieD.java, 71]           ch05.PieD
    Typed [PieD.java, 71]            ch05.PieD.rfFn

ch05.RemFishV1   (Class)
    Define [PieDGeneral.java, 6]     PieDGeneral.java

ch05.RemV   (Class)
    Define [PieDGeneral.java, 37]    PieDGeneral.java
    Create [PieDGeneral.java, 53]    ch05.PieDGeneral
    Typed [PieDGeneral.java, 53]     ch05.PieDGeneral.remFn

ch05.SalmonFish   (Class)
    Define [PieD.java, 19]           PieD.java
    Use [PieD.java, 24]              ch05.SalmonFish.equals(Object o)
                                                                     Page 220
                          Type Cross Reference Report
===============================================================================

ch05.Top   (Class)
    Define [PieD.java, 93]           PieD.java
    Create [PieD.java, 49]           ch05.RemAV.forTop(Object t,PieD r)
    Create [PieD.java, 63]           ch05.RemFishV.forTop(Object t,PieD r,FishD f)

ch05.Top1   (Class)
    Define [PieDGeneral.java, 67]    PieDGeneral.java
    Create [PieDGeneral.java, 30]    ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
    Create [PieDGeneral.java, 15]    ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
    Create [PieDGeneral.java, 46]    ch05.RemV.forTop(Object t,PieDGeneral r,Object f)

ch05.TunaFish   (Class)
    Define [PieD.java, 29]           PieD.java
    Use [PieD.java, 34]              ch05.TunaFish.equals(Object o)

ch05.Zero   (Class)
    Define [NumD.java, 37]           NumD.java
    Use [NumD.java, 39]              ch05.Zero.equals(Object o)

ch051.AnchovyFish   (Class)
    Define [PieD.java, 10]           PieD.java
    Use [PieD.java, 15]              ch051.AnchovyFish.equals(Object o)

ch051.Bot   (Class)
    Define [PieD.java, 141]          PieD.java
    Create [PieD.java, 59]           ch051.RemFishInt.forBot(FishD f)
    Create [PieD.java, 44]           ch051.RemFishV.forBot(FishD f)
    Create [PieD.java, 75]           ch051.RemV.forBot(Object f)
    Create [PieD.java, 92]           ch051.SubstFishV.forBot(FishD n,FishD o)
    Create [PieD.java, 107]          ch051.SubstIntV.forBot(Integer n,Integer o)
    Create [PieD.java, 121]          ch051.SubstV.forBot(Object n,Object o)

ch051.FishD   (Abstract Class)
    Define [PieD.java, 6]            PieD.java
    Extend [PieD.java, 10]           ch051.AnchovyFish
    Typed [PieD.java, 58]            ch051.RemFishInt.forBot.f
    Typed [PieD.java, 43]            ch051.RemFishV.forBot.f
    Typed [PieD.java, 47]            ch051.RemFishV.forTop.f
    Extend [PieD.java, 20]           ch051.SalmonFish
    Typed [PieD.java, 90]            ch051.SubstFishV.forBot.n
    Typed [PieD.java, 90]            ch051.SubstFishV.forBot.o
    Typed [PieD.java, 94]            ch051.SubstFishV.forTop.n
    Typed [PieD.java, 94]            ch051.SubstFishV.forTop.o
    Extend [PieD.java, 30]           ch051.TunaFish

ch051.PieD   (Public Abstract Class)
    Define [PieD.java, 132]          PieD.java
    Extend [PieD.java, 141]          ch051.Bot
    Typed [PieD.java, 144]           ch051.Bot.remA(Object o)
    Typed [PieD.java, 150]           ch051.Bot.substFish(Object n,Object o)
    Typed [PieD.java, 137]           ch051.PieD.remA(Object o)
    Typed [PieD.java, 138]           ch051.PieD.substFish(Object n,Object o)
    Typed [PieD.java, 58]            ch051.RemFishInt.forBot(FishD f)
    Typed [PieD.java, 62]            ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
    Typed [PieD.java, 62]            ch051.RemFishInt.forTop.r
    Typed [PieD.java, 43]            ch051.RemFishV.forBot(FishD f)
    Typed [PieD.java, 47]            ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Typed [PieD.java, 47]            ch051.RemFishV.forTop.r
    Typed [PieD.java, 74]            ch051.RemV.forBot(Object f)
    Typed [PieD.java, 78]            ch051.RemV.forTop(Object t,PieD r,Object f)
    Typed [PieD.java, 78]            ch051.RemV.forTop.r
    Typed [PieD.java, 90]            ch051.SubstFishV.forBot(FishD n,FishD o)
    Typed [PieD.java, 94]            ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Typed [PieD.java, 94]            ch051.SubstFishV.forTop.r
    Typed [PieD.java, 105]           ch051.SubstIntV.forBot(Integer n,Integer o)
    Typed [PieD.java, 109]           ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Typed [PieD.java, 109]           ch051.SubstIntV.forTop.r
    Typed [PieD.java, 119]           ch051.SubstV.forBot(Object n,Object o)
    Typed [PieD.java, 123]           ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Typed [PieD.java, 123]           ch051.SubstV.forTop.r
    Extend [PieD.java, 157]          ch051.Top
    Typed [PieD.java, 161]           ch051.Top.Top.r
    Typed [PieD.java, 167]           ch051.Top.remA(Object f)
    Typed [PieD.java, 172]           ch051.Top.substFish(Object n,Object o)
    Typed [PieD.java, 160]           ch051.Top.r

ch051.RemFishInt   (Class)
    Define [PieD.java, 57]           PieD.java

ch051.RemFishV   (Class)
    Define [PieD.java, 42]           PieD.java

ch051.RemV   (Class)
    Define [PieD.java, 73]           PieD.java
    Create [PieD.java, 135]          ch051.PieD
    Typed [PieD.java, 135]           ch051.PieD.remFn

ch051.SalmonFish   (Class)
    Define [PieD.java, 20]           PieD.java
    Use [PieD.java, 25]              ch051.SalmonFish.equals(Object o)

ch051.SubstFishV   (Class)
    Define [PieD.java, 89]           PieD.java

ch051.SubstIntV   (Class)
    Define [PieD.java, 104]          PieD.java

ch051.SubstV   (Class)
    Define [PieD.java, 118]          PieD.java
    Create [PieD.java, 136]          ch051.PieD
    Typed [PieD.java, 136]           ch051.PieD.subFn

ch051.Top   (Class)
    Define [PieD.java, 157]          PieD.java
    Create [PieD.java, 66]           ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
    Create [PieD.java, 51]           ch051.RemFishV.forTop(Object t,PieD r,FishD f)
    Create [PieD.java, 82]           ch051.RemV.forTop(Object t,PieD r,Object f)
    Create [PieD.java, 96]           ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Create [PieD.java, 98]           ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
    Create [PieD.java, 111]          ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Create [PieD.java, 113]          ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
    Create [PieD.java, 125]          ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Create [PieD.java, 127]          ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)

ch051.TunaFish   (Class)
    Define [PieD.java, 30]           PieD.java
    Use [PieD.java, 35]              ch051.TunaFish.equals(Object o)

ch06.AnchovyFish   (Class)
    Define [PieD.java, 10]           PieD.java
    Use [PieD.java, 15]              ch06.AnchovyFish.equals(Object o)

ch06.Bot   (Class)
    Define [PieD.java, 141]          PieD.java
    Create [PieD.java, 75]           ch06.RemV.forBot(Object f)
    Create [PieD.java, 121]          ch06.SubstV.forBot(Object n,Object o)

ch06.FishD   (Abstract Class)
    Define [PieD.java, 6]            PieD.java
    Extend [PieD.java, 10]           ch06.AnchovyFish
    Extend [PieD.java, 20]           ch06.SalmonFish
    Extend [PieD.java, 30]           ch06.TunaFish

ch06.PieD   (Public Abstract Class)
    Define [PieD.java, 132]          PieD.java
    Extend [PieD.java, 141]          ch06.Bot
    Typed [PieD.java, 144]           ch06.Bot.remA(RemV remFn,Object o)
    Typed [PieD.java, 150]           ch06.Bot.substFish(SubstV subFn,Object n,Object o)
    Typed [PieD.java, 137]           ch06.PieD.remA(RemV remFn,Object o)
    Typed [PieD.java, 138]           ch06.PieD.substFish(SubstV subFn,Object n,Object o)
    Typed [PieD.java, 74]            ch06.RemV.forBot(Object f)
    Typed [PieD.java, 78]            ch06.RemV.forTop(Object t,PieD r,Object f)
    Typed [PieD.java, 78]            ch06.RemV.forTop.r
    Typed [PieD.java, 119]           ch06.SubstV.forBot(Object n,Object o)
    Typed [PieD.java, 123]           ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Typed [PieD.java, 123]           ch06.SubstV.forTop.r
    Extend [PieD.java, 157]          ch06.Top
    Typed [PieD.java, 161]           ch06.Top.Top.r
    Typed [PieD.java, 167]           ch06.Top.remA(RemV remFn,Object f)
    Typed [PieD.java, 172]           ch06.Top.substFish(SubstV subFn,Object n,Object o)
    Typed [PieD.java, 160]           ch06.Top.r

ch06.RemV   (Class)
    Define [PieD.java, 73]           PieD.java
    Typed [PieD.java, 144]           ch06.Bot.remA.remFn
    Typed [PieD.java, 137]           ch06.PieD.remA.remFn
    Typed [PieD.java, 167]           ch06.Top.remA.remFn

ch06.SalmonFish   (Class)
    Define [PieD.java, 20]           PieD.java
    Use [PieD.java, 25]              ch06.SalmonFish.equals(Object o)

ch06.SubstV   (Class)
    Define [PieD.java, 118]          PieD.java
    Typed [PieD.java, 150]           ch06.Bot.substFish.subFn
    Typed [PieD.java, 138]           ch06.PieD.substFish.subFn
    Typed [PieD.java, 172]           ch06.Top.substFish.subFn

ch06.Top   (Class)
    Define [PieD.java, 157]          PieD.java
    Create [PieD.java, 82]           ch06.RemV.forTop(Object t,PieD r,Object f)
    Create [PieD.java, 125]          ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
    Create [PieD.java, 127]          ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)

ch06.TunaFish   (Class)
    Define [PieD.java, 30]           PieD.java
    Use [PieD.java, 35]              ch06.TunaFish.equals(Object o)

ch061.AnchovyFish   (Class)
    Define [PieD.java, 10]           PieD.java
    Use [PieD.java, 15]              ch061.AnchovyFish.equals(Object o)
                                                                     Page 221
                          Type Cross Reference Report
===============================================================================

ch061.Bot   (Class)
    Define [PieD.java, 92]           PieD.java
    Create [PieD.java, 49]           ch061.RemV.forBot(Object t,PieD r)
    Create [PieD.java, 72]           ch061.SubstV.forBot(Object t,PieD r)

ch061.FishD   (Abstract Class)
    Define [PieD.java, 6]            PieD.java
    Extend [PieD.java, 10]           ch061.AnchovyFish
    Extend [PieD.java, 20]           ch061.SalmonFish
    Extend [PieD.java, 30]           ch061.TunaFish

ch061.PieD   (Public Abstract Class)
    Define [PieD.java, 83]           PieD.java
    Extend [PieD.java, 92]           ch061.Bot
    Typed [PieD.java, 96]            ch061.Bot.Bot._r
    Typed [PieD.java, 102]           ch061.Bot.remA(RemV remFn)
    Typed [PieD.java, 108]           ch061.Bot.substFish(SubstV subFn)
    Typed [PieD.java, 95]            ch061.Bot.r
    Typed [PieD.java, 88]            ch061.PieD.remA(RemV remFn)
    Typed [PieD.java, 89]            ch061.PieD.substFish(SubstV subFn)
    Typed [PieD.java, 48]            ch061.RemV.forBot(Object t,PieD r)
    Typed [PieD.java, 48]            ch061.RemV.forBot.r
    Typed [PieD.java, 52]            ch061.RemV.forTop(Object t,PieD r)
    Typed [PieD.java, 52]            ch061.RemV.forTop.r
    Typed [PieD.java, 70]            ch061.SubstV.forBot(Object t,PieD r)
    Typed [PieD.java, 70]            ch061.SubstV.forBot.r
    Typed [PieD.java, 74]            ch061.SubstV.forTop(Object t,PieD r)
    Typed [PieD.java, 74]            ch061.SubstV.forTop.r
    Extend [PieD.java, 115]          ch061.Top
    Typed [PieD.java, 119]           ch061.Top.Top.r
    Typed [PieD.java, 125]           ch061.Top.remA(RemV remFn)
    Typed [PieD.java, 130]           ch061.Top.substFish(SubstV subFn)
    Typed [PieD.java, 118]           ch061.Top.r

ch061.RemV   (Class)
    Define [PieD.java, 42]           PieD.java
    Typed [PieD.java, 102]           ch061.Bot.remA.remFn
    Typed [PieD.java, 88]            ch061.PieD.remA.remFn
    Typed [PieD.java, 125]           ch061.Top.remA.remFn

ch061.SalmonFish   (Class)
    Define [PieD.java, 20]           PieD.java
    Use [PieD.java, 25]              ch061.SalmonFish.equals(Object o)

ch061.SubstV   (Class)
    Define [PieD.java, 62]           PieD.java
    Typed [PieD.java, 108]           ch061.Bot.substFish.subFn
    Typed [PieD.java, 89]            ch061.PieD.substFish.subFn
    Typed [PieD.java, 130]           ch061.Top.substFish.subFn

ch061.Top   (Class)
    Define [PieD.java, 115]          PieD.java
    Create [PieD.java, 56]           ch061.RemV.forTop(Object t,PieD r)
    Create [PieD.java, 76]           ch061.SubstV.forTop(Object t,PieD r)
    Create [PieD.java, 78]           ch061.SubstV.forTop(Object t,PieD r)

ch061.TunaFish   (Class)
    Define [PieD.java, 30]           PieD.java
    Use [PieD.java, 35]              ch061.TunaFish.equals(Object o)

ch062.Bot   (Class)
    Define [PieD.java, 93]           PieD.java
    Create [PieD.java, 66]           ch062.LtSubstV.forBot
    Create [PieD.java, 18]           ch062.RemV.forBot
    Create [PieD.java, 41]           ch062.SubstV.forBot

ch062.LtSubstV   (Class)
    Define [PieD.java, 52]           PieD.java
    Create [PieD.java, 77]           ch062.LtSubstV.forTop(Object t,PieD r)

ch062.PieD   (Public Abstract Class)
    Define [PieD.java, 85]           PieD.java
    Extend [PieD.java, 93]           ch062.Bot
    Typed [PieD.java, 96]            ch062.Bot.accept(PieVistor1 ask)
    Typed [PieD.java, 64]            ch062.LtSubstV.forBot
    Typed [PieD.java, 70]            ch062.LtSubstV.forTop(Object t,PieD r)
    Typed [PieD.java, 70]            ch062.LtSubstV.forTop.r
    Typed [PieD.java, 90]            ch062.PieD.accept(PieVistor1 ask)
    Typed [PieD.java, 6]             ch062.PieVistor1.forBot
    Typed [PieD.java, 7]             ch062.PieVistor1.forTop(Object t,PieD r)
    Typed [PieD.java, 7]             ch062.PieVistor1.forTop.r
    Typed [PieD.java, 17]            ch062.RemV.forBot
    Typed [PieD.java, 21]            ch062.RemV.forTop(Object t,PieD r)
    Typed [PieD.java, 21]            ch062.RemV.forTop.r
    Typed [PieD.java, 39]            ch062.SubstV.forBot
    Typed [PieD.java, 43]            ch062.SubstV.forTop(Object t,PieD r)
    Typed [PieD.java, 43]            ch062.SubstV.forTop.r
    Extend [PieD.java, 104]          ch062.Top
    Typed [PieD.java, 108]           ch062.Top.Top.r
    Typed [PieD.java, 114]           ch062.Top.accept(PieVistor1 ask)
    Typed [PieD.java, 107]           ch062.Top.r

ch062.PieVistor1   (Interface)
    Define [PieD.java, 5]            PieD.java
    Typed [PieD.java, 96]            ch062.Bot.accept.ask
    Implement [PieD.java, 52]        ch062.LtSubstV
    Typed [PieD.java, 90]            ch062.PieD.accept.ask
    Implement [PieD.java, 10]        ch062.RemV
    Implement [PieD.java, 31]        ch062.SubstV
    Typed [PieD.java, 114]           ch062.Top.accept.ask

ch062.RemV   (Class)
    Define [PieD.java, 10]           PieD.java

ch062.SubstV   (Class)
    Define [PieD.java, 31]           PieD.java

ch062.Top   (Class)
    Define [PieD.java, 104]          PieD.java
    Create [PieD.java, 74]           ch062.LtSubstV.forTop(Object t,PieD r)
    Create [PieD.java, 77]           ch062.LtSubstV.forTop(Object t,PieD r)
    Create [PieD.java, 79]           ch062.LtSubstV.forTop(Object t,PieD r)
    Create [PieD.java, 25]           ch062.RemV.forTop(Object t,PieD r)
    Create [PieD.java, 45]           ch062.SubstV.forTop(Object t,PieD r)
    Create [PieD.java, 47]           ch062.SubstV.forTop(Object t,PieD r)

ch07.Apple   (Class)
    Define [FruitD.java, 11]         FruitD.java
    Use [FruitD.java, 13]            ch07.Apple.equals(Object o)

ch07.BHasFruitV   (Class)
    Define [TreeD.java, 153]         TreeD.java

ch07.BIsFlatV   (Class)
    Define [TreeD.java, 98]          TreeD.java

ch07.BIsSplitV   (Class)
    Define [TreeD.java, 121]         TreeD.java

ch07.BTreeVisitorI   (Interface)
    Define [TreeD.java, 92]          TreeD.java
    Implement [TreeD.java, 153]      ch07.BHasFruitV
    Implement [TreeD.java, 98]       ch07.BIsFlatV
    Implement [TreeD.java, 121]      ch07.BIsSplitV
    Typed [TreeD.java, 12]           ch07.Bud.accept.ask
    Typed [TreeD.java, 43]           ch07.Flat.accept.ask
    Typed [TreeD.java, 74]           ch07.Split.accept.ask
    Typed [TreeD.java, 4]            ch07.TreeD.accept.ask

ch07.Bud   (Class)
    Define [TreeD.java, 9]           TreeD.java
    Create [TreeD.java, 250]         ch07.TSubstsV.forBud

ch07.Fig   (Class)
    Define [FruitD.java, 29]         FruitD.java
    Use [FruitD.java, 31]            ch07.Fig.equals(Object o)

ch07.Flat   (Class)
    Define [TreeD.java, 31]          TreeD.java
    Create [TreeD.java, 257]         ch07.TSubstsV.forFlat(FruitD f,TreeD t)
    Create [TreeD.java, 259]         ch07.TSubstsV.forFlat(FruitD f,TreeD t)

ch07.FruitD   (Abstract Class)
    Define [FruitD.java, 3]          FruitD.java
    Extend [FruitD.java, 11]         ch07.Apple
    Extend [FruitD.java, 29]         ch07.Fig
    Extend [FruitD.java, 23]         ch07.Lemon
    Extend [FruitD.java, 5]          ch07.Peach
    Extend [FruitD.java, 17]         ch07.Pear
    Typed [TreeD.java, 161]          ch07.BHasFruitV.forFlat.f
    Typed [TreeD.java, 107]          ch07.BIsFlatV.forFlat.f
    Typed [TreeD.java, 130]          ch07.BIsSplitV.forFlat.f
    Typed [TreeD.java, 94]           ch07.BTreeVisitorI.forFlat.f
    Typed [TreeD.java, 36]           ch07.Flat.Flat._f
    Typed [TreeD.java, 33]           ch07.Flat.f
    Typed [TreeD.java, 182]          ch07.IHeightV.forFlat.f
    Typed [TreeD.java, 200]          ch07.IOccursV.IOccursV._a
    Typed [TreeD.java, 212]          ch07.IOccursV.forFlat.f
    Typed [TreeD.java, 199]          ch07.IOccursV.a
    Typed [TreeD.java, 147]          ch07.ITreeVisitorI.forFlat.f
    Typed [TreeD.java, 242]          ch07.TSubstsV.TSubstsV._n
    Typed [TreeD.java, 242]          ch07.TSubstsV.TSubstsV._o
    Typed [TreeD.java, 254]          ch07.TSubstsV.forFlat.f
    Typed [TreeD.java, 240]          ch07.TSubstsV.n
    Typed [TreeD.java, 241]          ch07.TSubstsV.o
    Typed [TreeD.java, 233]          ch07.TTreeVisitorI.forFlat.f

ch07.IHeightV   (Class)
    Define [TreeD.java, 173]         TreeD.java

ch07.IOccursV   (Class)
    Define [TreeD.java, 197]         TreeD.java

ch07.ITreeVisitorI   (Interface)
    Define [TreeD.java, 145]         TreeD.java
    Typed [TreeD.java, 18]           ch07.Bud.accept.ask
    Typed [TreeD.java, 49]           ch07.Flat.accept.ask
    Implement [TreeD.java, 173]      ch07.IHeightV
    Implement [TreeD.java, 197]      ch07.IOccursV
    Typed [TreeD.java, 80]           ch07.Split.accept.ask
    Typed [TreeD.java, 5]            ch07.TreeD.accept.ask
                                                                     Page 222
                          Type Cross Reference Report
===============================================================================

ch07.Lemon   (Class)
    Define [FruitD.java, 23]         FruitD.java
    Use [FruitD.java, 25]            ch07.Lemon.equals(Object o)

ch07.Peach   (Class)
    Define [FruitD.java, 5]          FruitD.java
    Use [FruitD.java, 7]             ch07.Peach.equals(Object o)

ch07.Pear   (Class)
    Define [FruitD.java, 17]         FruitD.java
    Use [FruitD.java, 19]            ch07.Pear.equals(Object o)

ch07.Split   (Class)
    Define [TreeD.java, 63]          TreeD.java
    Create [TreeD.java, 266]         ch07.TSubstsV.forSplit(TreeD l,TreeD t)

ch07.TreeD   (Abstract Class)
    Define [TreeD.java, 3]           TreeD.java
    Typed [TreeD.java, 161]          ch07.BHasFruitV.forFlat.t
    Typed [TreeD.java, 167]          ch07.BHasFruitV.forSplit.l
    Typed [TreeD.java, 167]          ch07.BHasFruitV.forSplit.t
    Typed [TreeD.java, 107]          ch07.BIsFlatV.forFlat.t
    Typed [TreeD.java, 113]          ch07.BIsFlatV.forSplit.l
    Typed [TreeD.java, 113]          ch07.BIsFlatV.forSplit.t
    Typed [TreeD.java, 130]          ch07.BIsSplitV.forFlat.t
    Typed [TreeD.java, 136]          ch07.BIsSplitV.forSplit.l
    Typed [TreeD.java, 136]          ch07.BIsSplitV.forSplit.t
    Typed [TreeD.java, 94]           ch07.BTreeVisitorI.forFlat.t
    Typed [TreeD.java, 95]           ch07.BTreeVisitorI.forSplit.l
    Typed [TreeD.java, 95]           ch07.BTreeVisitorI.forSplit.t
    Extend [TreeD.java, 9]           ch07.Bud
    Typed [TreeD.java, 24]           ch07.Bud.accept(TTreeVisitorI ask)
    Extend [TreeD.java, 31]          ch07.Flat
    Typed [TreeD.java, 36]           ch07.Flat.Flat._t
    Typed [TreeD.java, 55]           ch07.Flat.accept(TTreeVisitorI ask)
    Typed [TreeD.java, 34]           ch07.Flat.t
    Typed [TreeD.java, 182]          ch07.IHeightV.forFlat.t
    Typed [TreeD.java, 188]          ch07.IHeightV.forSplit.l
    Typed [TreeD.java, 188]          ch07.IHeightV.forSplit.t
    Typed [TreeD.java, 212]          ch07.IOccursV.forFlat.t
    Typed [TreeD.java, 224]          ch07.IOccursV.forSplit.l
    Typed [TreeD.java, 224]          ch07.IOccursV.forSplit.t
    Typed [TreeD.java, 147]          ch07.ITreeVisitorI.forFlat.t
    Typed [TreeD.java, 148]          ch07.ITreeVisitorI.forSplit.l
    Typed [TreeD.java, 148]          ch07.ITreeVisitorI.forSplit.t
    Extend [TreeD.java, 63]          ch07.Split
    Typed [TreeD.java, 67]           ch07.Split.Split._l
    Typed [TreeD.java, 67]           ch07.Split.Split._t
    Typed [TreeD.java, 86]           ch07.Split.accept(TTreeVisitorI ask)
    Typed [TreeD.java, 65]           ch07.Split.l
    Typed [TreeD.java, 66]           ch07.Split.t
    Typed [TreeD.java, 248]          ch07.TSubstsV.forBud
    Typed [TreeD.java, 254]          ch07.TSubstsV.forFlat(FruitD f,TreeD t)
    Typed [TreeD.java, 254]          ch07.TSubstsV.forFlat.t
    Typed [TreeD.java, 264]          ch07.TSubstsV.forSplit(TreeD l,TreeD t)
    Typed [TreeD.java, 264]          ch07.TSubstsV.forSplit.l
    Typed [TreeD.java, 264]          ch07.TSubstsV.forSplit.t
    Typed [TreeD.java, 232]          ch07.TTreeVisitorI.forBud
    Typed [TreeD.java, 233]          ch07.TTreeVisitorI.forFlat(FruitD f,TreeD t)
    Typed [TreeD.java, 233]          ch07.TTreeVisitorI.forFlat.t
    Typed [TreeD.java, 234]          ch07.TTreeVisitorI.forSplit(TreeD l,TreeD t)
    Typed [TreeD.java, 234]          ch07.TTreeVisitorI.forSplit.l
    Typed [TreeD.java, 234]          ch07.TTreeVisitorI.forSplit.t
    Typed [TreeD.java, 6]            ch07.TreeD.accept(TTreeVisitorI ask)

ch07.TSubstsV   (Class)
    Define [TreeD.java, 238]         TreeD.java

ch07.TTreeVisitorI   (Interface)
    Define [TreeD.java, 231]         TreeD.java
    Typed [TreeD.java, 24]           ch07.Bud.accept.ask
    Typed [TreeD.java, 55]           ch07.Flat.accept.ask
    Typed [TreeD.java, 86]           ch07.Split.accept.ask
    Implement [TreeD.java, 238]      ch07.TSubstsV
    Typed [TreeD.java, 6]            ch07.TreeD.accept.ask

ch071.Apple   (Class)
    Define [FruitD.java, 11]         FruitD.java
    Use [FruitD.java, 13]            ch071.Apple.equals(Object o)

ch071.Bud   (Class)
    Define [TreeD.java, 8]           TreeD.java
    Create [TreeD.java, 13]          ch071.Bud.accept(TreeVisitorI ask)
    Create [TreeD.java, 212]         ch071.TSubstsV.forBud

ch071.Fig   (Class)
    Define [FruitD.java, 29]         FruitD.java
    Use [FruitD.java, 31]            ch071.Fig.equals(Object o)

ch071.Flat   (Class)
    Define [TreeD.java, 20]          TreeD.java
    Create [TreeD.java, 219]         ch071.TSubstsV.forFlat(FruitD f,TreeD t)
    Create [TreeD.java, 221]         ch071.TSubstsV.forFlat(FruitD f,TreeD t)

ch071.FruitD   (Abstract Class)
    Define [FruitD.java, 3]          FruitD.java
    Extend [FruitD.java, 11]         ch071.Apple
    Extend [FruitD.java, 29]         ch071.Fig
    Extend [FruitD.java, 23]         ch071.Lemon
    Extend [FruitD.java, 5]          ch071.Peach
    Extend [FruitD.java, 17]         ch071.Pear
    Typed [TreeD.java, 25]           ch071.Flat.Flat._f
    Typed [TreeD.java, 22]           ch071.Flat.f
    Typed [TreeD.java, 127]          ch071.HasFruitV.forFlat.f
    Typed [TreeD.java, 149]          ch071.IHeightV.forFlat.f
    Typed [TreeD.java, 167]          ch071.IOccursV.IOccursV._a
    Typed [TreeD.java, 179]          ch071.IOccursV.forFlat.f
    Typed [TreeD.java, 166]          ch071.IOccursV.a
    Typed [TreeD.java, 75]           ch071.IsFlatV.forFlat.f
    Typed [TreeD.java, 100]          ch071.IsSplitV.forFlat.f
    Typed [TreeD.java, 204]          ch071.TSubstsV.TSubstsV._n
    Typed [TreeD.java, 204]          ch071.TSubstsV.TSubstsV._o
    Typed [TreeD.java, 216]          ch071.TSubstsV.forFlat.f
    Typed [TreeD.java, 202]          ch071.TSubstsV.n
    Typed [TreeD.java, 203]          ch071.TSubstsV.o
    Typed [TreeD.java, 62]           ch071.TreeVisitorI.forFlat.f

ch071.HasFruitV   (Class)
    Define [TreeD.java, 119]         TreeD.java

ch071.IHeightV   (Class)
    Define [TreeD.java, 140]         TreeD.java

ch071.IOccursV   (Class)
    Define [TreeD.java, 164]         TreeD.java

ch071.IsFlatV   (Class)
    Define [TreeD.java, 66]          TreeD.java

ch071.IsSplitV   (Class)
    Define [TreeD.java, 91]          TreeD.java

ch071.Lemon   (Class)
    Define [FruitD.java, 23]         FruitD.java
    Use [FruitD.java, 25]            ch071.Lemon.equals(Object o)

ch071.Peach   (Class)
    Define [FruitD.java, 5]          FruitD.java
    Use [FruitD.java, 7]             ch071.Peach.equals(Object o)

ch071.Pear   (Class)
    Define [FruitD.java, 17]         FruitD.java
    Use [FruitD.java, 19]            ch071.Pear.equals(Object o)

ch071.Split   (Class)
    Define [TreeD.java, 42]          TreeD.java
    Create [TreeD.java, 228]         ch071.TSubstsV.forSplit(TreeD l,TreeD t)

ch071.TreeD   (Abstract Class)
    Define [TreeD.java, 3]           TreeD.java
    Extend [TreeD.java, 8]           ch071.Bud
    Extend [TreeD.java, 20]          ch071.Flat
    Typed [TreeD.java, 25]           ch071.Flat.Flat._t
    Typed [TreeD.java, 23]           ch071.Flat.t
    Typed [TreeD.java, 127]          ch071.HasFruitV.forFlat.t
    Typed [TreeD.java, 133]          ch071.HasFruitV.forSplit.l
    Typed [TreeD.java, 133]          ch071.HasFruitV.forSplit.t
    Typed [TreeD.java, 149]          ch071.IHeightV.forFlat.t
    Typed [TreeD.java, 155]          ch071.IHeightV.forSplit.l
    Typed [TreeD.java, 155]          ch071.IHeightV.forSplit.t
    Typed [TreeD.java, 179]          ch071.IOccursV.forFlat.t
    Typed [TreeD.java, 191]          ch071.IOccursV.forSplit.l
    Typed [TreeD.java, 191]          ch071.IOccursV.forSplit.t
    Typed [TreeD.java, 75]           ch071.IsFlatV.forFlat.t
    Typed [TreeD.java, 81]           ch071.IsFlatV.forSplit.l
    Typed [TreeD.java, 81]           ch071.IsFlatV.forSplit.t
    Typed [TreeD.java, 100]          ch071.IsSplitV.forFlat.t
    Typed [TreeD.java, 106]          ch071.IsSplitV.forSplit.l
    Typed [TreeD.java, 106]          ch071.IsSplitV.forSplit.t
    Extend [TreeD.java, 42]          ch071.Split
    Typed [TreeD.java, 46]           ch071.Split.Split._l
    Typed [TreeD.java, 46]           ch071.Split.Split._t
    Typed [TreeD.java, 44]           ch071.Split.l
    Typed [TreeD.java, 45]           ch071.Split.t
    Cast [TreeD.java, 219]           ch071.TSubstsV.forFlat(FruitD f,TreeD t)
    Cast [TreeD.java, 221]           ch071.TSubstsV.forFlat(FruitD f,TreeD t)
    Typed [TreeD.java, 216]          ch071.TSubstsV.forFlat.t
    Typed [TreeD.java, 226]          ch071.TSubstsV.forSplit(TreeD l,TreeD t)
    Cast [TreeD.java, 228]           ch071.TSubstsV.forSplit(TreeD l,TreeD t)
    Cast [TreeD.java, 228]           ch071.TSubstsV.forSplit(TreeD l,TreeD t)
    Typed [TreeD.java, 226]          ch071.TSubstsV.forSplit.l
    Typed [TreeD.java, 226]          ch071.TSubstsV.forSplit.t
    Typed [TreeD.java, 62]           ch071.TreeVisitorI.forFlat.t
    Typed [TreeD.java, 63]           ch071.TreeVisitorI.forSplit.l
    Typed [TreeD.java, 63]           ch071.TreeVisitorI.forSplit.t

ch071.TreeVisitorI   (Interface)
    Define [TreeD.java, 60]          TreeD.java
    Typed [TreeD.java, 11]           ch071.Bud.accept.ask
    Typed [TreeD.java, 32]           ch071.Flat.accept.ask
    Implement [TreeD.java, 119]      ch071.HasFruitV
    Implement [TreeD.java, 140]      ch071.IHeightV
    Implement [TreeD.java, 164]      ch071.IOccursV
    Implement [TreeD.java, 66]       ch071.IsFlatV
    Implement [TreeD.java, 91]       ch071.IsSplitV
    Typed [TreeD.java, 52]           ch071.Split.accept.ask
    Implement [TreeD.java, 200]      ch071.TSubstsV
    Typed [TreeD.java, 4]            ch071.TreeD.accept.ask

ch071.TSubstsV   (Class)
    Define [TreeD.java, 200]         TreeD.java

ch08.Add   (Class)
    Define [SetD.java, 48]           SetD.java
    Create [SetD.java, 8]            ch08.SetD.add(Integer i)

ch08.Const   (Class)
    Define [ExprD.java, 102]         ExprD.java

ch08.Diff   (Class)
    Define [ExprD.java, 71]          ExprD.java
                                                                     Page 223
                          Type Cross Reference Report
===============================================================================

ch08.Empty   (Class)
    Define [SetD.java, 19]           SetD.java
    Create [SetD.java, 36]           ch08.Empty.diff(SetD s)
    Create [SetD.java, 42]           ch08.Empty.prod(SetD s)

ch08.ExprD   (Abstract Class)
    Define [ExprD.java, 47]          ExprD.java
    Extend [ExprD.java, 102]         ch08.Const
    Extend [ExprD.java, 71]          ch08.Diff
    Typed [ExprD.java, 74]           ch08.Diff.Diff._l
    Typed [ExprD.java, 74]           ch08.Diff.Diff._r
    Typed [ExprD.java, 72]           ch08.Diff.l
    Typed [ExprD.java, 73]           ch08.Diff.r
    Typed [ExprD.java, 5]            ch08.ExprVisitorI.forDiff.l
    Typed [ExprD.java, 5]            ch08.ExprVisitorI.forDiff.r
    Typed [ExprD.java, 4]            ch08.ExprVisitorI.forPlus.l
    Typed [ExprD.java, 4]            ch08.ExprVisitorI.forPlus.r
    Typed [ExprD.java, 6]            ch08.ExprVisitorI.forProd.l
    Typed [ExprD.java, 6]            ch08.ExprVisitorI.forProd.r
    Typed [ExprD.java, 19]           ch08.IntEvalV.forDiff.l
    Typed [ExprD.java, 19]           ch08.IntEvalV.forDiff.r
    Typed [ExprD.java, 13]           ch08.IntEvalV.forPlus.l
    Typed [ExprD.java, 13]           ch08.IntEvalV.forPlus.r
    Typed [ExprD.java, 25]           ch08.IntEvalV.forProd.l
    Typed [ExprD.java, 25]           ch08.IntEvalV.forProd.r
    Extend [ExprD.java, 54]          ch08.Plus
    Typed [ExprD.java, 58]           ch08.Plus.Plus._l
    Typed [ExprD.java, 58]           ch08.Plus.Plus._r
    Typed [ExprD.java, 56]           ch08.Plus.l
    Typed [ExprD.java, 57]           ch08.Plus.r
    Extend [ExprD.java, 86]          ch08.Prod
    Typed [ExprD.java, 89]           ch08.Prod.Prod._l
    Typed [ExprD.java, 89]           ch08.Prod.Prod._r
    Typed [ExprD.java, 87]           ch08.Prod.l
    Typed [ExprD.java, 88]           ch08.Prod.r

ch08.ExprVisitorI   (Interface)
    Define [ExprD.java, 3]           ExprD.java
    Typed [ExprD.java, 109]          ch08.Const.accpet.ask
    Typed [ExprD.java, 80]           ch08.Diff.accpet.ask
    Typed [ExprD.java, 48]           ch08.ExprD.accpet.ask
    Implement [ExprD.java, 10]       ch08.IntEvalV
    Typed [ExprD.java, 64]           ch08.Plus.accpet.ask
    Typed [ExprD.java, 95]           ch08.Prod.accpet.ask

ch08.IntEvalV   (Class)
    Define [ExprD.java, 10]          ExprD.java
    Extend [SetD.java, 96]           ch08.SetEvalV

ch08.Plus   (Class)
    Define [ExprD.java, 54]          ExprD.java

ch08.Prod   (Class)
    Define [ExprD.java, 86]          ExprD.java

ch08.SetD   (Abstract Class)
    Define [SetD.java, 3]            SetD.java
    Extend [SetD.java, 48]           ch08.Add
    Typed [SetD.java, 52]            ch08.Add.Add._s
    Typed [SetD.java, 74]            ch08.Add.diff(SetD t)
    Typed [SetD.java, 74]            ch08.Add.diff.t
    Typed [SetD.java, 68]            ch08.Add.plus(SetD t)
    Typed [SetD.java, 68]            ch08.Add.plus.t
    Typed [SetD.java, 84]            ch08.Add.prod(SetD t)
    Typed [SetD.java, 84]            ch08.Add.prod.t
    Typed [SetD.java, 51]            ch08.Add.s
    Extend [SetD.java, 19]           ch08.Empty
    Typed [SetD.java, 34]            ch08.Empty.diff(SetD s)
    Typed [SetD.java, 34]            ch08.Empty.diff.s
    Typed [SetD.java, 28]            ch08.Empty.plus(SetD s)
    Typed [SetD.java, 28]            ch08.Empty.plus.s
    Typed [SetD.java, 40]            ch08.Empty.prod(SetD s)
    Typed [SetD.java, 40]            ch08.Empty.prod.s
    Typed [SetD.java, 4]             ch08.SetD.add(Integer i)
    Typed [SetD.java, 14]            ch08.SetD.diff(SetD s)
    Typed [SetD.java, 14]            ch08.SetD.diff.s
    Typed [SetD.java, 13]            ch08.SetD.plus(SetD s)
    Typed [SetD.java, 13]            ch08.SetD.plus.s
    Typed [SetD.java, 15]            ch08.SetD.prod(SetD s)
    Typed [SetD.java, 15]            ch08.SetD.prod.s
    Cast [SetD.java, 105]            ch08.SetEvalV.diff(Object l,Object r)
    Cast [SetD.java, 105]            ch08.SetEvalV.diff(Object l,Object r)
    Cast [SetD.java, 100]            ch08.SetEvalV.plus(Object l,Object r)
    Cast [SetD.java, 100]            ch08.SetEvalV.plus(Object l,Object r)
    Cast [SetD.java, 110]            ch08.SetEvalV.prod(Object l,Object r)
    Cast [SetD.java, 110]            ch08.SetEvalV.prod(Object l,Object r)

ch08.SetEvalV   (Class)
    Define [SetD.java, 96]           SetD.java

ch0801That.Bot   (Class)
    Define [PieDUpdate.java, 10]     PieDUpdate.java
    Create [PieDUpdate.java, 104]    ch0801That.LtSubstV.forBot(Bot that)
    Typed [PieDUpdate.java, 102]     ch0801That.LtSubstV.forBot.that
    Typed [PieDUpdate.java, 44]      ch0801That.PieVistor1.forBot.that
    Create [PieDUpdate.java, 56]     ch0801That.RemV.forBot(Bot that)
    Typed [PieDUpdate.java, 55]      ch0801That.RemV.forBot.that
    Create [PieDUpdate.java, 79]     ch0801That.SubstV.forBot(Bot that)
    Typed [PieDUpdate.java, 77]      ch0801That.SubstV.forBot.that
    Create [TestThat.java, 5]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 6]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 7]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 10]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 13]       ch0801That.TestThat.main(String[] args)

ch0801That.LtSubstV   (Class)
    Define [PieDUpdate.java, 90]     PieDUpdate.java
    Create [PieDUpdate.java, 115]    ch0801That.LtSubstV.forTop(Top that)
    Create [TestThat.java, 8]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 11]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 14]       ch0801That.TestThat.main(String[] args)

ch0801That.PieDUpdate   (Public Abstract Class)
    Define [PieDUpdate.java, 3]      PieDUpdate.java
    Extend [PieDUpdate.java, 10]     ch0801That.Bot
    Typed [PieDUpdate.java, 13]      ch0801That.Bot.accept(PieVistor1 ask)
    Typed [PieDUpdate.java, 102]     ch0801That.LtSubstV.forBot(Bot that)
    Typed [PieDUpdate.java, 108]     ch0801That.LtSubstV.forTop(Top that)
    Typed [PieDUpdate.java, 8]       ch0801That.PieDUpdate.accept(PieVistor1 ask)
    Typed [PieDUpdate.java, 44]      ch0801That.PieVistor1.forBot(Bot that)
    Typed [PieDUpdate.java, 45]      ch0801That.PieVistor1.forTop(Top that)
    Typed [PieDUpdate.java, 55]      ch0801That.RemV.forBot(Bot that)
    Typed [PieDUpdate.java, 60]      ch0801That.RemV.forTop(Top that)
    Typed [PieDUpdate.java, 77]      ch0801That.SubstV.forBot(Bot that)
    Typed [PieDUpdate.java, 81]      ch0801That.SubstV.forTop(Top that)
    Extend [PieDUpdate.java, 23]     ch0801That.Top
    Typed [PieDUpdate.java, 27]      ch0801That.Top.Top.r
    Typed [PieDUpdate.java, 33]      ch0801That.Top.accept(PieVistor1 ask)
    Typed [PieDUpdate.java, 26]      ch0801That.Top.r

ch0801That.PieVistor1   (Interface)
    Define [PieDUpdate.java, 43]     PieDUpdate.java
    Typed [PieDUpdate.java, 13]      ch0801That.Bot.accept.ask
    Implement [PieDUpdate.java, 90]   ch0801That.LtSubstV
    Typed [PieDUpdate.java, 8]       ch0801That.PieDUpdate.accept.ask
    Implement [PieDUpdate.java, 48]   ch0801That.RemV
    Implement [PieDUpdate.java, 69]   ch0801That.SubstV
    Typed [PieDUpdate.java, 33]      ch0801That.Top.accept.ask

ch0801That.RemV   (Class)
    Define [PieDUpdate.java, 48]     PieDUpdate.java
    Create [TestThat.java, 5]        ch0801That.TestThat.main(String[] args)

ch0801That.SubstV   (Class)
    Define [PieDUpdate.java, 69]     PieDUpdate.java
    Create [TestThat.java, 6]        ch0801That.TestThat.main(String[] args)

ch0801That.TestThat   (Public Class)
    Define [TestThat.java, 3]        TestThat.java

ch0801That.Top   (Class)
    Define [PieDUpdate.java, 23]     PieDUpdate.java
    Create [PieDUpdate.java, 112]    ch0801That.LtSubstV.forTop(Top that)
    Create [PieDUpdate.java, 115]    ch0801That.LtSubstV.forTop(Top that)
    Create [PieDUpdate.java, 117]    ch0801That.LtSubstV.forTop(Top that)
    Typed [PieDUpdate.java, 108]     ch0801That.LtSubstV.forTop.that
    Typed [PieDUpdate.java, 45]      ch0801That.PieVistor1.forTop.that
    Create [PieDUpdate.java, 64]     ch0801That.RemV.forTop(Top that)
    Typed [PieDUpdate.java, 60]      ch0801That.RemV.forTop.that
    Create [PieDUpdate.java, 83]     ch0801That.SubstV.forTop(Top that)
    Create [PieDUpdate.java, 85]     ch0801That.SubstV.forTop(Top that)
    Typed [PieDUpdate.java, 81]      ch0801That.SubstV.forTop.that
    Create [TestThat.java, 5]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 5]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 5]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 6]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 6]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 6]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 7]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 7]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 7]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 7]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 7]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 7]        ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 10]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 10]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 10]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 10]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 10]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 10]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 13]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 13]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 13]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 13]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 13]       ch0801That.TestThat.main(String[] args)
    Create [TestThat.java, 13]       ch0801That.TestThat.main(String[] args)

ch081.Add   (Class)
    Define [SetD.java, 48]           SetD.java
    Create [SetD.java, 8]            ch081.SetD.add(Integer i)

ch081.Bot   (Class)
    Define [PieD.java, 93]           PieD.java
    Create [PieD.java, 66]           ch081.LtSubstV.forBot
    Create [PieD.java, 18]           ch081.RemV.forBot
    Create [PieD.java, 41]           ch081.SubstV.forBot
    Create [TestPieD.java, 5]        ch081.TestPieD.main(String[] args)
    Create [SubstD.java, 16]         ch081.SubstD.forBot
    Create [SubstVExt.java, 16]      ch081.SubstVExt.forBot

ch081.Const   (Class)
    Define [ExprD.java, 108]         ExprD.java

ch081.Diff   (Class)
    Define [ExprD.java, 77]          ExprD.java

ch081.Empty   (Class)
    Define [SetD.java, 19]           SetD.java
    Create [SetD.java, 36]           ch081.Empty.diff(SetD s)
    Create [SetD.java, 42]           ch081.Empty.prod(SetD s)

ch081.EvalV   (Abstract Class)
    Define [ExprD.java, 10]          ExprD.java
    Extend [ExprD.java, 39]          ch081.IntEvalV
    Extend [SetD.java, 97]           ch081.SetEvalV

ch081.ExprD   (Abstract Class)
    Define [ExprD.java, 53]          ExprD.java
    Extend [ExprD.java, 108]         ch081.Const
    Extend [ExprD.java, 77]          ch081.Diff
    Typed [ExprD.java, 80]           ch081.Diff.Diff._l
    Typed [ExprD.java, 80]           ch081.Diff.Diff._r
    Typed [ExprD.java, 78]           ch081.Diff.l
    Typed [ExprD.java, 79]           ch081.Diff.r
    Typed [ExprD.java, 18]           ch081.EvalV.forDiff.l
    Typed [ExprD.java, 18]           ch081.EvalV.forDiff.r
    Typed [ExprD.java, 12]           ch081.EvalV.forPlus.l
    Typed [ExprD.java, 12]           ch081.EvalV.forPlus.r
    Typed [ExprD.java, 24]           ch081.EvalV.forProd.l
    Typed [ExprD.java, 24]           ch081.EvalV.forProd.r
    Typed [ExprD.java, 5]            ch081.ExprVisitorI.forDiff.l
    Typed [ExprD.java, 5]            ch081.ExprVisitorI.forDiff.r
    Typed [ExprD.java, 4]            ch081.ExprVisitorI.forPlus.l
    Typed [ExprD.java, 4]            ch081.ExprVisitorI.forPlus.r
    Typed [ExprD.java, 6]            ch081.ExprVisitorI.forProd.l
    Typed [ExprD.java, 6]            ch081.ExprVisitorI.forProd.r
    Extend [ExprD.java, 60]          ch081.Plus
    Typed [ExprD.java, 64]           ch081.Plus.Plus._l
    Typed [ExprD.java, 64]           ch081.Plus.Plus._r
    Typed [ExprD.java, 62]           ch081.Plus.l
    Typed [ExprD.java, 63]           ch081.Plus.r
    Extend [ExprD.java, 92]          ch081.Prod
    Typed [ExprD.java, 95]           ch081.Prod.Prod._l
    Typed [ExprD.java, 95]           ch081.Prod.Prod._r
    Typed [ExprD.java, 93]           ch081.Prod.l
    Typed [ExprD.java, 94]           ch081.Prod.r

ch081.ExprVisitorI   (Interface)
    Define [ExprD.java, 3]           ExprD.java
    Typed [ExprD.java, 115]          ch081.Const.accpet.ask
    Typed [ExprD.java, 86]           ch081.Diff.accpet.ask
    Implement [ExprD.java, 10]       ch081.EvalV
    Typed [ExprD.java, 54]           ch081.ExprD.accpet.ask
    Typed [ExprD.java, 70]           ch081.Plus.accpet.ask
    Typed [ExprD.java, 101]          ch081.Prod.accpet.ask

ch081.IntEvalV   (Class)
    Define [ExprD.java, 39]          ExprD.java

ch081.LtSubstV   (Class)
    Define [PieD.java, 52]           PieD.java
    Create [PieD.java, 77]           ch081.LtSubstV.forTop(Object t,PieD r)

ch081.LtSubstV1   (Class)
    Define [SubstD.java, 42]         SubstD.java
    Create [SubstD.java, 57]         ch081.LtSubstV1.forTop(Object t,PieD r)
    Create [SubstVExt.java, 45]      ch081.LtSubstV2.forTop(Object t,PieD r)
                                                                     Page 224
                          Type Cross Reference Report
===============================================================================

ch081.LtSubstV2   (Class)
    Define [SubstVExt.java, 30]      SubstVExt.java

ch081.PieD   (Public Abstract Class)
    Define [PieD.java, 85]           PieD.java
    Extend [PieD.java, 93]           ch081.Bot
    Typed [PieD.java, 96]            ch081.Bot.accept(PieVistor1 ask)
    Typed [PieD.java, 64]            ch081.LtSubstV.forBot
    Typed [PieD.java, 70]            ch081.LtSubstV.forTop(Object t,PieD r)
    Typed [PieD.java, 70]            ch081.LtSubstV.forTop.r
    Typed [PieD.java, 90]            ch081.PieD.accept(PieVistor1 ask)
    Typed [PieD.java, 6]             ch081.PieVistor1.forBot
    Typed [PieD.java, 7]             ch081.PieVistor1.forTop(Object t,PieD r)
    Typed [PieD.java, 7]             ch081.PieVistor1.forTop.r
    Typed [PieD.java, 17]            ch081.RemV.forBot
    Typed [PieD.java, 21]            ch081.RemV.forTop(Object t,PieD r)
    Typed [PieD.java, 21]            ch081.RemV.forTop.r
    Typed [PieD.java, 39]            ch081.SubstV.forBot
    Typed [PieD.java, 43]            ch081.SubstV.forTop(Object t,PieD r)
    Typed [PieD.java, 43]            ch081.SubstV.forTop.r
    Extend [PieD.java, 107]          ch081.Top
    Typed [PieD.java, 111]           ch081.Top.Top.r
    Typed [PieD.java, 117]           ch081.Top.accept(PieVistor1 ask)
    Typed [PieD.java, 110]           ch081.Top.r
    Typed [SubstD.java, 50]          ch081.LtSubstV1.forTop(Object t,PieD r)
    Typed [SubstD.java, 50]          ch081.LtSubstV1.forTop.r
    Typed [SubstD.java, 14]          ch081.SubstD.forBot
    Typed [SubstD.java, 19]          ch081.SubstD.forTop(Object t,PieD r)
    Typed [SubstD.java, 19]          ch081.SubstD.forTop.r
    Typed [SubstD.java, 30]          ch081.SubstV1.forTop(Object t,PieD r)
    Typed [SubstD.java, 30]          ch081.SubstV1.forTop.r
    Typed [SubstVExt.java, 38]       ch081.LtSubstV2.forTop(Object t,PieD r)
    Typed [SubstVExt.java, 38]       ch081.LtSubstV2.forTop.r
    Typed [SubstVExt.java, 14]       ch081.SubstVExt.forBot
    Typed [SubstVExt.java, 19]       ch081.SubstVExt.forTop(Object t,PieD r)
    Typed [SubstVExt.java, 19]       ch081.SubstVExt.forTop.r

ch081.PieVistor1   (Interface)
    Define [PieD.java, 5]            PieD.java
    Typed [PieD.java, 96]            ch081.Bot.accept.ask
    Implement [PieD.java, 52]        ch081.LtSubstV
    Typed [PieD.java, 90]            ch081.PieD.accept.ask
    Implement [PieD.java, 10]        ch081.RemV
    Implement [PieD.java, 31]        ch081.SubstV
    Typed [PieD.java, 117]           ch081.Top.accept.ask
    Implement [SubstD.java, 4]       ch081.SubstD
    Implement [SubstVExt.java, 4]    ch081.SubstVExt

ch081.Plus   (Class)
    Define [ExprD.java, 60]          ExprD.java

ch081.Prod   (Class)
    Define [ExprD.java, 92]          ExprD.java

ch081.RemV   (Class)
    Define [PieD.java, 10]           PieD.java
    Create [TestPieD.java, 5]        ch081.TestPieD.main(String[] args)

ch081.SetD   (Abstract Class)
    Define [SetD.java, 3]            SetD.java
    Extend [SetD.java, 48]           ch081.Add
    Typed [SetD.java, 52]            ch081.Add.Add._s
    Typed [SetD.java, 74]            ch081.Add.diff(SetD t)
    Typed [SetD.java, 74]            ch081.Add.diff.t
    Typed [SetD.java, 68]            ch081.Add.plus(SetD t)
    Typed [SetD.java, 68]            ch081.Add.plus.t
    Typed [SetD.java, 84]            ch081.Add.prod(SetD t)
    Typed [SetD.java, 84]            ch081.Add.prod.t
    Typed [SetD.java, 51]            ch081.Add.s
    Extend [SetD.java, 19]           ch081.Empty
    Typed [SetD.java, 34]            ch081.Empty.diff(SetD s)
    Typed [SetD.java, 34]            ch081.Empty.diff.s
    Typed [SetD.java, 28]            ch081.Empty.plus(SetD s)
    Typed [SetD.java, 28]            ch081.Empty.plus.s
    Typed [SetD.java, 40]            ch081.Empty.prod(SetD s)
    Typed [SetD.java, 40]            ch081.Empty.prod.s
    Typed [SetD.java, 4]             ch081.SetD.add(Integer i)
    Typed [SetD.java, 14]            ch081.SetD.diff(SetD s)
    Typed [SetD.java, 14]            ch081.SetD.diff.s
    Typed [SetD.java, 13]            ch081.SetD.plus(SetD s)
    Typed [SetD.java, 13]            ch081.SetD.plus.s
    Typed [SetD.java, 15]            ch081.SetD.prod(SetD s)
    Typed [SetD.java, 15]            ch081.SetD.prod.s
    Cast [SetD.java, 106]            ch081.SetEvalV.diff(Object l,Object r)
    Cast [SetD.java, 106]            ch081.SetEvalV.diff(Object l,Object r)
    Cast [SetD.java, 101]            ch081.SetEvalV.plus(Object l,Object r)
    Cast [SetD.java, 101]            ch081.SetEvalV.plus(Object l,Object r)
    Cast [SetD.java, 111]            ch081.SetEvalV.prod(Object l,Object r)
    Cast [SetD.java, 111]            ch081.SetEvalV.prod(Object l,Object r)

ch081.SetEvalV   (Class)
    Define [SetD.java, 97]           SetD.java

ch081.SubstD   (Abstract Class)
    Define [SubstD.java, 4]          SubstD.java
    Extend [SubstD.java, 42]         ch081.LtSubstV1
    Extend [SubstD.java, 23]         ch081.SubstV1

ch081.SubstV   (Class)
    Define [PieD.java, 31]           PieD.java

ch081.SubstV1   (Class)
    Define [SubstD.java, 23]         SubstD.java

ch081.SubstVExt   (Abstract Class)
    Define [SubstVExt.java, 4]       SubstVExt.java
    Extend [SubstVExt.java, 30]      ch081.LtSubstV2

ch081.TestPieD   (Public Class)
    Define [TestPieD.java, 3]        TestPieD.java

ch081.Top   (Class)
    Define [PieD.java, 107]          PieD.java
    Create [PieD.java, 74]           ch081.LtSubstV.forTop(Object t,PieD r)
    Create [PieD.java, 77]           ch081.LtSubstV.forTop(Object t,PieD r)
    Create [PieD.java, 79]           ch081.LtSubstV.forTop(Object t,PieD r)
    Create [PieD.java, 25]           ch081.RemV.forTop(Object t,PieD r)
    Create [PieD.java, 45]           ch081.SubstV.forTop(Object t,PieD r)
    Create [PieD.java, 47]           ch081.SubstV.forTop(Object t,PieD r)
    Create [TestPieD.java, 5]        ch081.TestPieD.main(String[] args)
    Create [TestPieD.java, 5]        ch081.TestPieD.main(String[] args)
    Create [TestPieD.java, 5]        ch081.TestPieD.main(String[] args)
    Create [SubstD.java, 54]         ch081.LtSubstV1.forTop(Object t,PieD r)
    Create [SubstD.java, 57]         ch081.LtSubstV1.forTop(Object t,PieD r)
    Create [SubstD.java, 59]         ch081.LtSubstV1.forTop(Object t,PieD r)
    Create [SubstD.java, 34]         ch081.SubstV1.forTop(Object t,PieD r)
    Create [SubstD.java, 36]         ch081.SubstV1.forTop(Object t,PieD r)
    Create [SubstVExt.java, 42]      ch081.LtSubstV2.forTop(Object t,PieD r)
    Create [SubstVExt.java, 45]      ch081.LtSubstV2.forTop(Object t,PieD r)
    Create [SubstVExt.java, 47]      ch081.LtSubstV2.forTop(Object t,PieD r)
    Create [SubstVExt.java, 21]      ch081.SubstVExt.forTop(Object t,PieD r)
    Create [SubstVExt.java, 23]      ch081.SubstVExt.forTop(Object t,PieD r)

ch09.CartesianPt2   (Class)
    Define [PointDCloserSimplify.java, 32]   PointDCloserSimplify.java
    Typed [PointDCloserSimplify.java, 74]   ch09.ManHattanPt2.closerTo0.p1
    Typed [PointDCloserSimplify.java, 19]   ch09.PointDCloserSimplify.closerTo0.p1
    Create [PointDCloserSimplify.java, 25]   ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)
    Typed [Union.java, 25]           ch09.UnionHasPtV.UnionHasPtV._p
    Extend [ShadowCartesian.java, 8]   ch09.ShadowCartesian

ch09.Circle   (Class)
    Define [ShapeD.java, 14]         ShapeD.java

ch09.HasPtV   (Class)
    Define [ShapeD.java, 58]         ShapeD.java
    Create [ShapeD.java, 80]         ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)
    Extend [Union.java, 23]          ch09.UnionHasPtV

ch09.ManHattanPt2   (Class)
    Define [PointDCloserSimplify.java, 56]   PointDCloserSimplify.java
    Create [Test.java, 6]            ch09.Test.main(String[] args)
    Typed [Test.java, 6]             ch09.Test.main.mhpt

ch09.PointDCloserSimplify   (Public Abstract Class)
    Define [PointDCloserSimplify.java, 7]   PointDCloserSimplify.java
    Extend [PointDCloserSimplify.java, 32]   ch09.CartesianPt2
    Extend [PointDCloserSimplify.java, 56]   ch09.ManHattanPt2
    Typed [PointDCloserSimplify.java, 23]   ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)
    Typed [PointDCloserSimplify.java, 23]   ch09.PointDCloserSimplify.minus.p
    Typed [ShapeD.java, 61]          ch09.HasPtV.HasPtV._p
    Typed [ShapeD.java, 78]          ch09.HasPtV.forTrans.q
    Typed [ShapeD.java, 60]          ch09.HasPtV.p
    Typed [ShapeD.java, 10]          ch09.ShapeVisitorI.forTrans.q
    Typed [ShapeD.java, 45]          ch09.Trans.Trans._q
    Typed [ShapeD.java, 43]          ch09.Trans.q

ch09.ShadowCartesian   (Class)
    Define [ShadowCartesian.java, 8]   ShadowCartesian.java

ch09.ShapeD   (Abstract Class)
    Define [ShapeD.java, 3]          ShapeD.java
    Extend [ShapeD.java, 14]         ch09.Circle
    Typed [ShapeD.java, 78]          ch09.HasPtV.forTrans.s
    Typed [ShapeD.java, 10]          ch09.ShapeVisitorI.forTrans.s
    Extend [ShapeD.java, 29]         ch09.Square
    Extend [ShapeD.java, 42]         ch09.Trans
    Typed [ShapeD.java, 45]          ch09.Trans.Trans._s
    Typed [ShapeD.java, 44]          ch09.Trans.s
    Extend [Union.java, 3]           ch09.Union
    Typed [Union.java, 6]            ch09.Union.Union._s
    Typed [Union.java, 6]            ch09.Union.Union._t
    Typed [Union.java, 4]            ch09.Union.s
    Typed [Union.java, 5]            ch09.Union.t
    Typed [Union.java, 30]           ch09.UnionHasPtV.forUnion.s
    Typed [Union.java, 30]           ch09.UnionHasPtV.forUnion.t
    Typed [Union.java, 20]           ch09.UnionVisitorI.forUnion.s
    Typed [Union.java, 20]           ch09.UnionVisitorI.forUnion.t

ch09.ShapeVisitorI   (Interface)
    Define [ShapeD.java, 7]          ShapeD.java
    Typed [ShapeD.java, 22]          ch09.Circle.accept.ask
    Implement [ShapeD.java, 58]      ch09.HasPtV
    Typed [ShapeD.java, 4]           ch09.ShapeD.accept.ask
    Typed [ShapeD.java, 36]          ch09.Square.accept.ask
    Typed [ShapeD.java, 51]          ch09.Trans.accept.ask
    Typed [Union.java, 12]           ch09.Union.accept.ask
    Implement [Union.java, 23]       ch09.UnionHasPtV
    Extend [Union.java, 19]          ch09.UnionVisitorI

ch09.Square   (Class)
    Define [ShapeD.java, 29]         ShapeD.java

ch09.Test   (Public Class)
    Define [Test.java, 3]            Test.java

ch09.Trans   (Class)
    Define [ShapeD.java, 42]         ShapeD.java

ch09.Union   (Class)
    Define [Union.java, 3]           Union.java

ch09.UnionHasPtV   (Class)
    Define [Union.java, 23]          Union.java
                                                                     Page 225
                          Type Cross Reference Report
===============================================================================

ch09.UnionVisitorI   (Interface)
    Define [Union.java, 19]          Union.java
    Cast [Union.java, 14]            ch09.Union.accept(ShapeVisitorI ask)

ch10.AnchovyFish   (Class)
    Define [PieD.java, 129]          PieD.java
    Use [PieD.java, 134]             ch10.AnchovyFish.equals(Object o)
    Create [Mian.java, 8]            ch10.Mian.main(String[] args)
    Create [Mian.java, 9]            ch10.Mian.main(String[] args)
    Create [Mian.java, 10]           ch10.Mian.main(String[] args)

ch10.Bot   (Class)
    Define [PieD.java, 95]           PieD.java
    Create [PieD.java, 68]           ch10.LtSubstV.forBot
    Create [PieD.java, 20]           ch10.RemV.forBot
    Create [PieD.java, 43]           ch10.SubstV.forBot
    Create [Mian.java, 6]            ch10.Mian.main(String[] args)
    Create [PiemanM.java, 12]        ch10.PiemanM

ch10.FishD   (Abstract Class)
    Define [PieD.java, 125]          PieD.java
    Extend [PieD.java, 129]          ch10.AnchovyFish
    Extend [PieD.java, 144]          ch10.SalmonFish
    Extend [PieD.java, 154]          ch10.TunaFish

ch10.LtSubstV   (Class)
    Define [PieD.java, 54]           PieD.java
    Create [PieD.java, 79]           ch10.LtSubstV.forTop(Object t,PieD r)

ch10.Mian   (Public Class)
    Define [Mian.java, 3]            Mian.java

ch10.OccursV   (Class)
    Define [PiemanM.java, 52]        PiemanM.java
    Create [PiemanM.java, 41]        ch10.PiemanM.occTop(Object o)

ch10.PieD   (Public Abstract Class)
    Define [PieD.java, 87]           PieD.java
    Extend [PieD.java, 95]           ch10.Bot
    Typed [PieD.java, 66]            ch10.LtSubstV.forBot
    Cast [PieD.java, 79]             ch10.LtSubstV.forTop(Object t,PieD r)
    Cast [PieD.java, 81]             ch10.LtSubstV.forTop(Object t,PieD r)
    Typed [PieD.java, 72]            ch10.LtSubstV.forTop.r
    Typed [PieD.java, 9]             ch10.PieVistor1.forTop.r
    Typed [PieD.java, 19]            ch10.RemV.forBot
    Cast [PieD.java, 27]             ch10.RemV.forTop(Object t,PieD r)
    Typed [PieD.java, 23]            ch10.RemV.forTop.r
    Cast [PieD.java, 47]             ch10.SubstV.forTop(Object t,PieD r)
    Cast [PieD.java, 49]             ch10.SubstV.forTop(Object t,PieD r)
    Typed [PieD.java, 45]            ch10.SubstV.forTop.r
    Extend [PieD.java, 106]          ch10.Top
    Typed [PieD.java, 110]           ch10.Top.Top.r
    Typed [PieD.java, 109]           ch10.Top.r
    Typed [PiemanM.java, 67]         ch10.OccursV.forTop.r
    Typed [PiemanM.java, 13]         ch10.PiemanM.PiemanM._p
    Cast [PiemanM.java, 27]          ch10.PiemanM.remTop(Object t)
    Cast [PiemanM.java, 34]          ch10.PiemanM.substTop(Object n,Object o)
    Typed [PiemanM.java, 12]         ch10.PiemanM.p

ch10.PiemanI   (Interface)
    Define [PiemanM.java, 3]         PiemanM.java
    Implement [PiemanM.java, 10]     ch10.PiemanM
    Typed [Mian.java, 6]             ch10.Mian.main.y

ch10.PiemanM   (Class)
    Define [PiemanM.java, 10]        PiemanM.java
    Create [Mian.java, 6]            ch10.Mian.main(String[] args)

ch10.PieVistor1   (Interface)
    Define [PieD.java, 7]            PieD.java
    Typed [PieD.java, 98]            ch10.Bot.accept.ask
    Implement [PieD.java, 54]        ch10.LtSubstV
    Typed [PieD.java, 92]            ch10.PieD.accept.ask
    Implement [PieD.java, 12]        ch10.RemV
    Implement [PieD.java, 33]        ch10.SubstV
    Typed [PieD.java, 116]           ch10.Top.accept.ask
    Implement [PiemanM.java, 52]     ch10.OccursV

ch10.RemV   (Class)
    Define [PieD.java, 12]           PieD.java
    Create [PiemanM.java, 27]        ch10.PiemanM.remTop(Object t)

ch10.SalmonFish   (Class)
    Define [PieD.java, 144]          PieD.java
    Use [PieD.java, 149]             ch10.SalmonFish.equals(Object o)

ch10.SubstV   (Class)
    Define [PieD.java, 33]           PieD.java
    Create [PiemanM.java, 34]        ch10.PiemanM.substTop(Object n,Object o)

ch10.Top   (Class)
    Define [PieD.java, 106]          PieD.java
    Create [PieD.java, 76]           ch10.LtSubstV.forTop(Object t,PieD r)
    Create [PieD.java, 79]           ch10.LtSubstV.forTop(Object t,PieD r)
    Create [PieD.java, 81]           ch10.LtSubstV.forTop(Object t,PieD r)
    Create [PieD.java, 27]           ch10.RemV.forTop(Object t,PieD r)
    Create [PieD.java, 47]           ch10.SubstV.forTop(Object t,PieD r)
    Create [PieD.java, 49]           ch10.SubstV.forTop(Object t,PieD r)
    Create [PiemanM.java, 20]        ch10.PiemanM.addTop(Object t)

ch10.TunaFish   (Class)
    Define [PieD.java, 154]          PieD.java
    Use [PieD.java, 159]             ch10.TunaFish.equals(Object o)
    Create [Mian.java, 10]           ch10.Mian.main(String[] args)

ReCall.Callback   (Public Interface)
    Define [Callback.java, 3]        Callback.java
    Typed [Ye.java, 10]              accept.callback
    Implement [Stranger.java, 3]     ReCall.Stranger
    Implement [Wang.java, 3]         ReCall.Wang

ReCall.Stranger   (Public Class)
    Define [Stranger.java, 3]        Stranger.java
    DotRef [Stranger.java, 19]       ReCall.Stranger.askQuestion.(Anon_1).run
    Use [Stranger.java, 19]          ReCall.Stranger.askQuestion.(Anon_1).run
    Create [Test.java, 9]            ReCall.Test.main(String[] args)
    Typed [Test.java, 9]             ReCall.Test.main.stranger
    Use [Ye.java, 26]                accept(Callback callback,String question)

ReCall.Stranger.askQuestion.(Anon_1)   (Anonymous Class)
    Define [Stranger.java, 11]       ReCall.Stranger.askQuestion(String question)

ReCall.Test   (Public Class)
    Define [Test.java, 3]            Test.java

ReCall.Wang   (Public Class)
    Define [Wang.java, 3]            Wang.java
    DotRef [Wang.java, 30]           ReCall.Wang.askQuestion.(Anon_1).run
    Use [Wang.java, 30]              ReCall.Wang.askQuestion.(Anon_1).run
    Create [Test.java, 8]            ReCall.Test.main(String[] args)
    Typed [Test.java, 8]             ReCall.Test.main.xiaodong
    Use [Ye.java, 24]                accept(Callback callback,String question)

ReCall.Wang.askQuestion.(Anon_1)   (Anonymous Class)
    Define [Wang.java, 22]           ReCall.Wang.askQuestion(String question)

ReCall.Ye   (Public Class)
    Define [Ye.java, 3]              Ye.java
    Create [Test.java, 5]            ReCall.Test.main(String[] args)
    Typed [Test.java, 5]             ReCall.Test.main.zhaoliang
    Typed [Stranger.java, 5]         ReCall.Stranger.Stranger.ye
    Typed [Stranger.java, 4]         ReCall.Stranger.ye
    Typed [Wang.java, 13]            ReCall.Wang.Wang.ye
    Typed [Wang.java, 7]             ReCall.Wang.ye

YeRestaurant.Cai.Apple   (Public Class)
    Define [Apple.java, 5]           Apple.java

YeRestaurant.Cai.Banana   (Public Class)
    Define [Banana.java, 5]          Banana.java

YeRestaurant.Cai.HongShaoRou   (Public Class)
    Define [HongShaoRou.java, 5]     HongShaoRou.java

YeRestaurant.Cai.QingJiaoRouSi   (Public Class)
    Define [QingJiaoRouSi.java, 5]   QingJiaoRouSi.java
                                                                     Page 226
                          Type Cross Reference Report
===============================================================================

YeRestaurant.Cai.SuanTaiChaoRou   (Public Class)
    Define [SuanTaiChaoRou.java, 5]   SuanTaiChaoRou.java

YeRestaurant.Cai.TangCuLiYu   (Public Class)
    Define [TangCuLiYu.java, 5]      TangCuLiYu.java

YeRestaurant.Food   (Public Interface)
    Define [Food.java, 3]            Food.java
    Import [QingJiaoRouSi.java, 3]   QingJiaoRouSi.java
    Implement [QingJiaoRouSi.java, 5]   YeRestaurant.Cai.QingJiaoRouSi
    Import [TangCuLiYu.java, 3]      TangCuLiYu.java
    Implement [TangCuLiYu.java, 5]   YeRestaurant.Cai.TangCuLiYu
    Import [SuanTaiChaoRou.java, 3]   SuanTaiChaoRou.java
    Implement [SuanTaiChaoRou.java, 5]   YeRestaurant.Cai.SuanTaiChaoRou
    Use [Restaurant.java, 36]        YeRestaurant.Restaurant
    Cast [Restaurant.java, 71]       YeRestaurant.Restaurant.init
    Typed [Restaurant.java, 71]      YeRestaurant.Restaurant.init.(for_loop_1).food
    Typed [Restaurant.java, 91]      YeRestaurant.Restaurant.showFoods.(for_loop_2).temp
    Use [Restaurant.java, 36]        YeRestaurant.Restaurant.foods
    Import [Apple.java, 3]           Apple.java
    Implement [Apple.java, 5]        YeRestaurant.Cai.Apple
    Import [Banana.java, 3]          Banana.java
    Implement [Banana.java, 5]       YeRestaurant.Cai.Banana
    Import [HongShaoRou.java, 3]     HongShaoRou.java
    Implement [HongShaoRou.java, 5]   YeRestaurant.Cai.HongShaoRou

YeRestaurant.Restaurant   (Public Class)
    Define [Restaurant.java, 9]      Restaurant.java
    DotRef [Restaurant.java, 46]     YeRestaurant.Restaurant.init
    Create [Restaurant.java, 101]    YeRestaurant.Restaurant.main(String[] args)
    Typed [Restaurant.java, 101]     YeRestaurant.Restaurant.main.res
                                                                     Page 227
                            Declaration Tree Report
===============================================================================

ch01   (Package)
| ch01.Base   (Class)
| | Base.Base   (Public Constructor)
| ch01.LayerD   (Public Abstract Class)
| ch01.Slice   (Class)
| | Slice.Slice   (Public Constructor)
| ch01.MoreThanOne   (Class)
| | MoreThanOne.MoreThanOne   (Public Constructor)
| ch01.NumD   (Public Abstract Class)
| ch01.Zero   (Class)
| ch01.Pepper   (Class)
| ch01.Sage   (Class)
| ch01.Salt   (Class)
| ch01.Seasoning   (Public Abstract Class)
| ch01.Thyme   (Class)
| ch01.Test   (Public Class)
| | Test.main   (Public Static Method)
| ch01.CartesianPt   (Class)
| | CartesianPt.CartesianPt   (Public Constructor)
| ch01.ManHattanPt   (Class)
| | ManHattanPt.ManHattanPt   (Public Constructor)
| | ManHattanPt.toString   (Public Method)
| ch01.PointD   (Abstract Class)
| ch01.TestMain   (Public Class)
| | TestMain.main   (Public Static Method)

ch02   (Package)
| ch02.Holder   (Class)
| | Holder.Holder   (Public Constructor)
| | Holder.isVeggie   (Method)
| | Holder.whatHolder   (Method)
| ch02.KaoRou   (Public Abstract Class)
| | KaoRou.isVeggie   (Abstract Method)
| | KaoRou.whatHolder   (Abstract Method)
| | KaoRou.toString   (Public Method)
| ch02.Pepper   (Class)
| | Pepper.Pepper   (Public Constructor)
| | Pepper.isVeggie   (Method)
| | Pepper.whatHolder   (Method)
| ch02.Radish   (Class)
| | Radish.Radish   (Public Constructor)
| | Radish.isVeggie   (Method)
| | Radish.whatHolder   (Method)
| ch02.Shallot   (Class)
| | Shallot.Shallot   (Public Constructor)
| | Shallot.isVeggie   (Method)
| | Shallot.whatHolder   (Method)
| ch02.Shrimp   (Class)
| | Shrimp.Shrimp   (Public Constructor)
| | Shrimp.isVeggie   (Method)
| | Shrimp.whatHolder   (Method)
| ch02.Zucchini   (Class)
| | Zucchini.Zucchini   (Public Constructor)
| | Zucchini.isVeggie   (Method)
                                                                     Page 228
                            Declaration Tree Report
===============================================================================
| | Zucchini.whatHolder   (Method)
| ch02.Test   (Public Class)
| | Test.main   (Public Static Method)
| ch02.TestTYangRouChuan   (Public Class)
| | TestTYangRouChuan.main   (Public Static Method)
| ch02.MoreThanOne   (Class)
| | MoreThanOne.MoreThanOne   (Public Constructor)
| ch02.NumD   (Public Abstract Class)
| ch02.Zero   (Class)
| ch02.Lamb   (Class)
| | Lamb.Lamb   (Public Constructor)
| | Lamb.onlyOnions   (Method)
| | Lamb.isVegetarian   (Method)
| ch02.Onion   (Class)
| | Onion.Onion   (Public Constructor)
| | Onion.onlyOnions   (Method)
| | Onion.isVegetarian   (Method)
| | Onion.toString   (Public Method)
| ch02.Skewer   (Class)
| | Skewer.onlyOnions   (Method)
| | Skewer.isVegetarian   (Method)
| ch02.Tomato   (Class)
| | Tomato.Tomato   (Public Constructor)
| | Tomato.onlyOnions   (Method)
| | Tomato.isVegetarian   (Method)
| | Tomato.toString   (Public Method)
| ch02.YangRouChuan   (Public Abstract Class)
| | YangRouChuan.onlyOnions   (Abstract Method)
| | YangRouChuan.isVegetarian   (Abstract Method)
| | YangRouChuan.YangRouChuan   (Public Constructor)
| | YangRouChuan.toString   (Public Method)
| ch02.CartesianPt2   (Class)
| | CartesianPt2.CartesianPt2   (Public Constructor)
| | CartesianPt2.distanceTo0   (Method)
| ch02.ManHattanPt2   (Class)
| | ManHattanPt2.ManHattanPt2   (Public Constructor)
| | ManHattanPt2.distanceTo0   (Method)
| | ManHattanPt2.closerTo0   (Method)
| ch02.PointDCloserSimplify   (Public Abstract Class)
| | PointDCloserSimplify.distanceTo0   (Abstract Method)
| | PointDCloserSimplify.closerTo0   (Method)
| ch02.CartesianPt1   (Class)
| | CartesianPt1.CartesianPt1   (Public Constructor)
| | CartesianPt1.distanceTo0   (Method)
| | CartesianPt1.closerTo0   (Method)
| ch02.ManHattanPt1   (Class)
| | ManHattanPt1.ManHattanPt1   (Public Constructor)
| | ManHattanPt1.distanceTo0   (Method)
| | ManHattanPt1.closerTo0   (Method)
| ch02.PointDCloser   (Public Abstract Class)
| | PointDCloser.distanceTo0   (Abstract Method)
| ch02.Main   (Public Class)
| | Main.main   (Public Static Method)
| ch02.Brass   (Class)
| ch02.Copper   (Class)
                                                                     Page 229
                            Declaration Tree Report
===============================================================================
| ch02.Gold   (Class)
| ch02.KaoRouPlates   (Public Abstract Class)
| ch02.Silver   (Class)
| ch02.Wood   (Class)
| ch02.Dagger   (Class)
| ch02.KaoRouChuan   (Public Abstract Class)
| ch02.Sabre   (Class)
| ch02.Sword   (Class)
| ch02.CartesianPt   (Class)
| | CartesianPt.CartesianPt   (Public Constructor)
| | CartesianPt.distanceTo0   (Method)
| ch02.ManHattanPt   (Class)
| | ManHattanPt.ManHattanPt   (Public Constructor)
| | ManHattanPt.distanceTo0   (Method)
| | ManHattanPt.toString   (Public Method)
| ch02.PointD   (Public Abstract Class)
| | PointD.distanceTo0   (Abstract Method)
| | PointD.toString   (Public Method)

ch03   (Package)
| ch03.Anchovy   (Class)
| | Anchovy.Anchovy   (Public Constructor)
| | Anchovy.remA   (Method)
| | Anchovy.topAwC   (Method)
| | Anchovy.subAwC   (Method)
| ch03.Cheese   (Class)
| | Cheese.Cheese   (Public Constructor)
| | Cheese.remA   (Method)
| | Cheese.topAwC   (Method)
| | Cheese.subAwC   (Method)
| ch03.Crust   (Class)
| | Crust.remA   (Method)
| | Crust.topAwC   (Method)
| | Crust.subAwC   (Method)
| ch03.Olive   (Class)
| | Olive.Olive   (Public Constructor)
| | Olive.remA   (Method)
| | Olive.topAwC   (Method)
| | Olive.subAwC   (Method)
| ch03.PizzaD   (Public Abstract Class)
| | PizzaD.remA   (Abstract Method)
| | PizzaD.topAwC   (Abstract Method)
| | PizzaD.subAwC   (Abstract Method)
| ch03.Sausage   (Class)
| | Sausage.Sausage   (Public Constructor)
| | Sausage.remA   (Method)
| | Sausage.topAwC   (Method)
| | Sausage.subAwC   (Method)
| ch03.Spinach   (Class)
| | Spinach.Spinach   (Public Constructor)
| | Spinach.remA   (Method)
| | Spinach.topAwC   (Method)
| | Spinach.subAwC   (Method)

ch04   (Package)
                                                                     Page 230
                            Declaration Tree Report
===============================================================================
| ch04.IsVegetarianV   (Class)
| | IsVegetarianV.forSkewer   (Method)
| | IsVegetarianV.forOnion   (Method)
| | IsVegetarianV.forLamb   (Method)
| | IsVegetarianV.forTomato   (Method)
| ch04.Lamb   (Class)
| | Lamb.Lamb   (Public Constructor)
| | Lamb.onlyOnions   (Method)
| | Lamb.isVegetarian   (Method)
| ch04.Onion   (Class)
| | Onion.Onion   (Public Constructor)
| | Onion.onlyOnions   (Method)
| | Onion.isVegetarian   (Method)
| ch04.OnlyOnionsV   (Class)
| | OnlyOnionsV.forSkewer   (Method)
| | OnlyOnionsV.forOnion   (Method)
| | OnlyOnionsV.forLamb   (Method)
| | OnlyOnionsV.forTomato   (Method)
| ch04.Skewer   (Class)
| | Skewer.onlyOnions   (Method)
| | Skewer.isVegetarian   (Method)
| ch04.Tomato   (Class)
| | Tomato.Tomato   (Public Constructor)
| | Tomato.onlyOnions   (Method)
| | Tomato.isVegetarian   (Method)
| ch04.YangRouChuan   (Public Abstract Class)
| | YangRouChuan.onlyOnions   (Abstract Method)
| | YangRouChuan.isVegetarian   (Abstract Method)

ch05   (Package)
| ch05.MoreThanOne   (Class)
| | MoreThanOne.MoreThanOne   (Public Constructor)
| | MoreThanOne.equals   (Public Method)
| ch05.NumD   (Public Abstract Class)
| ch05.Zero   (Class)
| | Zero.equals   (Public Method)
| ch05.AnchovyFish   (Class)
| | AnchovyFish.equals   (Public Method)
| ch05.Bot   (Class)
| | Bot.remA   (Method)
| | Bot.remFish   (Method)
| ch05.FishD   (Abstract Class)
| | FishD.equals   (Public Abstract Method)
| ch05.PieD   (Public Abstract Class)
| | PieD.remA   (Abstract Method)
| | PieD.remFish   (Abstract Method)
| ch05.RemAV   (Class)
| | RemAV.forBot   (Method)
| | RemAV.forTop   (Method)
| ch05.RemFishV   (Class)
| | RemFishV.forBot   (Method)
| | RemFishV.forTop   (Method)
| ch05.SalmonFish   (Class)
| | SalmonFish.equals   (Public Method)
| ch05.Top   (Class)
                                                                     Page 231
                            Declaration Tree Report
===============================================================================
| | Top.Top   (Public Constructor)
| | Top.remA   (Method)
| | Top.remFish   (Method)
| ch05.TunaFish   (Class)
| | TunaFish.equals   (Public Method)
| ch05.Bot1   (Class)
| | Bot1.remA   (Method)
| ch05.PieDGeneral   (Public Abstract Class)
| | PieDGeneral.remA   (Abstract Method)
| ch05.RemFishInt   (Class)
| | RemFishInt.forBot   (Method)
| | RemFishInt.forTop   (Method)
| ch05.RemFishV1   (Class)
| | RemFishV1.forBot   (Method)
| | RemFishV1.forTop   (Method)
| ch05.RemV   (Class)
| | RemV.forBot   (Method)
| | RemV.forTop   (Method)
| ch05.Top1   (Class)
| | Top1.Top1   (Public Constructor)
| | Top1.remA   (Method)

ch051   (Package)
| ch051.AnchovyFish   (Class)
| | AnchovyFish.equals   (Public Method)
| ch051.Bot   (Class)
| | Bot.remA   (Method)
| | Bot.substFish   (Method)
| ch051.FishD   (Abstract Class)
| | FishD.equals   (Public Abstract Method)
| ch051.PieD   (Public Abstract Class)
| | PieD.remA   (Abstract Method)
| | PieD.substFish   (Abstract Method)
| ch051.RemFishInt   (Class)
| | RemFishInt.forBot   (Method)
| | RemFishInt.forTop   (Method)
| ch051.RemFishV   (Class)
| | RemFishV.forBot   (Method)
| | RemFishV.forTop   (Method)
| ch051.RemV   (Class)
| | RemV.forBot   (Method)
| | RemV.forTop   (Method)
| ch051.SalmonFish   (Class)
| | SalmonFish.equals   (Public Method)
| ch051.SubstFishV   (Class)
| | SubstFishV.forBot   (Method)
| | SubstFishV.forTop   (Method)
| ch051.SubstIntV   (Class)
| | SubstIntV.forBot   (Method)
| | SubstIntV.forTop   (Method)
| ch051.SubstV   (Class)
| | SubstV.forBot   (Method)
| | SubstV.forTop   (Method)
| ch051.Top   (Class)
| | Top.Top   (Public Constructor)
                                                                     Page 232
                            Declaration Tree Report
===============================================================================
| | Top.remA   (Method)
| | Top.substFish   (Method)
| ch051.TunaFish   (Class)
| | TunaFish.equals   (Public Method)

ch06   (Package)
| ch06.AnchovyFish   (Class)
| | AnchovyFish.equals   (Public Method)
| ch06.Bot   (Class)
| | Bot.remA   (Method)
| | Bot.substFish   (Method)
| ch06.FishD   (Abstract Class)
| | FishD.equals   (Public Abstract Method)
| ch06.PieD   (Public Abstract Class)
| | PieD.remA   (Abstract Method)
| | PieD.substFish   (Abstract Method)
| ch06.RemV   (Class)
| | RemV.forBot   (Method)
| | RemV.forTop   (Method)
| ch06.SalmonFish   (Class)
| | SalmonFish.equals   (Public Method)
| ch06.SubstV   (Class)
| | SubstV.forBot   (Method)
| | SubstV.forTop   (Method)
| ch06.Top   (Class)
| | Top.Top   (Public Constructor)
| | Top.remA   (Method)
| | Top.substFish   (Method)
| ch06.TunaFish   (Class)
| | TunaFish.equals   (Public Method)

ch061   (Package)
| ch061.AnchovyFish   (Class)
| | AnchovyFish.equals   (Public Method)
| ch061.Bot   (Class)
| | Bot.Bot   (Public Constructor)
| | Bot.remA   (Method)
| | Bot.substFish   (Method)
| ch061.FishD   (Abstract Class)
| | FishD.equals   (Public Abstract Method)
| ch061.PieD   (Public Abstract Class)
| | PieD.remA   (Abstract Method)
| | PieD.substFish   (Abstract Method)
| ch061.RemV   (Class)
| | RemV.RemV   (Public Constructor)
| | RemV.forBot   (Method)
| | RemV.forTop   (Method)
| ch061.SalmonFish   (Class)
| | SalmonFish.equals   (Public Method)
| ch061.SubstV   (Class)
| | SubstV.SubstV   (Public Constructor)
| | SubstV.forBot   (Method)
| | SubstV.forTop   (Method)
| ch061.Top   (Class)
| | Top.Top   (Public Constructor)
                                                                     Page 233
                            Declaration Tree Report
===============================================================================
| | Top.remA   (Method)
| | Top.substFish   (Method)
| ch061.TunaFish   (Class)
| | TunaFish.equals   (Public Method)

ch062   (Package)
| ch062.Bot   (Class)
| | Bot.accept   (Method)
| ch062.LtSubstV   (Class)
| | LtSubstV.LtSubstV   (Public Constructor)
| | LtSubstV.forBot   (Public Method)
| | LtSubstV.forTop   (Public Method)
| ch062.PieD   (Public Abstract Class)
| | PieD.accept   (Abstract Method)
| ch062.PieVistor1   (Interface)
| | PieVistor1.forBot   (Abstract Method)
| | PieVistor1.forTop   (Abstract Method)
| ch062.RemV   (Class)
| | RemV.RemV   (Public Constructor)
| | RemV.forBot   (Public Method)
| | RemV.forTop   (Public Method)
| ch062.SubstV   (Class)
| | SubstV.SubstV   (Public Constructor)
| | SubstV.forBot   (Public Method)
| | SubstV.forTop   (Public Method)
| ch062.Top   (Class)
| | Top.Top   (Public Constructor)
| | Top.accept   (Method)

ch07   (Package)
| ch07.Apple   (Class)
| | Apple.equals   (Public Method)
| ch07.Fig   (Class)
| | Fig.equals   (Public Method)
| ch07.FruitD   (Abstract Class)
| ch07.Lemon   (Class)
| | Lemon.equals   (Public Method)
| ch07.Peach   (Class)
| | Peach.equals   (Public Method)
| ch07.Pear   (Class)
| | Pear.equals   (Public Method)
| ch07.BHasFruitV   (Class)
| | BHasFruitV.forBud   (Public Method)
| | BHasFruitV.forFlat   (Public Method)
| | BHasFruitV.forSplit   (Public Method)
| ch07.BIsFlatV   (Class)
| | BIsFlatV.forBud   (Public Method)
| | BIsFlatV.forFlat   (Public Method)
| | BIsFlatV.forSplit   (Public Method)
| ch07.BIsSplitV   (Class)
| | BIsSplitV.forBud   (Public Method)
| | BIsSplitV.forFlat   (Public Method)
| | BIsSplitV.forSplit   (Public Method)
| ch07.BTreeVisitorI   (Interface)
| | BTreeVisitorI.forBud   (Abstract Method)
                                                                     Page 234
                            Declaration Tree Report
===============================================================================
| | BTreeVisitorI.forFlat   (Abstract Method)
| | BTreeVisitorI.forSplit   (Abstract Method)
| ch07.Bud   (Class)
| | Bud.accept   (Method)
| | Bud.accept   (Method)
| | Bud.accept   (Method)
| ch07.Flat   (Class)
| | Flat.Flat   (Public Constructor)
| | Flat.accept   (Method)
| | Flat.accept   (Method)
| | Flat.accept   (Method)
| ch07.IHeightV   (Class)
| | IHeightV.forBud   (Public Method)
| | IHeightV.forFlat   (Public Method)
| | IHeightV.forSplit   (Public Method)
| ch07.IOccursV   (Class)
| | IOccursV.IOccursV   (Public Constructor)
| | IOccursV.forBud   (Public Method)
| | IOccursV.forFlat   (Public Method)
| | IOccursV.forSplit   (Public Method)
| ch07.ITreeVisitorI   (Interface)
| | ITreeVisitorI.forBud   (Abstract Method)
| | ITreeVisitorI.forFlat   (Abstract Method)
| | ITreeVisitorI.forSplit   (Abstract Method)
| ch07.Split   (Class)
| | Split.Split   (Public Constructor)
| | Split.accept   (Method)
| | Split.accept   (Method)
| | Split.accept   (Method)
| ch07.TSubstsV   (Class)
| | TSubstsV.TSubstsV   (Public Constructor)
| | TSubstsV.forBud   (Public Method)
| | TSubstsV.forFlat   (Public Method)
| | TSubstsV.forSplit   (Public Method)
| ch07.TTreeVisitorI   (Interface)
| | TTreeVisitorI.forBud   (Abstract Method)
| | TTreeVisitorI.forFlat   (Abstract Method)
| | TTreeVisitorI.forSplit   (Abstract Method)
| ch07.TreeD   (Abstract Class)
| | TreeD.accept   (Abstract Method)
| | TreeD.accept   (Abstract Method)
| | TreeD.accept   (Abstract Method)

ch071   (Package)
| ch071.Apple   (Class)
| | Apple.equals   (Public Method)
| ch071.Fig   (Class)
| | Fig.equals   (Public Method)
| ch071.FruitD   (Abstract Class)
| ch071.Lemon   (Class)
| | Lemon.equals   (Public Method)
| ch071.Peach   (Class)
| | Peach.equals   (Public Method)
| ch071.Pear   (Class)
| | Pear.equals   (Public Method)
                                                                     Page 235
                            Declaration Tree Report
===============================================================================
| ch071.Bud   (Class)
| | Bud.accept   (Method)
| ch071.Flat   (Class)
| | Flat.Flat   (Public Constructor)
| | Flat.accept   (Method)
| ch071.HasFruitV   (Class)
| | HasFruitV.forBud   (Public Method)
| | HasFruitV.forFlat   (Public Method)
| | HasFruitV.forSplit   (Public Method)
| ch071.IHeightV   (Class)
| | IHeightV.forBud   (Public Method)
| | IHeightV.forFlat   (Public Method)
| | IHeightV.forSplit   (Public Method)
| ch071.IOccursV   (Class)
| | IOccursV.IOccursV   (Public Constructor)
| | IOccursV.forBud   (Public Method)
| | IOccursV.forFlat   (Public Method)
| | IOccursV.forSplit   (Public Method)
| ch071.IsFlatV   (Class)
| | IsFlatV.forBud   (Public Method)
| | IsFlatV.forFlat   (Public Method)
| | IsFlatV.forSplit   (Public Method)
| ch071.IsSplitV   (Class)
| | IsSplitV.forBud   (Public Method)
| | IsSplitV.forFlat   (Public Method)
| | IsSplitV.forSplit   (Public Method)
| ch071.Split   (Class)
| | Split.Split   (Public Constructor)
| | Split.accept   (Method)
| ch071.TSubstsV   (Class)
| | TSubstsV.TSubstsV   (Public Constructor)
| | TSubstsV.forBud   (Public Method)
| | TSubstsV.forFlat   (Public Method)
| | TSubstsV.forSplit   (Public Method)
| ch071.TreeD   (Abstract Class)
| | TreeD.accept   (Abstract Method)
| ch071.TreeVisitorI   (Interface)
| | TreeVisitorI.forBud   (Abstract Method)
| | TreeVisitorI.forFlat   (Abstract Method)
| | TreeVisitorI.forSplit   (Abstract Method)

ch08   (Package)
| ch08.Const   (Class)
| | Const.Const   (Public Constructor)
| | Const.accpet   (Method)
| ch08.Diff   (Class)
| | Diff.Diff   (Public Constructor)
| | Diff.accpet   (Method)
| ch08.ExprD   (Abstract Class)
| | ExprD.accpet   (Abstract Method)
| ch08.ExprVisitorI   (Interface)
| | ExprVisitorI.forPlus   (Abstract Method)
| | ExprVisitorI.forDiff   (Abstract Method)
| | ExprVisitorI.forProd   (Abstract Method)
| | ExprVisitorI.forConst   (Abstract Method)
                                                                     Page 236
                            Declaration Tree Report
===============================================================================
| ch08.IntEvalV   (Class)
| | IntEvalV.forPlus   (Public Method)
| | IntEvalV.forDiff   (Public Method)
| | IntEvalV.forProd   (Public Method)
| | IntEvalV.forConst   (Public Method)
| | IntEvalV.plus   (Method)
| | IntEvalV.diff   (Method)
| | IntEvalV.prod   (Method)
| ch08.Plus   (Class)
| | Plus.Plus   (Public Constructor)
| | Plus.accpet   (Method)
| ch08.Prod   (Class)
| | Prod.Prod   (Public Constructor)
| | Prod.accpet   (Method)
| ch08.Add   (Class)
| | Add.Add   (Public Constructor)
| | Add.mem   (Method)
| | Add.plus   (Method)
| | Add.diff   (Method)
| | Add.prod   (Method)
| ch08.Empty   (Class)
| | Empty.mem   (Method)
| | Empty.plus   (Method)
| | Empty.diff   (Method)
| | Empty.prod   (Method)
| ch08.SetD   (Abstract Class)
| | SetD.add   (Method)
| | SetD.mem   (Abstract Method)
| | SetD.plus   (Abstract Method)
| | SetD.diff   (Abstract Method)
| | SetD.prod   (Abstract Method)
| ch08.SetEvalV   (Class)
| | SetEvalV.plus   (Method)
| | SetEvalV.diff   (Method)
| | SetEvalV.prod   (Method)

ch0801That   (Package)
| ch0801That.Bot   (Class)
| | Bot.accept   (Method)
| | Bot.toString   (Public Method)
| ch0801That.LtSubstV   (Class)
| | LtSubstV.LtSubstV   (Public Constructor)
| | LtSubstV.forBot   (Public Method)
| | LtSubstV.forTop   (Public Method)
| ch0801That.PieDUpdate   (Public Abstract Class)
| | PieDUpdate.accept   (Abstract Method)
| ch0801That.PieVistor1   (Interface)
| | PieVistor1.forBot   (Abstract Method)
| | PieVistor1.forTop   (Abstract Method)
| ch0801That.RemV   (Class)
| | RemV.RemV   (Public Constructor)
| | RemV.forBot   (Public Method)
| | RemV.forTop   (Public Method)
| ch0801That.SubstV   (Class)
| | SubstV.SubstV   (Public Constructor)
                                                                     Page 237
                            Declaration Tree Report
===============================================================================
| | SubstV.forBot   (Public Method)
| | SubstV.forTop   (Public Method)
| ch0801That.Top   (Class)
| | Top.Top   (Public Constructor)
| | Top.accept   (Method)
| | Top.toString   (Public Method)
| ch0801That.TestThat   (Public Class)
| | TestThat.main   (Public Static Method)

ch081   (Package)
| ch081.Const   (Class)
| | Const.Const   (Public Constructor)
| | Const.accpet   (Method)
| ch081.Diff   (Class)
| | Diff.Diff   (Public Constructor)
| | Diff.accpet   (Method)
| ch081.EvalV   (Abstract Class)
| | EvalV.forPlus   (Public Method)
| | EvalV.forDiff   (Public Method)
| | EvalV.forProd   (Public Method)
| | EvalV.forConst   (Public Method)
| | EvalV.plus   (Abstract Method)
| | EvalV.diff   (Abstract Method)
| | EvalV.prod   (Abstract Method)
| ch081.ExprD   (Abstract Class)
| | ExprD.accpet   (Abstract Method)
| ch081.ExprVisitorI   (Interface)
| | ExprVisitorI.forPlus   (Abstract Method)
| | ExprVisitorI.forDiff   (Abstract Method)
| | ExprVisitorI.forProd   (Abstract Method)
| | ExprVisitorI.forConst   (Abstract Method)
| ch081.IntEvalV   (Class)
| | IntEvalV.plus   (Method)
| | IntEvalV.diff   (Method)
| | IntEvalV.prod   (Method)
| ch081.Plus   (Class)
| | Plus.Plus   (Public Constructor)
| | Plus.accpet   (Method)
| ch081.Prod   (Class)
| | Prod.Prod   (Public Constructor)
| | Prod.accpet   (Method)
| ch081.Bot   (Class)
| | Bot.accept   (Method)
| | Bot.toString   (Public Method)
| ch081.LtSubstV   (Class)
| | LtSubstV.LtSubstV   (Public Constructor)
| | LtSubstV.forBot   (Public Method)
| | LtSubstV.forTop   (Public Method)
| ch081.PieD   (Public Abstract Class)
| | PieD.accept   (Abstract Method)
| ch081.PieVistor1   (Interface)
| | PieVistor1.forBot   (Abstract Method)
| | PieVistor1.forTop   (Abstract Method)
| ch081.RemV   (Class)
| | RemV.RemV   (Public Constructor)
                                                                     Page 238
                            Declaration Tree Report
===============================================================================
| | RemV.forBot   (Public Method)
| | RemV.forTop   (Public Method)
| ch081.SubstV   (Class)
| | SubstV.SubstV   (Public Constructor)
| | SubstV.forBot   (Public Method)
| | SubstV.forTop   (Public Method)
| ch081.Top   (Class)
| | Top.Top   (Public Constructor)
| | Top.accept   (Method)
| | Top.toString   (Public Method)
| ch081.TestPieD   (Public Class)
| | TestPieD.main   (Public Static Method)
| ch081.LtSubstV1   (Class)
| | LtSubstV1.LtSubstV1   (Public Constructor)
| | LtSubstV1.forTop   (Public Method)
| ch081.SubstD   (Abstract Class)
| | SubstD.SubstD   (Public Constructor)
| | SubstD.forBot   (Public Method)
| | SubstD.forTop   (Public Abstract Method)
| ch081.SubstV1   (Class)
| | SubstV1.SubstV1   (Public Constructor)
| | SubstV1.forTop   (Public Method)
| ch081.LtSubstV2   (Class)
| | LtSubstV2.LtSubstV2   (Public Constructor)
| | LtSubstV2.forTop   (Public Method)
| ch081.SubstVExt   (Abstract Class)
| | SubstVExt.SubstVExt   (Public Constructor)
| | SubstVExt.forBot   (Public Method)
| | SubstVExt.forTop   (Public Method)
| ch081.Add   (Class)
| | Add.Add   (Public Constructor)
| | Add.mem   (Method)
| | Add.plus   (Method)
| | Add.diff   (Method)
| | Add.prod   (Method)
| ch081.Empty   (Class)
| | Empty.mem   (Method)
| | Empty.plus   (Method)
| | Empty.diff   (Method)
| | Empty.prod   (Method)
| ch081.SetD   (Abstract Class)
| | SetD.add   (Method)
| | SetD.mem   (Abstract Method)
| | SetD.plus   (Abstract Method)
| | SetD.diff   (Abstract Method)
| | SetD.prod   (Abstract Method)
| ch081.SetEvalV   (Class)
| | SetEvalV.plus   (Method)
| | SetEvalV.diff   (Method)
| | SetEvalV.prod   (Method)

ch09   (Package)
| ch09.CartesianPt2   (Class)
| | CartesianPt2.CartesianPt2   (Public Constructor)
| | CartesianPt2.distanceTo0   (Method)
                                                                     Page 239
                            Declaration Tree Report
===============================================================================
| ch09.ManHattanPt2   (Class)
| | ManHattanPt2.ManHattanPt2   (Public Constructor)
| | ManHattanPt2.distanceTo0   (Method)
| | ManHattanPt2.closerTo0   (Method)
| ch09.PointDCloserSimplify   (Public Abstract Class)
| | PointDCloserSimplify.PointDCloserSimplify   (Public Constructor)
| | PointDCloserSimplify.distanceTo0   (Abstract Method)
| | PointDCloserSimplify.closerTo0   (Method)
| | PointDCloserSimplify.minus   (Method)
| ch09.Union   (Class)
| | Union.Union   (Public Constructor)
| | Union.accept   (Method)
| ch09.UnionHasPtV   (Class)
| | UnionHasPtV.UnionHasPtV   (Public Constructor)
| | UnionHasPtV.forUnion   (Public Method)
| ch09.UnionVisitorI   (Interface)
| | UnionVisitorI.forUnion   (Abstract Method)
| ch09.Circle   (Class)
| | Circle.Circle   (Public Constructor)
| | Circle.accept   (Method)
| ch09.HasPtV   (Class)
| | HasPtV.HasPtV   (Public Constructor)
| | HasPtV.forCircle   (Public Method)
| | HasPtV.forSquare   (Public Method)
| | HasPtV.forTrans   (Public Method)
| ch09.ShapeD   (Abstract Class)
| | ShapeD.accept   (Abstract Method)
| ch09.ShapeVisitorI   (Interface)
| | ShapeVisitorI.forCircle   (Abstract Method)
| | ShapeVisitorI.forSquare   (Abstract Method)
| | ShapeVisitorI.forTrans   (Abstract Method)
| ch09.Square   (Class)
| | Square.Square   (Public Constructor)
| | Square.accept   (Method)
| ch09.Trans   (Class)
| | Trans.Trans   (Public Constructor)
| | Trans.accept   (Method)
| ch09.Test   (Public Class)
| | Test.main   (Public Static Method)
| ch09.ShadowCartesian   (Class)
| | ShadowCartesian.ShadowCartesian   (Public Constructor)
| | ShadowCartesian.distanceTo0   (Method)

ch10   (Package)
| ch10.Mian   (Public Class)
| | Mian.main   (Public Static Method)
| ch10.AnchovyFish   (Class)
| | AnchovyFish.equals   (Public Method)
| | AnchovyFish.toString   (Public Method)
| ch10.Bot   (Class)
| | Bot.accept   (Method)
| ch10.FishD   (Abstract Class)
| | FishD.equals   (Public Abstract Method)
| ch10.LtSubstV   (Class)
| | LtSubstV.LtSubstV   (Public Constructor)
                                                                     Page 240
                            Declaration Tree Report
===============================================================================
| | LtSubstV.forBot   (Public Method)
| | LtSubstV.forTop   (Public Method)
| ch10.PieD   (Public Abstract Class)
| | PieD.accept   (Abstract Method)
| ch10.PieVistor1   (Interface)
| | PieVistor1.forBot   (Abstract Method)
| | PieVistor1.forTop   (Abstract Method)
| ch10.RemV   (Class)
| | RemV.RemV   (Public Constructor)
| | RemV.forBot   (Public Method)
| | RemV.forTop   (Public Method)
| ch10.SalmonFish   (Class)
| | SalmonFish.equals   (Public Method)
| ch10.SubstV   (Class)
| | SubstV.SubstV   (Public Constructor)
| | SubstV.forBot   (Public Method)
| | SubstV.forTop   (Public Method)
| ch10.Top   (Class)
| | Top.Top   (Public Constructor)
| | Top.accept   (Method)
| ch10.TunaFish   (Class)
| | TunaFish.equals   (Public Method)
| ch10.OccursV   (Class)
| | OccursV.OccursV   (Public Constructor)
| | OccursV.forBot   (Public Method)
| | OccursV.forTop   (Public Method)
| ch10.PiemanI   (Interface)
| | PiemanI.addTop   (Abstract Method)
| | PiemanI.remTop   (Abstract Method)
| | PiemanI.substTop   (Abstract Method)
| | PiemanI.occTop   (Abstract Method)
| ch10.PiemanM   (Class)
| | PiemanM.PiemanM   (Public Constructor)
| | PiemanM.addTop   (Public Method)
| | PiemanM.remTop   (Public Method)
| | PiemanM.substTop   (Public Method)
| | PiemanM.occTop   (Public Method)
| | PiemanM.toString   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch01\LayerD.java   (File)
| ch01.LayerD   (Public Abstract Class)
| ch01.Base   (Class)
| | Base.Base   (Public Constructor)
| ch01.Slice   (Class)
| | Slice.Slice   (Public Constructor)

K:\IntellijHome\The-Little-Java\src\ch01\NumD.java   (File)
| ch01.NumD   (Public Abstract Class)
| ch01.Zero   (Class)
| ch01.MoreThanOne   (Class)
| | MoreThanOne.MoreThanOne   (Public Constructor)

K:\IntellijHome\The-Little-Java\src\ch01\PointD.java   (File)
| ch01.PointD   (Abstract Class)
| ch01.CartesianPt   (Class)
                                                                     Page 241
                            Declaration Tree Report
===============================================================================
| | CartesianPt.CartesianPt   (Public Constructor)
| ch01.ManHattanPt   (Class)
| | ManHattanPt.ManHattanPt   (Public Constructor)
| | ManHattanPt.toString   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch01\Seasoning.java   (File)
| ch01.Seasoning   (Public Abstract Class)
| ch01.Salt   (Class)
| ch01.Pepper   (Class)
| ch01.Thyme   (Class)
| ch01.Sage   (Class)

K:\IntellijHome\The-Little-Java\src\ch01\Test.java   (File)
| ch01.Test   (Public Class)
| | Test.main   (Public Static Method)

K:\IntellijHome\The-Little-Java\src\ch01\TestMain.java   (File)
| ch01.TestMain   (Public Class)
| | TestMain.main   (Public Static Method)

K:\IntellijHome\The-Little-Java\src\ch02\KaoRou.java   (File)
| ch02.KaoRou   (Public Abstract Class)
| | KaoRou.isVeggie   (Abstract Method)
| | KaoRou.whatHolder   (Abstract Method)
| | KaoRou.toString   (Public Method)
| ch02.Holder   (Class)
| | Holder.Holder   (Public Constructor)
| | Holder.isVeggie   (Method)
| | Holder.whatHolder   (Method)
| ch02.Shallot   (Class)
| | Shallot.Shallot   (Public Constructor)
| | Shallot.isVeggie   (Method)
| | Shallot.whatHolder   (Method)
| ch02.Shrimp   (Class)
| | Shrimp.Shrimp   (Public Constructor)
| | Shrimp.isVeggie   (Method)
| | Shrimp.whatHolder   (Method)
| ch02.Radish   (Class)
| | Radish.Radish   (Public Constructor)
| | Radish.isVeggie   (Method)
| | Radish.whatHolder   (Method)
| ch02.Pepper   (Class)
| | Pepper.Pepper   (Public Constructor)
| | Pepper.isVeggie   (Method)
| | Pepper.whatHolder   (Method)
| ch02.Zucchini   (Class)
| | Zucchini.Zucchini   (Public Constructor)
| | Zucchini.isVeggie   (Method)
| | Zucchini.whatHolder   (Method)

K:\IntellijHome\The-Little-Java\src\ch02\KaoRouChuan.java   (File)
| ch02.KaoRouChuan   (Public Abstract Class)
| ch02.Dagger   (Class)
| ch02.Sabre   (Class)
| ch02.Sword   (Class)
                                                                     Page 242
                            Declaration Tree Report
===============================================================================

K:\IntellijHome\The-Little-Java\src\ch02\KaoRouPlates.java   (File)
| ch02.KaoRouPlates   (Public Abstract Class)
| ch02.Gold   (Class)
| ch02.Silver   (Class)
| ch02.Brass   (Class)
| ch02.Copper   (Class)
| ch02.Wood   (Class)

K:\IntellijHome\The-Little-Java\src\ch02\Main.java   (File)
| ch02.Main   (Public Class)
| | Main.main   (Public Static Method)

K:\IntellijHome\The-Little-Java\src\ch02\NumD.java   (File)
| ch02.NumD   (Public Abstract Class)
| ch02.Zero   (Class)
| ch02.MoreThanOne   (Class)
| | MoreThanOne.MoreThanOne   (Public Constructor)

K:\IntellijHome\The-Little-Java\src\ch02\PointD.java   (File)
| ch02.PointD   (Public Abstract Class)
| | PointD.distanceTo0   (Abstract Method)
| | PointD.toString   (Public Method)
| ch02.CartesianPt   (Class)
| | CartesianPt.CartesianPt   (Public Constructor)
| | CartesianPt.distanceTo0   (Method)
| ch02.ManHattanPt   (Class)
| | ManHattanPt.ManHattanPt   (Public Constructor)
| | ManHattanPt.distanceTo0   (Method)
| | ManHattanPt.toString   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch02\PointDCloser.java   (File)
| ch02.PointDCloser   (Public Abstract Class)
| | PointDCloser.distanceTo0   (Abstract Method)
| ch02.CartesianPt1   (Class)
| | CartesianPt1.CartesianPt1   (Public Constructor)
| | CartesianPt1.distanceTo0   (Method)
| | CartesianPt1.closerTo0   (Method)
| ch02.ManHattanPt1   (Class)
| | ManHattanPt1.ManHattanPt1   (Public Constructor)
| | ManHattanPt1.distanceTo0   (Method)
| | ManHattanPt1.closerTo0   (Method)

K:\IntellijHome\The-Little-Java\src\ch02\PointDCloserSimplify.java   (File)
| ch02.PointDCloserSimplify   (Public Abstract Class)
| | PointDCloserSimplify.distanceTo0   (Abstract Method)
| | PointDCloserSimplify.closerTo0   (Method)
| ch02.CartesianPt2   (Class)
| | CartesianPt2.CartesianPt2   (Public Constructor)
| | CartesianPt2.distanceTo0   (Method)
| ch02.ManHattanPt2   (Class)
| | ManHattanPt2.ManHattanPt2   (Public Constructor)
| | ManHattanPt2.distanceTo0   (Method)
| | ManHattanPt2.closerTo0   (Method)

K:\IntellijHome\The-Little-Java\src\ch02\Test.java   (File)
                                                                     Page 243
                            Declaration Tree Report
===============================================================================
| ch02.Test   (Public Class)
| | Test.main   (Public Static Method)

K:\IntellijHome\The-Little-Java\src\ch02\TestTYangRouChuan.java   (File)
| ch02.TestTYangRouChuan   (Public Class)
| | TestTYangRouChuan.main   (Public Static Method)

K:\IntellijHome\The-Little-Java\src\ch02\YangRouChuan.java   (File)
| ch02.YangRouChuan   (Public Abstract Class)
| | YangRouChuan.onlyOnions   (Abstract Method)
| | YangRouChuan.isVegetarian   (Abstract Method)
| | YangRouChuan.YangRouChuan   (Public Constructor)
| | YangRouChuan.toString   (Public Method)
| ch02.Skewer   (Class)
| | Skewer.onlyOnions   (Method)
| | Skewer.isVegetarian   (Method)
| ch02.Onion   (Class)
| | Onion.Onion   (Public Constructor)
| | Onion.onlyOnions   (Method)
| | Onion.isVegetarian   (Method)
| | Onion.toString   (Public Method)
| ch02.Lamb   (Class)
| | Lamb.Lamb   (Public Constructor)
| | Lamb.onlyOnions   (Method)
| | Lamb.isVegetarian   (Method)
| ch02.Tomato   (Class)
| | Tomato.Tomato   (Public Constructor)
| | Tomato.onlyOnions   (Method)
| | Tomato.isVegetarian   (Method)
| | Tomato.toString   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch03\PizzaD.java   (File)
| ch03.PizzaD   (Public Abstract Class)
| | PizzaD.remA   (Abstract Method)
| | PizzaD.topAwC   (Abstract Method)
| | PizzaD.subAwC   (Abstract Method)
| ch03.Crust   (Class)
| | Crust.remA   (Method)
| | Crust.topAwC   (Method)
| | Crust.subAwC   (Method)
| ch03.Cheese   (Class)
| | Cheese.Cheese   (Public Constructor)
| | Cheese.remA   (Method)
| | Cheese.topAwC   (Method)
| | Cheese.subAwC   (Method)
| ch03.Olive   (Class)
| | Olive.Olive   (Public Constructor)
| | Olive.remA   (Method)
| | Olive.topAwC   (Method)
| | Olive.subAwC   (Method)
| ch03.Anchovy   (Class)
| | Anchovy.Anchovy   (Public Constructor)
| | Anchovy.remA   (Method)
| | Anchovy.topAwC   (Method)
| | Anchovy.subAwC   (Method)
                                                                     Page 244
                            Declaration Tree Report
===============================================================================
| ch03.Sausage   (Class)
| | Sausage.Sausage   (Public Constructor)
| | Sausage.remA   (Method)
| | Sausage.topAwC   (Method)
| | Sausage.subAwC   (Method)
| ch03.Spinach   (Class)
| | Spinach.Spinach   (Public Constructor)
| | Spinach.remA   (Method)
| | Spinach.topAwC   (Method)
| | Spinach.subAwC   (Method)

K:\IntellijHome\The-Little-Java\src\ch04\YangRouChuan.java   (File)
| ch04.OnlyOnionsV   (Class)
| | OnlyOnionsV.forSkewer   (Method)
| | OnlyOnionsV.forOnion   (Method)
| | OnlyOnionsV.forLamb   (Method)
| | OnlyOnionsV.forTomato   (Method)
| ch04.IsVegetarianV   (Class)
| | IsVegetarianV.forSkewer   (Method)
| | IsVegetarianV.forOnion   (Method)
| | IsVegetarianV.forLamb   (Method)
| | IsVegetarianV.forTomato   (Method)
| ch04.YangRouChuan   (Public Abstract Class)
| | YangRouChuan.onlyOnions   (Abstract Method)
| | YangRouChuan.isVegetarian   (Abstract Method)
| ch04.Skewer   (Class)
| | Skewer.onlyOnions   (Method)
| | Skewer.isVegetarian   (Method)
| ch04.Onion   (Class)
| | Onion.Onion   (Public Constructor)
| | Onion.onlyOnions   (Method)
| | Onion.isVegetarian   (Method)
| ch04.Lamb   (Class)
| | Lamb.Lamb   (Public Constructor)
| | Lamb.onlyOnions   (Method)
| | Lamb.isVegetarian   (Method)
| ch04.Tomato   (Class)
| | Tomato.Tomato   (Public Constructor)
| | Tomato.onlyOnions   (Method)
| | Tomato.isVegetarian   (Method)

K:\IntellijHome\The-Little-Java\src\ch051\PieD.java   (File)
| ch051.FishD   (Abstract Class)
| | FishD.equals   (Public Abstract Method)
| ch051.AnchovyFish   (Class)
| | AnchovyFish.equals   (Public Method)
| ch051.SalmonFish   (Class)
| | SalmonFish.equals   (Public Method)
| ch051.TunaFish   (Class)
| | TunaFish.equals   (Public Method)
| ch051.RemFishV   (Class)
| | RemFishV.forBot   (Method)
| | RemFishV.forTop   (Method)
| ch051.RemFishInt   (Class)
| | RemFishInt.forBot   (Method)
                                                                     Page 245
                            Declaration Tree Report
===============================================================================
| | RemFishInt.forTop   (Method)
| ch051.RemV   (Class)
| | RemV.forBot   (Method)
| | RemV.forTop   (Method)
| ch051.SubstFishV   (Class)
| | SubstFishV.forBot   (Method)
| | SubstFishV.forTop   (Method)
| ch051.SubstIntV   (Class)
| | SubstIntV.forBot   (Method)
| | SubstIntV.forTop   (Method)
| ch051.SubstV   (Class)
| | SubstV.forBot   (Method)
| | SubstV.forTop   (Method)
| ch051.PieD   (Public Abstract Class)
| | PieD.remA   (Abstract Method)
| | PieD.substFish   (Abstract Method)
| ch051.Bot   (Class)
| | Bot.remA   (Method)
| | Bot.substFish   (Method)
| ch051.Top   (Class)
| | Top.Top   (Public Constructor)
| | Top.remA   (Method)
| | Top.substFish   (Method)

K:\IntellijHome\The-Little-Java\src\ch05\NumD.java   (File)
| ch05.NumD   (Public Abstract Class)
| ch05.Zero   (Class)
| | Zero.equals   (Public Method)
| ch05.MoreThanOne   (Class)
| | MoreThanOne.MoreThanOne   (Public Constructor)
| | MoreThanOne.equals   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch05\PieD.java   (File)
| ch05.FishD   (Abstract Class)
| | FishD.equals   (Public Abstract Method)
| ch05.AnchovyFish   (Class)
| | AnchovyFish.equals   (Public Method)
| ch05.SalmonFish   (Class)
| | SalmonFish.equals   (Public Method)
| ch05.TunaFish   (Class)
| | TunaFish.equals   (Public Method)
| ch05.RemAV   (Class)
| | RemAV.forBot   (Method)
| | RemAV.forTop   (Method)
| ch05.RemFishV   (Class)
| | RemFishV.forBot   (Method)
| | RemFishV.forTop   (Method)
| ch05.PieD   (Public Abstract Class)
| | PieD.remA   (Abstract Method)
| | PieD.remFish   (Abstract Method)
| ch05.Bot   (Class)
| | Bot.remA   (Method)
| | Bot.remFish   (Method)
| ch05.Top   (Class)
| | Top.Top   (Public Constructor)
                                                                     Page 246
                            Declaration Tree Report
===============================================================================
| | Top.remA   (Method)
| | Top.remFish   (Method)

K:\IntellijHome\The-Little-Java\src\ch05\PieDGeneral.java   (File)
| ch05.RemFishV1   (Class)
| | RemFishV1.forBot   (Method)
| | RemFishV1.forTop   (Method)
| ch05.RemFishInt   (Class)
| | RemFishInt.forBot   (Method)
| | RemFishInt.forTop   (Method)
| ch05.RemV   (Class)
| | RemV.forBot   (Method)
| | RemV.forTop   (Method)
| ch05.PieDGeneral   (Public Abstract Class)
| | PieDGeneral.remA   (Abstract Method)
| ch05.Bot1   (Class)
| | Bot1.remA   (Method)
| ch05.Top1   (Class)
| | Top1.Top1   (Public Constructor)
| | Top1.remA   (Method)

K:\IntellijHome\The-Little-Java\src\ch061\PieD.java   (File)
| ch061.FishD   (Abstract Class)
| | FishD.equals   (Public Abstract Method)
| ch061.AnchovyFish   (Class)
| | AnchovyFish.equals   (Public Method)
| ch061.SalmonFish   (Class)
| | SalmonFish.equals   (Public Method)
| ch061.TunaFish   (Class)
| | TunaFish.equals   (Public Method)
| ch061.RemV   (Class)
| | RemV.RemV   (Public Constructor)
| | RemV.forBot   (Method)
| | RemV.forTop   (Method)
| ch061.SubstV   (Class)
| | SubstV.SubstV   (Public Constructor)
| | SubstV.forBot   (Method)
| | SubstV.forTop   (Method)
| ch061.PieD   (Public Abstract Class)
| | PieD.remA   (Abstract Method)
| | PieD.substFish   (Abstract Method)
| ch061.Bot   (Class)
| | Bot.Bot   (Public Constructor)
| | Bot.remA   (Method)
| | Bot.substFish   (Method)
| ch061.Top   (Class)
| | Top.Top   (Public Constructor)
| | Top.remA   (Method)
| | Top.substFish   (Method)

K:\IntellijHome\The-Little-Java\src\ch062\PieD.java   (File)
| ch062.PieVistor1   (Interface)
| | PieVistor1.forBot   (Abstract Method)
| | PieVistor1.forTop   (Abstract Method)
| ch062.RemV   (Class)
                                                                     Page 247
                            Declaration Tree Report
===============================================================================
| | RemV.RemV   (Public Constructor)
| | RemV.forBot   (Public Method)
| | RemV.forTop   (Public Method)
| ch062.SubstV   (Class)
| | SubstV.SubstV   (Public Constructor)
| | SubstV.forBot   (Public Method)
| | SubstV.forTop   (Public Method)
| ch062.LtSubstV   (Class)
| | LtSubstV.LtSubstV   (Public Constructor)
| | LtSubstV.forBot   (Public Method)
| | LtSubstV.forTop   (Public Method)
| ch062.PieD   (Public Abstract Class)
| | PieD.accept   (Abstract Method)
| ch062.Bot   (Class)
| | Bot.accept   (Method)
| ch062.Top   (Class)
| | Top.Top   (Public Constructor)
| | Top.accept   (Method)

K:\IntellijHome\The-Little-Java\src\ch06\PieD.java   (File)
| ch06.FishD   (Abstract Class)
| | FishD.equals   (Public Abstract Method)
| ch06.AnchovyFish   (Class)
| | AnchovyFish.equals   (Public Method)
| ch06.SalmonFish   (Class)
| | SalmonFish.equals   (Public Method)
| ch06.TunaFish   (Class)
| | TunaFish.equals   (Public Method)
| ch06.RemV   (Class)
| | RemV.forBot   (Method)
| | RemV.forTop   (Method)
| ch06.SubstV   (Class)
| | SubstV.forBot   (Method)
| | SubstV.forTop   (Method)
| ch06.PieD   (Public Abstract Class)
| | PieD.remA   (Abstract Method)
| | PieD.substFish   (Abstract Method)
| ch06.Bot   (Class)
| | Bot.remA   (Method)
| | Bot.substFish   (Method)
| ch06.Top   (Class)
| | Top.Top   (Public Constructor)
| | Top.remA   (Method)
| | Top.substFish   (Method)

K:\IntellijHome\The-Little-Java\src\ch071\FruitD.java   (File)
| ch071.FruitD   (Abstract Class)
| ch071.Peach   (Class)
| | Peach.equals   (Public Method)
| ch071.Apple   (Class)
| | Apple.equals   (Public Method)
| ch071.Pear   (Class)
| | Pear.equals   (Public Method)
| ch071.Lemon   (Class)
| | Lemon.equals   (Public Method)
                                                                     Page 248
                            Declaration Tree Report
===============================================================================
| ch071.Fig   (Class)
| | Fig.equals   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch071\TreeD.java   (File)
| ch071.TreeD   (Abstract Class)
| | TreeD.accept   (Abstract Method)
| ch071.Bud   (Class)
| | Bud.accept   (Method)
| ch071.Flat   (Class)
| | Flat.Flat   (Public Constructor)
| | Flat.accept   (Method)
| ch071.Split   (Class)
| | Split.Split   (Public Constructor)
| | Split.accept   (Method)
| ch071.TreeVisitorI   (Interface)
| | TreeVisitorI.forBud   (Abstract Method)
| | TreeVisitorI.forFlat   (Abstract Method)
| | TreeVisitorI.forSplit   (Abstract Method)
| ch071.IsFlatV   (Class)
| | IsFlatV.forBud   (Public Method)
| | IsFlatV.forFlat   (Public Method)
| | IsFlatV.forSplit   (Public Method)
| ch071.IsSplitV   (Class)
| | IsSplitV.forBud   (Public Method)
| | IsSplitV.forFlat   (Public Method)
| | IsSplitV.forSplit   (Public Method)
| ch071.HasFruitV   (Class)
| | HasFruitV.forBud   (Public Method)
| | HasFruitV.forFlat   (Public Method)
| | HasFruitV.forSplit   (Public Method)
| ch071.IHeightV   (Class)
| | IHeightV.forBud   (Public Method)
| | IHeightV.forFlat   (Public Method)
| | IHeightV.forSplit   (Public Method)
| ch071.IOccursV   (Class)
| | IOccursV.IOccursV   (Public Constructor)
| | IOccursV.forBud   (Public Method)
| | IOccursV.forFlat   (Public Method)
| | IOccursV.forSplit   (Public Method)
| ch071.TSubstsV   (Class)
| | TSubstsV.TSubstsV   (Public Constructor)
| | TSubstsV.forBud   (Public Method)
| | TSubstsV.forFlat   (Public Method)
| | TSubstsV.forSplit   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch07\FruitD.java   (File)
| ch07.FruitD   (Abstract Class)
| ch07.Peach   (Class)
| | Peach.equals   (Public Method)
| ch07.Apple   (Class)
| | Apple.equals   (Public Method)
| ch07.Pear   (Class)
| | Pear.equals   (Public Method)
| ch07.Lemon   (Class)
| | Lemon.equals   (Public Method)
                                                                     Page 249
                            Declaration Tree Report
===============================================================================
| ch07.Fig   (Class)
| | Fig.equals   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch07\TreeD.java   (File)
| ch07.TreeD   (Abstract Class)
| | TreeD.accept   (Abstract Method)
| | TreeD.accept   (Abstract Method)
| | TreeD.accept   (Abstract Method)
| ch07.Bud   (Class)
| | Bud.accept   (Method)
| | Bud.accept   (Method)
| | Bud.accept   (Method)
| ch07.Flat   (Class)
| | Flat.Flat   (Public Constructor)
| | Flat.accept   (Method)
| | Flat.accept   (Method)
| | Flat.accept   (Method)
| ch07.Split   (Class)
| | Split.Split   (Public Constructor)
| | Split.accept   (Method)
| | Split.accept   (Method)
| | Split.accept   (Method)
| ch07.BTreeVisitorI   (Interface)
| | BTreeVisitorI.forBud   (Abstract Method)
| | BTreeVisitorI.forFlat   (Abstract Method)
| | BTreeVisitorI.forSplit   (Abstract Method)
| ch07.BIsFlatV   (Class)
| | BIsFlatV.forBud   (Public Method)
| | BIsFlatV.forFlat   (Public Method)
| | BIsFlatV.forSplit   (Public Method)
| ch07.BIsSplitV   (Class)
| | BIsSplitV.forBud   (Public Method)
| | BIsSplitV.forFlat   (Public Method)
| | BIsSplitV.forSplit   (Public Method)
| ch07.ITreeVisitorI   (Interface)
| | ITreeVisitorI.forBud   (Abstract Method)
| | ITreeVisitorI.forFlat   (Abstract Method)
| | ITreeVisitorI.forSplit   (Abstract Method)
| ch07.BHasFruitV   (Class)
| | BHasFruitV.forBud   (Public Method)
| | BHasFruitV.forFlat   (Public Method)
| | BHasFruitV.forSplit   (Public Method)
| ch07.IHeightV   (Class)
| | IHeightV.forBud   (Public Method)
| | IHeightV.forFlat   (Public Method)
| | IHeightV.forSplit   (Public Method)
| ch07.IOccursV   (Class)
| | IOccursV.IOccursV   (Public Constructor)
| | IOccursV.forBud   (Public Method)
| | IOccursV.forFlat   (Public Method)
| | IOccursV.forSplit   (Public Method)
| ch07.TTreeVisitorI   (Interface)
| | TTreeVisitorI.forBud   (Abstract Method)
| | TTreeVisitorI.forFlat   (Abstract Method)
| | TTreeVisitorI.forSplit   (Abstract Method)
                                                                     Page 250
                            Declaration Tree Report
===============================================================================
| ch07.TSubstsV   (Class)
| | TSubstsV.TSubstsV   (Public Constructor)
| | TSubstsV.forBud   (Public Method)
| | TSubstsV.forFlat   (Public Method)
| | TSubstsV.forSplit   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch0801That\PieDUpdate.java   (File)
| ch0801That.PieDUpdate   (Public Abstract Class)
| | PieDUpdate.accept   (Abstract Method)
| ch0801That.Bot   (Class)
| | Bot.accept   (Method)
| | Bot.toString   (Public Method)
| ch0801That.Top   (Class)
| | Top.Top   (Public Constructor)
| | Top.accept   (Method)
| | Top.toString   (Public Method)
| ch0801That.PieVistor1   (Interface)
| | PieVistor1.forBot   (Abstract Method)
| | PieVistor1.forTop   (Abstract Method)
| ch0801That.RemV   (Class)
| | RemV.RemV   (Public Constructor)
| | RemV.forBot   (Public Method)
| | RemV.forTop   (Public Method)
| ch0801That.SubstV   (Class)
| | SubstV.SubstV   (Public Constructor)
| | SubstV.forBot   (Public Method)
| | SubstV.forTop   (Public Method)
| ch0801That.LtSubstV   (Class)
| | LtSubstV.LtSubstV   (Public Constructor)
| | LtSubstV.forBot   (Public Method)
| | LtSubstV.forTop   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch0801That\TestThat.java   (File)
| ch0801That.TestThat   (Public Class)
| | TestThat.main   (Public Static Method)

K:\IntellijHome\The-Little-Java\src\ch081\ExprD.java   (File)
| ch081.ExprVisitorI   (Interface)
| | ExprVisitorI.forPlus   (Abstract Method)
| | ExprVisitorI.forDiff   (Abstract Method)
| | ExprVisitorI.forProd   (Abstract Method)
| | ExprVisitorI.forConst   (Abstract Method)
| ch081.EvalV   (Abstract Class)
| | EvalV.forPlus   (Public Method)
| | EvalV.forDiff   (Public Method)
| | EvalV.forProd   (Public Method)
| | EvalV.forConst   (Public Method)
| | EvalV.plus   (Abstract Method)
| | EvalV.diff   (Abstract Method)
| | EvalV.prod   (Abstract Method)
| ch081.IntEvalV   (Class)
| | IntEvalV.plus   (Method)
| | IntEvalV.diff   (Method)
| | IntEvalV.prod   (Method)
| ch081.ExprD   (Abstract Class)
                                                                     Page 251
                            Declaration Tree Report
===============================================================================
| | ExprD.accpet   (Abstract Method)
| ch081.Plus   (Class)
| | Plus.Plus   (Public Constructor)
| | Plus.accpet   (Method)
| ch081.Diff   (Class)
| | Diff.Diff   (Public Constructor)
| | Diff.accpet   (Method)
| ch081.Prod   (Class)
| | Prod.Prod   (Public Constructor)
| | Prod.accpet   (Method)
| ch081.Const   (Class)
| | Const.Const   (Public Constructor)
| | Const.accpet   (Method)

K:\IntellijHome\The-Little-Java\src\ch081\PieD.java   (File)
| ch081.PieVistor1   (Interface)
| | PieVistor1.forBot   (Abstract Method)
| | PieVistor1.forTop   (Abstract Method)
| ch081.RemV   (Class)
| | RemV.RemV   (Public Constructor)
| | RemV.forBot   (Public Method)
| | RemV.forTop   (Public Method)
| ch081.SubstV   (Class)
| | SubstV.SubstV   (Public Constructor)
| | SubstV.forBot   (Public Method)
| | SubstV.forTop   (Public Method)
| ch081.LtSubstV   (Class)
| | LtSubstV.LtSubstV   (Public Constructor)
| | LtSubstV.forBot   (Public Method)
| | LtSubstV.forTop   (Public Method)
| ch081.PieD   (Public Abstract Class)
| | PieD.accept   (Abstract Method)
| ch081.Bot   (Class)
| | Bot.accept   (Method)
| | Bot.toString   (Public Method)
| ch081.Top   (Class)
| | Top.Top   (Public Constructor)
| | Top.accept   (Method)
| | Top.toString   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch081\SetD.java   (File)
| ch081.SetD   (Abstract Class)
| | SetD.add   (Method)
| | SetD.mem   (Abstract Method)
| | SetD.plus   (Abstract Method)
| | SetD.diff   (Abstract Method)
| | SetD.prod   (Abstract Method)
| ch081.Empty   (Class)
| | Empty.mem   (Method)
| | Empty.plus   (Method)
| | Empty.diff   (Method)
| | Empty.prod   (Method)
| ch081.Add   (Class)
| | Add.Add   (Public Constructor)
| | Add.mem   (Method)
                                                                     Page 252
                            Declaration Tree Report
===============================================================================
| | Add.plus   (Method)
| | Add.diff   (Method)
| | Add.prod   (Method)
| ch081.SetEvalV   (Class)
| | SetEvalV.plus   (Method)
| | SetEvalV.diff   (Method)
| | SetEvalV.prod   (Method)

K:\IntellijHome\The-Little-Java\src\ch081\SubstD.java   (File)
| ch081.SubstD   (Abstract Class)
| | SubstD.SubstD   (Public Constructor)
| | SubstD.forBot   (Public Method)
| | SubstD.forTop   (Public Abstract Method)
| ch081.SubstV1   (Class)
| | SubstV1.SubstV1   (Public Constructor)
| | SubstV1.forTop   (Public Method)
| ch081.LtSubstV1   (Class)
| | LtSubstV1.LtSubstV1   (Public Constructor)
| | LtSubstV1.forTop   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch081\SubstVExt.java   (File)
| ch081.SubstVExt   (Abstract Class)
| | SubstVExt.SubstVExt   (Public Constructor)
| | SubstVExt.forBot   (Public Method)
| | SubstVExt.forTop   (Public Method)
| ch081.LtSubstV2   (Class)
| | LtSubstV2.LtSubstV2   (Public Constructor)
| | LtSubstV2.forTop   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch081\TestPieD.java   (File)
| ch081.TestPieD   (Public Class)
| | TestPieD.main   (Public Static Method)

K:\IntellijHome\The-Little-Java\src\ch08\ExprD.java   (File)
| ch08.ExprVisitorI   (Interface)
| | ExprVisitorI.forPlus   (Abstract Method)
| | ExprVisitorI.forDiff   (Abstract Method)
| | ExprVisitorI.forProd   (Abstract Method)
| | ExprVisitorI.forConst   (Abstract Method)
| ch08.IntEvalV   (Class)
| | IntEvalV.forPlus   (Public Method)
| | IntEvalV.forDiff   (Public Method)
| | IntEvalV.forProd   (Public Method)
| | IntEvalV.forConst   (Public Method)
| | IntEvalV.plus   (Method)
| | IntEvalV.diff   (Method)
| | IntEvalV.prod   (Method)
| ch08.ExprD   (Abstract Class)
| | ExprD.accpet   (Abstract Method)
| ch08.Plus   (Class)
| | Plus.Plus   (Public Constructor)
| | Plus.accpet   (Method)
| ch08.Diff   (Class)
| | Diff.Diff   (Public Constructor)
| | Diff.accpet   (Method)
                                                                     Page 253
                            Declaration Tree Report
===============================================================================
| ch08.Prod   (Class)
| | Prod.Prod   (Public Constructor)
| | Prod.accpet   (Method)
| ch08.Const   (Class)
| | Const.Const   (Public Constructor)
| | Const.accpet   (Method)

K:\IntellijHome\The-Little-Java\src\ch08\SetD.java   (File)
| ch08.SetD   (Abstract Class)
| | SetD.add   (Method)
| | SetD.mem   (Abstract Method)
| | SetD.plus   (Abstract Method)
| | SetD.diff   (Abstract Method)
| | SetD.prod   (Abstract Method)
| ch08.Empty   (Class)
| | Empty.mem   (Method)
| | Empty.plus   (Method)
| | Empty.diff   (Method)
| | Empty.prod   (Method)
| ch08.Add   (Class)
| | Add.Add   (Public Constructor)
| | Add.mem   (Method)
| | Add.plus   (Method)
| | Add.diff   (Method)
| | Add.prod   (Method)
| ch08.SetEvalV   (Class)
| | SetEvalV.plus   (Method)
| | SetEvalV.diff   (Method)
| | SetEvalV.prod   (Method)

K:\IntellijHome\The-Little-Java\src\ch09\PointDCloserSimplify.java   (File)
| ch09.PointDCloserSimplify   (Public Abstract Class)
| | PointDCloserSimplify.PointDCloserSimplify   (Public Constructor)
| | PointDCloserSimplify.distanceTo0   (Abstract Method)
| | PointDCloserSimplify.closerTo0   (Method)
| | PointDCloserSimplify.minus   (Method)
| ch09.CartesianPt2   (Class)
| | CartesianPt2.CartesianPt2   (Public Constructor)
| | CartesianPt2.distanceTo0   (Method)
| ch09.ManHattanPt2   (Class)
| | ManHattanPt2.ManHattanPt2   (Public Constructor)
| | ManHattanPt2.distanceTo0   (Method)
| | ManHattanPt2.closerTo0   (Method)

K:\IntellijHome\The-Little-Java\src\ch09\ShadowCartesian.java   (File)
| ch09.ShadowCartesian   (Class)
| | ShadowCartesian.ShadowCartesian   (Public Constructor)
| | ShadowCartesian.distanceTo0   (Method)

K:\IntellijHome\The-Little-Java\src\ch09\ShapeD.java   (File)
| ch09.ShapeD   (Abstract Class)
| | ShapeD.accept   (Abstract Method)
| ch09.ShapeVisitorI   (Interface)
| | ShapeVisitorI.forCircle   (Abstract Method)
| | ShapeVisitorI.forSquare   (Abstract Method)
                                                                     Page 254
                            Declaration Tree Report
===============================================================================
| | ShapeVisitorI.forTrans   (Abstract Method)
| ch09.Circle   (Class)
| | Circle.Circle   (Public Constructor)
| | Circle.accept   (Method)
| ch09.Square   (Class)
| | Square.Square   (Public Constructor)
| | Square.accept   (Method)
| ch09.Trans   (Class)
| | Trans.Trans   (Public Constructor)
| | Trans.accept   (Method)
| ch09.HasPtV   (Class)
| | HasPtV.HasPtV   (Public Constructor)
| | HasPtV.forCircle   (Public Method)
| | HasPtV.forSquare   (Public Method)
| | HasPtV.forTrans   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch09\Test.java   (File)
| ch09.Test   (Public Class)
| | Test.main   (Public Static Method)

K:\IntellijHome\The-Little-Java\src\ch09\Union.java   (File)
| ch09.Union   (Class)
| | Union.Union   (Public Constructor)
| | Union.accept   (Method)
| ch09.UnionVisitorI   (Interface)
| | UnionVisitorI.forUnion   (Abstract Method)
| ch09.UnionHasPtV   (Class)
| | UnionHasPtV.UnionHasPtV   (Public Constructor)
| | UnionHasPtV.forUnion   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch10\Mian.java   (File)
| ch10.Mian   (Public Class)
| | Mian.main   (Public Static Method)

K:\IntellijHome\The-Little-Java\src\ch10\PieD.java   (File)
| ch10.PieVistor1   (Interface)
| | PieVistor1.forBot   (Abstract Method)
| | PieVistor1.forTop   (Abstract Method)
| ch10.RemV   (Class)
| | RemV.RemV   (Public Constructor)
| | RemV.forBot   (Public Method)
| | RemV.forTop   (Public Method)
| ch10.SubstV   (Class)
| | SubstV.SubstV   (Public Constructor)
| | SubstV.forBot   (Public Method)
| | SubstV.forTop   (Public Method)
| ch10.LtSubstV   (Class)
| | LtSubstV.LtSubstV   (Public Constructor)
| | LtSubstV.forBot   (Public Method)
| | LtSubstV.forTop   (Public Method)
| ch10.PieD   (Public Abstract Class)
| | PieD.accept   (Abstract Method)
| ch10.Bot   (Class)
| | Bot.accept   (Method)
| ch10.Top   (Class)
                                                                     Page 255
                            Declaration Tree Report
===============================================================================
| | Top.Top   (Public Constructor)
| | Top.accept   (Method)
| ch10.FishD   (Abstract Class)
| | FishD.equals   (Public Abstract Method)
| ch10.AnchovyFish   (Class)
| | AnchovyFish.equals   (Public Method)
| | AnchovyFish.toString   (Public Method)
| ch10.SalmonFish   (Class)
| | SalmonFish.equals   (Public Method)
| ch10.TunaFish   (Class)
| | TunaFish.equals   (Public Method)

K:\IntellijHome\The-Little-Java\src\ch10\PiemanM.java   (File)
| ch10.PiemanI   (Interface)
| | PiemanI.addTop   (Abstract Method)
| | PiemanI.remTop   (Abstract Method)
| | PiemanI.substTop   (Abstract Method)
| | PiemanI.occTop   (Abstract Method)
| ch10.PiemanM   (Class)
| | PiemanM.PiemanM   (Public Constructor)
| | PiemanM.addTop   (Public Method)
| | PiemanM.remTop   (Public Method)
| | PiemanM.substTop   (Public Method)
| | PiemanM.occTop   (Public Method)
| | PiemanM.toString   (Public Method)
| ch10.OccursV   (Class)
| | OccursV.OccursV   (Public Constructor)
| | OccursV.forBot   (Public Method)
| | OccursV.forTop   (Public Method)

K:\IntellijHome\The-Little-Java\src\ReCall\Callback.java   (File)
| ReCall.Callback   (Public Interface)
| | Callback.accept   (Public Abstract Method)

K:\IntellijHome\The-Little-Java\src\ReCall\Stranger.java   (File)
| ReCall.Stranger   (Public Class)
| | Stranger.Stranger   (Public Constructor)
| | Stranger.askQuestion   (Public Method)
| | | askQuestion.(Anon_1)   (Anonymous Class)
| | | | (Anon_1).run   (Public Method)
| | Stranger.play   (Private Method)
| | Stranger.accept   (Public Method)

K:\IntellijHome\The-Little-Java\src\ReCall\Test.java   (File)
| ReCall.Test   (Public Class)
| | Test.main   (Public Static Method)

K:\IntellijHome\The-Little-Java\src\ReCall\Wang.java   (File)
| ReCall.Wang   (Public Class)
| | Wang.Wang   (Public Constructor)
| | Wang.askQuestion   (Public Method)
| | | askQuestion.(Anon_1)   (Anonymous Class)
| | | | (Anon_1).run   (Public Method)
| | Wang.play   (Private Method)
| | Wang.accept   (Public Method)
                                                                     Page 256
                            Declaration Tree Report
===============================================================================

K:\IntellijHome\The-Little-Java\src\ReCall\Ye.java   (File)
| ReCall.Ye   (Public Class)
| | Ye.executeMessage   (Public Method)

K:\IntellijHome\The-Little-Java\src\YeRestaurant\Cai\Apple.java   (File)
| Cai.Apple   (Public Class)
| | Apple.getFoodName   (Public Method)

K:\IntellijHome\The-Little-Java\src\YeRestaurant\Cai\Banana.java   (File)
| Cai.Banana   (Public Class)
| | Banana.getFoodName   (Public Method)

K:\IntellijHome\The-Little-Java\src\YeRestaurant\Cai\HongShaoRou.java   (File)
| Cai.HongShaoRou   (Public Class)
| | HongShaoRou.getFoodName   (Public Method)

K:\IntellijHome\The-Little-Java\src\YeRestaurant\Cai\QingJiaoRouSi.java   (File)
| Cai.QingJiaoRouSi   (Public Class)
| | QingJiaoRouSi.getFoodName   (Public Method)

K:\IntellijHome\The-Little-Java\src\YeRestaurant\Cai\SuanTaiChaoRou.java   (File)
| Cai.SuanTaiChaoRou   (Public Class)
| | SuanTaiChaoRou.getFoodName   (Public Method)

K:\IntellijHome\The-Little-Java\src\YeRestaurant\Cai\TangCuLiYu.java   (File)
| Cai.TangCuLiYu   (Public Class)
| | TangCuLiYu.getFoodName   (Public Method)

K:\IntellijHome\The-Little-Java\src\YeRestaurant\Food.java   (File)
| YeRestaurant.Food   (Public Interface)
| | Food.getFoodName   (Abstract Method)

K:\IntellijHome\The-Little-Java\src\YeRestaurant\Restaurant.java   (File)
| YeRestaurant.Restaurant   (Public Class)
| | Restaurant.Restaurant   (Public Constructor)
| | Restaurant.init   (Public Method)
| | Restaurant.showFoods   (Public Method)
| | Restaurant.main   (Public Static Method)

ReCall   (Package)
| ReCall.Callback   (Public Interface)
| | Callback.accept   (Public Abstract Method)
| ReCall.Test   (Public Class)
| | Test.main   (Public Static Method)
| ReCall.Ye   (Public Class)
| | Ye.executeMessage   (Public Method)
| ReCall.Stranger   (Public Class)
| | Stranger.Stranger   (Public Constructor)
| | Stranger.askQuestion   (Public Method)
| | | askQuestion.(Anon_1)   (Anonymous Class)
| | | | (Anon_1).run   (Public Method)
| | Stranger.play   (Private Method)
| | Stranger.accept   (Public Method)
| ReCall.Wang   (Public Class)
                                                                     Page 257
                            Declaration Tree Report
===============================================================================
| | Wang.Wang   (Public Constructor)
| | Wang.askQuestion   (Public Method)
| | | askQuestion.(Anon_1)   (Anonymous Class)
| | | | (Anon_1).run   (Public Method)
| | Wang.play   (Private Method)
| | Wang.accept   (Public Method)

YeRestaurant   (Package)
| YeRestaurant.Food   (Public Interface)
| | Food.getFoodName   (Abstract Method)
| YeRestaurant.Restaurant   (Public Class)
| | Restaurant.Restaurant   (Public Constructor)
| | Restaurant.init   (Public Method)
| | Restaurant.showFoods   (Public Method)
| | Restaurant.main   (Public Static Method)

YeRestaurant.Cai   (Package)
| Cai.Apple   (Public Class)
| | Apple.getFoodName   (Public Method)
| Cai.QingJiaoRouSi   (Public Class)
| | QingJiaoRouSi.getFoodName   (Public Method)
| Cai.TangCuLiYu   (Public Class)
| | TangCuLiYu.getFoodName   (Public Method)
| Cai.SuanTaiChaoRou   (Public Class)
| | SuanTaiChaoRou.getFoodName   (Public Method)
| Cai.Banana   (Public Class)
| | Banana.getFoodName   (Public Method)
| Cai.HongShaoRou   (Public Class)
| | HongShaoRou.getFoodName   (Public Method)
                                                                     Page 258
                         Simple Invocation Tree Report
===============================================================================

ch01.ManHattanPt.toString
| java.lang.Object.getClass
| java.lang.Class.getName

ch01.Test.main(String[] args)
| ch01.ManHattanPt.ManHattanPt(int _x,int _y)
| java.io.PrintStream.println(int x)

ch01.TestMain.main(String[] args)
| ch01.ManHattanPt.ManHattanPt(int _x,int _y)
| java.io.PrintStream.println(Object x)

ch02.CartesianPt.distanceTo0
| java.lang.Math.sqrt(double a)

ch02.CartesianPt1.closerTo0(CartesianPt1 p1)
| ch02.CartesianPt1.distanceTo0

ch02.CartesianPt1.distanceTo0
| java.lang.Math.sqrt(double a)

ch02.CartesianPt2.distanceTo0
| java.lang.Math.sqrt(double a)

ch02.KaoRou.toString
| java.lang.Object.getClass
| java.lang.Class.toString

ch02.Main.main(String[] args)
| ch02.ManHattanPt.ManHattanPt(int _x,int _y)
| ch02.CartesianPt.CartesianPt(int _x,int _y)
| java.io.PrintStream.println(Object x)
| ch02.Onion.Onion(YangRouChuan _s)
| ch02.Tomato.Tomato(YangRouChuan _y)
| ch02.PointD.distanceTo0  (Virtual)
| ch02.CartesianPt.distanceTo0  (Virtual)
| ch02.ManHattanPt.distanceTo0  (Virtual)
| java.io.PrintStream.println(int x)

ch02.ManHattanPt.toString
| java.lang.Object.getClass
| java.lang.Class.getName

ch02.ManHattanPt1.closerTo0(ManHattanPt1 p1)
| ch02.ManHattanPt1.distanceTo0

ch02.ManHattanPt2.closerTo0(CartesianPt p1)
| ch02.ManHattanPt2.distanceTo0
| ch02.CartesianPt.distanceTo0

ch02.Onion.isVegetarian
| ch02.YangRouChuan.isVegetarian  (Virtual)
| ch02.Lamb.isVegetarian  (Virtual)
| ch02.Onion.isVegetarian  (Virtual)
                                                                     Page 259
                         Simple Invocation Tree Report
===============================================================================
| ch02.Skewer.isVegetarian  (Virtual)
| ch02.Tomato.isVegetarian  (Virtual)

ch02.Onion.onlyOnions
| ch02.YangRouChuan.onlyOnions  (Virtual)
| ch02.Lamb.onlyOnions  (Virtual)
| ch02.Onion.onlyOnions  (Virtual)
| ch02.Skewer.onlyOnions  (Virtual)
| ch02.Tomato.onlyOnions  (Virtual)

ch02.Onion.toString
| java.lang.Object.getClass
| java.lang.Class.getName

ch02.Pepper.isVeggie
| ch02.KaoRou.isVeggie  (Virtual)
| ch02.Holder.isVeggie  (Virtual)
| ch02.Pepper.isVeggie  (Virtual)
| ch02.Radish.isVeggie  (Virtual)
| ch02.Shallot.isVeggie  (Virtual)
| ch02.Shrimp.isVeggie  (Virtual)
| ch02.Zucchini.isVeggie  (Virtual)

ch02.Pepper.whatHolder
| ch02.KaoRou.whatHolder  (Virtual)
| ch02.Holder.whatHolder  (Virtual)
| ch02.Pepper.whatHolder  (Virtual)
| ch02.Radish.whatHolder  (Virtual)
| ch02.Shallot.whatHolder  (Virtual)
| ch02.Shrimp.whatHolder  (Virtual)
| ch02.Zucchini.whatHolder  (Virtual)

ch02.PointD.toString
| java.lang.Object.getClass
| java.lang.Class.getName

ch02.PointDCloserSimplify.closerTo0(CartesianPt2 p1)
| ch02.PointDCloserSimplify.distanceTo0  (Virtual)
| ch02.CartesianPt2.distanceTo0  (Virtual)
| ch02.ManHattanPt2.distanceTo0  (Virtual)
| ch02.CartesianPt2.distanceTo0

ch02.Radish.isVeggie
| ch02.KaoRou.isVeggie  (Virtual)
| ch02.Holder.isVeggie  (Virtual)
| ch02.Pepper.isVeggie  (Virtual)
| ch02.Radish.isVeggie  (Virtual)
| ch02.Shallot.isVeggie  (Virtual)
| ch02.Shrimp.isVeggie  (Virtual)
| ch02.Zucchini.isVeggie  (Virtual)

ch02.Radish.whatHolder
| ch02.KaoRou.whatHolder  (Virtual)
| ch02.Holder.whatHolder  (Virtual)
| ch02.Pepper.whatHolder  (Virtual)
                                                                     Page 260
                         Simple Invocation Tree Report
===============================================================================
| ch02.Radish.whatHolder  (Virtual)
| ch02.Shallot.whatHolder  (Virtual)
| ch02.Shrimp.whatHolder  (Virtual)
| ch02.Zucchini.whatHolder  (Virtual)

ch02.Shallot.isVeggie
| ch02.KaoRou.isVeggie  (Virtual)
| ch02.Holder.isVeggie  (Virtual)
| ch02.Pepper.isVeggie  (Virtual)
| ch02.Radish.isVeggie  (Virtual)
| ch02.Shallot.isVeggie  (Virtual)
| ch02.Shrimp.isVeggie  (Virtual)
| ch02.Zucchini.isVeggie  (Virtual)

ch02.Shallot.whatHolder
| ch02.KaoRou.whatHolder  (Virtual)
| ch02.Holder.whatHolder  (Virtual)
| ch02.Pepper.whatHolder  (Virtual)
| ch02.Radish.whatHolder  (Virtual)
| ch02.Shallot.whatHolder  (Virtual)
| ch02.Shrimp.whatHolder  (Virtual)
| ch02.Zucchini.whatHolder  (Virtual)

ch02.Shrimp.whatHolder
| ch02.KaoRou.whatHolder  (Virtual)
| ch02.Holder.whatHolder  (Virtual)
| ch02.Pepper.whatHolder  (Virtual)
| ch02.Radish.whatHolder  (Virtual)
| ch02.Shallot.whatHolder  (Virtual)
| ch02.Shrimp.whatHolder  (Virtual)
| ch02.Zucchini.whatHolder  (Virtual)

ch02.Test.main(String[] args)
| ch02.ManHattanPt.ManHattanPt(int _x,int _y)
| ch02.ManHattanPt.distanceTo0
| java.io.PrintStream.println(int x)
| ch02.ManHattanPt1.ManHattanPt1(int _x,int _y)
| ch02.ManHattanPt1.closerTo0(ManHattanPt1 p1)
| java.io.PrintStream.println(boolean x)

ch02.TestTYangRouChuan.main(String[] args)
| ch02.Onion.Onion(YangRouChuan _s)
| java.io.PrintStream.println(Object x)
| ch02.Onion.onlyOnions
| java.io.PrintStream.println(boolean x)
| ch02.Lamb.Lamb(YangRouChuan _y)
| ch02.Tomato.Tomato(YangRouChuan _y)
| ch02.Onion.isVegetarian
| ch02.Tomato.isVegetarian
| ch02.Tomato.toString
| java.io.PrintStream.println(String x)

ch02.Tomato.isVegetarian
| ch02.YangRouChuan.isVegetarian  (Virtual)
| ch02.Lamb.isVegetarian  (Virtual)
                                                                     Page 261
                         Simple Invocation Tree Report
===============================================================================
| ch02.Onion.isVegetarian  (Virtual)
| ch02.Skewer.isVegetarian  (Virtual)
| ch02.Tomato.isVegetarian  (Virtual)

ch02.Tomato.toString
| java.lang.Object.getClass
| java.lang.Class.getName

ch02.YangRouChuan.toString
| java.lang.Object.getClass
| java.lang.Class.getName

ch02.YangRouChuan.YangRouChuan
| java.lang.Object.getClass
| java.lang.Class.getName
| java.io.PrintStream.print(String s)

ch02.Zucchini.isVeggie
| ch02.KaoRou.isVeggie  (Virtual)
| ch02.Holder.isVeggie  (Virtual)
| ch02.Pepper.isVeggie  (Virtual)
| ch02.Radish.isVeggie  (Virtual)
| ch02.Shallot.isVeggie  (Virtual)
| ch02.Shrimp.isVeggie  (Virtual)
| ch02.Zucchini.isVeggie  (Virtual)

ch02.Zucchini.whatHolder
| ch02.KaoRou.whatHolder  (Virtual)
| ch02.Holder.whatHolder  (Virtual)
| ch02.Pepper.whatHolder  (Virtual)
| ch02.Radish.whatHolder  (Virtual)
| ch02.Shallot.whatHolder  (Virtual)
| ch02.Shrimp.whatHolder  (Virtual)
| ch02.Zucchini.whatHolder  (Virtual)

ch03.Anchovy.remA
| ch03.PizzaD.remA  (Virtual)
| ch03.Anchovy.remA  (Virtual)
| ch03.Cheese.remA  (Virtual)
| ch03.Crust.remA  (Virtual)
| ch03.Olive.remA  (Virtual)
| ch03.Sausage.remA  (Virtual)
| ch03.Spinach.remA  (Virtual)

ch03.Anchovy.subAwC
| ch03.PizzaD.subAwC  (Virtual)
| ch03.Anchovy.subAwC  (Virtual)
| ch03.Cheese.subAwC  (Virtual)
| ch03.Crust.subAwC  (Virtual)
| ch03.Olive.subAwC  (Virtual)
| ch03.Sausage.subAwC  (Virtual)
| ch03.Spinach.subAwC  (Virtual)
| ch03.Cheese.Cheese(PizzaD _p)

ch03.Anchovy.topAwC
                                                                     Page 262
                         Simple Invocation Tree Report
===============================================================================
| ch03.PizzaD.topAwC  (Virtual)
| ch03.Anchovy.topAwC  (Virtual)
| ch03.Cheese.topAwC  (Virtual)
| ch03.Crust.topAwC  (Virtual)
| ch03.Olive.topAwC  (Virtual)
| ch03.Sausage.topAwC  (Virtual)
| ch03.Spinach.topAwC  (Virtual)
| ch03.Anchovy.Anchovy(PizzaD _p)
| ch03.Cheese.Cheese(PizzaD _p)

ch03.Cheese.remA
| ch03.PizzaD.remA  (Virtual)
| ch03.Anchovy.remA  (Virtual)
| ch03.Cheese.remA  (Virtual)
| ch03.Crust.remA  (Virtual)
| ch03.Olive.remA  (Virtual)
| ch03.Sausage.remA  (Virtual)
| ch03.Spinach.remA  (Virtual)
| ch03.Cheese.Cheese(PizzaD _p)

ch03.Cheese.subAwC
| ch03.PizzaD.subAwC  (Virtual)
| ch03.Anchovy.subAwC  (Virtual)
| ch03.Cheese.subAwC  (Virtual)
| ch03.Crust.subAwC  (Virtual)
| ch03.Olive.subAwC  (Virtual)
| ch03.Sausage.subAwC  (Virtual)
| ch03.Spinach.subAwC  (Virtual)
| ch03.Cheese.Cheese(PizzaD _p)

ch03.Cheese.topAwC
| ch03.PizzaD.topAwC  (Virtual)
| ch03.Anchovy.topAwC  (Virtual)
| ch03.Cheese.topAwC  (Virtual)
| ch03.Crust.topAwC  (Virtual)
| ch03.Olive.topAwC  (Virtual)
| ch03.Sausage.topAwC  (Virtual)
| ch03.Spinach.topAwC  (Virtual)
| ch03.Cheese.Cheese(PizzaD _p)

ch03.Olive.remA
| ch03.PizzaD.remA  (Virtual)
| ch03.Anchovy.remA  (Virtual)
| ch03.Cheese.remA  (Virtual)
| ch03.Crust.remA  (Virtual)
| ch03.Olive.remA  (Virtual)
| ch03.Sausage.remA  (Virtual)
| ch03.Spinach.remA  (Virtual)
| ch03.Olive.Olive(PizzaD _p)

ch03.Olive.subAwC
| ch03.PizzaD.subAwC  (Virtual)
| ch03.Anchovy.subAwC  (Virtual)
| ch03.Cheese.subAwC  (Virtual)
| ch03.Crust.subAwC  (Virtual)
                                                                     Page 263
                         Simple Invocation Tree Report
===============================================================================
| ch03.Olive.subAwC  (Virtual)
| ch03.Sausage.subAwC  (Virtual)
| ch03.Spinach.subAwC  (Virtual)
| ch03.Olive.Olive(PizzaD _p)

ch03.Olive.topAwC
| ch03.PizzaD.topAwC  (Virtual)
| ch03.Anchovy.topAwC  (Virtual)
| ch03.Cheese.topAwC  (Virtual)
| ch03.Crust.topAwC  (Virtual)
| ch03.Olive.topAwC  (Virtual)
| ch03.Sausage.topAwC  (Virtual)
| ch03.Spinach.topAwC  (Virtual)
| ch03.Olive.Olive(PizzaD _p)

ch03.Sausage.remA
| ch03.PizzaD.remA  (Virtual)
| ch03.Anchovy.remA  (Virtual)
| ch03.Cheese.remA  (Virtual)
| ch03.Crust.remA  (Virtual)
| ch03.Olive.remA  (Virtual)
| ch03.Sausage.remA  (Virtual)
| ch03.Spinach.remA  (Virtual)
| ch03.Sausage.Sausage(PizzaD _p)

ch03.Sausage.subAwC
| ch03.PizzaD.subAwC  (Virtual)
| ch03.Anchovy.subAwC  (Virtual)
| ch03.Cheese.subAwC  (Virtual)
| ch03.Crust.subAwC  (Virtual)
| ch03.Olive.subAwC  (Virtual)
| ch03.Sausage.subAwC  (Virtual)
| ch03.Spinach.subAwC  (Virtual)
| ch03.Sausage.Sausage(PizzaD _p)

ch03.Sausage.topAwC
| ch03.PizzaD.topAwC  (Virtual)
| ch03.Anchovy.topAwC  (Virtual)
| ch03.Cheese.topAwC  (Virtual)
| ch03.Crust.topAwC  (Virtual)
| ch03.Olive.topAwC  (Virtual)
| ch03.Sausage.topAwC  (Virtual)
| ch03.Spinach.topAwC  (Virtual)
| ch03.Sausage.Sausage(PizzaD _p)

ch03.Spinach.remA
| ch03.PizzaD.remA  (Virtual)
| ch03.Anchovy.remA  (Virtual)
| ch03.Cheese.remA  (Virtual)
| ch03.Crust.remA  (Virtual)
| ch03.Olive.remA  (Virtual)
| ch03.Sausage.remA  (Virtual)
| ch03.Spinach.remA  (Virtual)
| ch03.Spinach.Spinach(PizzaD _p)

ch03.Spinach.subAwC
                                                                     Page 264
                         Simple Invocation Tree Report
===============================================================================
| ch03.PizzaD.subAwC  (Virtual)
| ch03.Anchovy.subAwC  (Virtual)
| ch03.Cheese.subAwC  (Virtual)
| ch03.Crust.subAwC  (Virtual)
| ch03.Olive.subAwC  (Virtual)
| ch03.Sausage.subAwC  (Virtual)
| ch03.Spinach.subAwC  (Virtual)
| ch03.Spinach.Spinach(PizzaD _p)

ch03.Spinach.topAwC
| ch03.PizzaD.topAwC  (Virtual)
| ch03.Anchovy.topAwC  (Virtual)
| ch03.Cheese.topAwC  (Virtual)
| ch03.Crust.topAwC  (Virtual)
| ch03.Olive.topAwC  (Virtual)
| ch03.Sausage.topAwC  (Virtual)
| ch03.Spinach.topAwC  (Virtual)
| ch03.Spinach.Spinach(PizzaD _p)

ch04.IsVegetarianV.forOnion(YangRouChuan y)
| ch04.YangRouChuan.isVegetarian  (Virtual)
| ch04.Lamb.isVegetarian  (Virtual)
| ch04.Onion.isVegetarian  (Virtual)
| ch04.Skewer.isVegetarian  (Virtual)
| ch04.Tomato.isVegetarian  (Virtual)

ch04.IsVegetarianV.forTomato(YangRouChuan y)
| ch04.YangRouChuan.isVegetarian  (Virtual)
| ch04.Lamb.isVegetarian  (Virtual)
| ch04.Onion.isVegetarian  (Virtual)
| ch04.Skewer.isVegetarian  (Virtual)
| ch04.Tomato.isVegetarian  (Virtual)

ch04.Lamb.isVegetarian
| ch04.IsVegetarianV.forLamb(YangRouChuan y)

ch04.Lamb.onlyOnions
| ch04.OnlyOnionsV.forLamb(YangRouChuan y)

ch04.Onion.isVegetarian
| ch04.IsVegetarianV.forOnion(YangRouChuan y)

ch04.Onion.onlyOnions
| ch04.OnlyOnionsV.forOnion(YangRouChuan y)

ch04.OnlyOnionsV.forOnion(YangRouChuan y)
| ch04.YangRouChuan.onlyOnions  (Virtual)
| ch04.Lamb.onlyOnions  (Virtual)
| ch04.Onion.onlyOnions  (Virtual)
| ch04.Skewer.onlyOnions  (Virtual)
| ch04.Tomato.onlyOnions  (Virtual)

ch04.Skewer.isVegetarian
| ch04.IsVegetarianV.forSkewer

ch04.Skewer.onlyOnions
                                                                     Page 265
                         Simple Invocation Tree Report
===============================================================================
| ch04.OnlyOnionsV.forSkewer

ch04.Tomato.isVegetarian
| ch04.IsVegetarianV.forTomato(YangRouChuan y)

ch04.Tomato.onlyOnions
| ch04.OnlyOnionsV.forTomato(YangRouChuan y)

ch05.Bot1.remA(Object o)
| ch05.RemV.forBot(Object f)

ch05.MoreThanOne.equals(Object o)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
                                                                     Page 266
                         Simple Invocation Tree Report
===============================================================================
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
                                                                     Page 267
                         Simple Invocation Tree Report
===============================================================================
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)

ch05.RemAV.forTop(Object t,PieD r)
| ch05.AnchovyFish.equals(Object o)
| ch05.PieD.remA  (Virtual)
| ch05.Bot.remA  (Virtual)
| ch05.Top.remA  (Virtual)
| ch05.Top.Top(Object t,PieD r)

ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
| java.lang.Integer.equals(Object obj)
| ch05.PieDGeneral.remA(Object o)  (Virtual)
| ch05.Bot1.remA(Object o)  (Virtual)
| ch05.Top1.remA(Object f)  (Virtual)
| ch05.Top1.Top1(Object t,PieDGeneral r)

ch05.RemFishV.forTop(Object t,PieD r,FishD f)
| ch05.FishD.equals(Object o)  (Virtual)
| ch05.AnchovyFish.equals(Object o)  (Virtual)
| ch05.SalmonFish.equals(Object o)  (Virtual)
| ch05.TunaFish.equals(Object o)  (Virtual)
| ch05.PieD.remFish(FishD f)  (Virtual)
| ch05.Bot.remFish(FishD f)  (Virtual)
| ch05.Top.remFish(FishD f)  (Virtual)
| ch05.Top.Top(Object t,PieD r)
                                                                     Page 268
                         Simple Invocation Tree Report
===============================================================================

ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
| ch05.FishD.equals(Object o)  (Virtual)
| ch05.AnchovyFish.equals(Object o)  (Virtual)
| ch05.SalmonFish.equals(Object o)  (Virtual)
| ch05.TunaFish.equals(Object o)  (Virtual)
| ch05.PieDGeneral.remA(Object o)  (Virtual)
| ch05.Bot1.remA(Object o)  (Virtual)
| ch05.Top1.remA(Object f)  (Virtual)
| ch05.Top1.Top1(Object t,PieDGeneral r)

ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
                                                                     Page 269
                         Simple Invocation Tree Report
===============================================================================
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
                                                                     Page 270
                         Simple Invocation Tree Report
===============================================================================
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch05.PieDGeneral.remA(Object o)  (Virtual)
| ch05.Bot1.remA(Object o)  (Virtual)
| ch05.Top1.remA(Object f)  (Virtual)
| ch05.Top1.Top1(Object t,PieDGeneral r)

ch05.Top.remA
| ch05.RemAV.forTop(Object t,PieD r)

ch05.Top.remFish(FishD f)
| ch05.RemFishV.forTop(Object t,PieD r,FishD f)

ch05.Top1.remA(Object f)
| ch05.RemV.forTop(Object t,PieDGeneral r,Object f)

ch051.Bot.remA(Object o)
| ch051.RemV.forBot(Object f)

ch051.Bot.substFish(Object n,Object o)
| ch051.SubstV.forBot(Object n,Object o)

ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
| java.lang.Integer.equals(Object obj)
| ch051.PieD.remA(Object o)  (Virtual)
| ch051.Bot.remA(Object o)  (Virtual)
                                                                     Page 271
                         Simple Invocation Tree Report
===============================================================================
| ch051.Top.remA(Object f)  (Virtual)
| ch051.Top.Top(Object t,PieD r)

ch051.RemFishV.forTop(Object t,PieD r,FishD f)
| ch051.FishD.equals(Object o)  (Virtual)
| ch051.AnchovyFish.equals(Object o)  (Virtual)
| ch051.SalmonFish.equals(Object o)  (Virtual)
| ch051.TunaFish.equals(Object o)  (Virtual)
| ch051.PieD.remA(Object o)  (Virtual)
| ch051.Bot.remA(Object o)  (Virtual)
| ch051.Top.remA(Object f)  (Virtual)
| ch051.Top.Top(Object t,PieD r)

ch051.RemV.forTop(Object t,PieD r,Object f)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
                                                                     Page 272
                         Simple Invocation Tree Report
===============================================================================
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
                                                                     Page 273
                         Simple Invocation Tree Report
===============================================================================
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch051.PieD.remA(Object o)  (Virtual)
| ch051.Bot.remA(Object o)  (Virtual)
| ch051.Top.remA(Object f)  (Virtual)
| ch051.Top.Top(Object t,PieD r)

ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
| ch051.FishD.equals(Object o)  (Virtual)
| ch051.AnchovyFish.equals(Object o)  (Virtual)
| ch051.SalmonFish.equals(Object o)  (Virtual)
| ch051.TunaFish.equals(Object o)  (Virtual)
| ch051.PieD.substFish(Object n,Object o)  (Virtual)
| ch051.Bot.substFish(Object n,Object o)  (Virtual)
| ch051.Top.substFish(Object n,Object o)  (Virtual)
| ch051.Top.Top(Object t,PieD r)

ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
| java.lang.Integer.equals(Object obj)
| ch051.PieD.substFish(Object n,Object o)  (Virtual)
| ch051.Bot.substFish(Object n,Object o)  (Virtual)
| ch051.Top.substFish(Object n,Object o)  (Virtual)
| ch051.Top.Top(Object t,PieD r)

ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
                                                                     Page 274
                         Simple Invocation Tree Report
===============================================================================
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
                                                                     Page 275
                         Simple Invocation Tree Report
===============================================================================
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
                                                                     Page 276
                         Simple Invocation Tree Report
===============================================================================
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch051.PieD.substFish(Object n,Object o)  (Virtual)
| ch051.Bot.substFish(Object n,Object o)  (Virtual)
| ch051.Top.substFish(Object n,Object o)  (Virtual)
| ch051.Top.Top(Object t,PieD r)

ch051.Top.remA(Object f)
| ch051.RemV.forTop(Object t,PieD r,Object f)

ch051.Top.substFish(Object n,Object o)
| ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)

ch06.Bot.remA(RemV remFn,Object o)
| ch06.RemV.forBot(Object f)

ch06.Bot.substFish(SubstV subFn,Object n,Object o)
| ch06.SubstV.forBot(Object n,Object o)

ch06.RemV.forTop(Object t,PieD r,Object f)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
                                                                     Page 277
                         Simple Invocation Tree Report
===============================================================================
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
                                                                     Page 278
                         Simple Invocation Tree Report
===============================================================================
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
                                                                     Page 279
                         Simple Invocation Tree Report
===============================================================================
| java.time.Clock.equals(Object obj)  (Virtual)
| ch06.PieD.remA(RemV remFn,Object o)  (Virtual)
| ch06.Bot.remA(RemV remFn,Object o)  (Virtual)
| ch06.Top.remA(RemV remFn,Object f)  (Virtual)
| ch06.Top.Top(Object t,PieD r)

ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
                                                                     Page 280
                         Simple Invocation Tree Report
===============================================================================
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
                                                                     Page 281
                         Simple Invocation Tree Report
===============================================================================
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch06.PieD.substFish(SubstV subFn,Object n,Object o)  (Virtual)
| ch06.Bot.substFish(SubstV subFn,Object n,Object o)  (Virtual)
| ch06.Top.substFish(SubstV subFn,Object n,Object o)  (Virtual)
| ch06.Top.Top(Object t,PieD r)

ch06.Top.remA(RemV remFn,Object f)
| ch06.RemV.forTop(Object t,PieD r,Object f)

ch06.Top.substFish(SubstV subFn,Object n,Object o)
| ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)

ch061.Bot.remA(RemV remFn)
| ch061.RemV.forBot(Object t,PieD r)

ch061.Bot.substFish(SubstV subFn)
| ch061.SubstV.forBot(Object t,PieD r)

ch061.RemV.forBot(Object t,PieD r)
| ch061.Bot.Bot(Object _t,PieD _r)

ch061.RemV.forTop(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
                                                                     Page 282
                         Simple Invocation Tree Report
===============================================================================
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
                                                                     Page 283
                         Simple Invocation Tree Report
===============================================================================
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
                                                                     Page 284
                         Simple Invocation Tree Report
===============================================================================
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch061.PieD.remA(RemV remFn)  (Virtual)
| ch061.Bot.remA(RemV remFn)  (Virtual)
| ch061.Top.remA(RemV remFn)  (Virtual)
| ch061.Top.Top(Object t,PieD r)

ch061.SubstV.forBot(Object t,PieD r)
| ch061.Bot.Bot(Object _t,PieD _r)

ch061.SubstV.forTop(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
                                                                     Page 285
                         Simple Invocation Tree Report
===============================================================================
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
                                                                     Page 286
                         Simple Invocation Tree Report
===============================================================================
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch061.PieD.substFish(SubstV subFn)  (Virtual)
| ch061.Bot.substFish(SubstV subFn)  (Virtual)
| ch061.Top.substFish(SubstV subFn)  (Virtual)
| ch061.Top.Top(Object t,PieD r)

ch061.Top.remA(RemV remFn)
| ch061.RemV.forTop(Object t,PieD r)

ch061.Top.substFish(SubstV subFn)
| ch061.SubstV.forTop(Object t,PieD r)

ch062.Bot.accept(PieVistor1 ask)
| ch062.PieVistor1.forBot  (Virtual)
| ch062.LtSubstV.forBot  (Virtual)
| ch062.RemV.forBot  (Virtual)
| ch062.SubstV.forBot  (Virtual)
                                                                     Page 287
                         Simple Invocation Tree Report
===============================================================================

ch062.LtSubstV.forTop(Object t,PieD r)
| ch062.Top.Top(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
                                                                     Page 288
                         Simple Invocation Tree Report
===============================================================================
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
                                                                     Page 289
                         Simple Invocation Tree Report
===============================================================================
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
| ch062.PieD.accept(PieVistor1 ask)  (Virtual)
| ch062.Bot.accept(PieVistor1 ask)  (Virtual)
| ch062.Top.accept(PieVistor1 ask)  (Virtual)

ch062.RemV.forTop(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
                                                                     Page 290
                         Simple Invocation Tree Report
===============================================================================
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
                                                                     Page 291
                         Simple Invocation Tree Report
===============================================================================
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch062.PieD.accept(PieVistor1 ask)  (Virtual)
| ch062.Bot.accept(PieVistor1 ask)  (Virtual)
| ch062.Top.accept(PieVistor1 ask)  (Virtual)
| ch062.Top.Top(Object t,PieD r)

ch062.SubstV.forTop(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
                                                                     Page 292
                         Simple Invocation Tree Report
===============================================================================
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
                                                                     Page 293
                         Simple Invocation Tree Report
===============================================================================
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
                                                                     Page 294
                         Simple Invocation Tree Report
===============================================================================
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch062.PieD.accept(PieVistor1 ask)  (Virtual)
| ch062.Bot.accept(PieVistor1 ask)  (Virtual)
| ch062.Top.accept(PieVistor1 ask)  (Virtual)
| ch062.Top.Top(Object t,PieD r)

ch062.Top.accept(PieVistor1 ask)
| ch062.PieVistor1.forTop(Object t,PieD r)  (Virtual)
| ch062.LtSubstV.forTop(Object t,PieD r)  (Virtual)
| ch062.RemV.forTop(Object t,PieD r)  (Virtual)
| ch062.SubstV.forTop(Object t,PieD r)  (Virtual)

ch07.BHasFruitV.forSplit(TreeD l,TreeD t)
| ch07.TreeD.accept(BTreeVisitorI ask)  (Virtual)
| ch07.Bud.accept(BTreeVisitorI ask)  (Virtual)
| ch07.Flat.accept(BTreeVisitorI ask)  (Virtual)
| ch07.Split.accept(BTreeVisitorI ask)  (Virtual)

ch07.BIsFlatV.forFlat(FruitD f,TreeD t)
| ch07.TreeD.accept(BTreeVisitorI ask)  (Virtual)
| ch07.Bud.accept(BTreeVisitorI ask)  (Virtual)
| ch07.Flat.accept(BTreeVisitorI ask)  (Virtual)
| ch07.Split.accept(BTreeVisitorI ask)  (Virtual)

ch07.BIsSplitV.forSplit(TreeD l,TreeD t)
| ch07.TreeD.accept(BTreeVisitorI ask)  (Virtual)
| ch07.Bud.accept(BTreeVisitorI ask)  (Virtual)
| ch07.Flat.accept(BTreeVisitorI ask)  (Virtual)
| ch07.Split.accept(BTreeVisitorI ask)  (Virtual)

ch07.Bud.accept(BTreeVisitorI ask)
| ch07.BTreeVisitorI.forBud  (Virtual)
| ch07.BHasFruitV.forBud  (Virtual)
| ch07.BIsFlatV.forBud  (Virtual)
| ch07.BIsSplitV.forBud  (Virtual)

ch07.Bud.accept(ITreeVisitorI ask)
| ch07.ITreeVisitorI.forBud  (Virtual)
| ch07.IHeightV.forBud  (Virtual)
                                                                     Page 295
                         Simple Invocation Tree Report
===============================================================================
| ch07.IOccursV.forBud  (Virtual)

ch07.Bud.accept(TTreeVisitorI ask)
| ch07.TTreeVisitorI.forBud  (Virtual)
| ch07.TSubstsV.forBud  (Virtual)

ch07.Flat.accept(BTreeVisitorI ask)
| ch07.BTreeVisitorI.forFlat(FruitD f,TreeD t)  (Virtual)
| ch07.BHasFruitV.forFlat(FruitD f,TreeD t)  (Virtual)
| ch07.BIsFlatV.forFlat(FruitD f,TreeD t)  (Virtual)
| ch07.BIsSplitV.forFlat(FruitD f,TreeD t)  (Virtual)

ch07.Flat.accept(ITreeVisitorI ask)
| ch07.ITreeVisitorI.forFlat(FruitD f,TreeD t)  (Virtual)
| ch07.IHeightV.forFlat(FruitD f,TreeD t)  (Virtual)
| ch07.IOccursV.forFlat(FruitD f,TreeD t)  (Virtual)

ch07.Flat.accept(TTreeVisitorI ask)
| ch07.TTreeVisitorI.forFlat(FruitD f,TreeD t)  (Virtual)
| ch07.TSubstsV.forFlat(FruitD f,TreeD t)  (Virtual)

ch07.IHeightV.forFlat(FruitD f,TreeD t)
| ch07.TreeD.accept(ITreeVisitorI ask)  (Virtual)
| ch07.Bud.accept(ITreeVisitorI ask)  (Virtual)
| ch07.Flat.accept(ITreeVisitorI ask)  (Virtual)
| ch07.Split.accept(ITreeVisitorI ask)  (Virtual)

ch07.IHeightV.forSplit(TreeD l,TreeD t)
| ch07.TreeD.accept(ITreeVisitorI ask)  (Virtual)
| ch07.Bud.accept(ITreeVisitorI ask)  (Virtual)
| ch07.Flat.accept(ITreeVisitorI ask)  (Virtual)
| ch07.Split.accept(ITreeVisitorI ask)  (Virtual)

ch07.IOccursV.forFlat(FruitD f,TreeD t)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
                                                                     Page 296
                         Simple Invocation Tree Report
===============================================================================
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
                                                                     Page 297
                         Simple Invocation Tree Report
===============================================================================
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch07.TreeD.accept(ITreeVisitorI ask)  (Virtual)
| ch07.Bud.accept(ITreeVisitorI ask)  (Virtual)
                                                                     Page 298
                         Simple Invocation Tree Report
===============================================================================
| ch07.Flat.accept(ITreeVisitorI ask)  (Virtual)
| ch07.Split.accept(ITreeVisitorI ask)  (Virtual)

ch07.IOccursV.forSplit(TreeD l,TreeD t)
| ch07.TreeD.accept(ITreeVisitorI ask)  (Virtual)
| ch07.Bud.accept(ITreeVisitorI ask)  (Virtual)
| ch07.Flat.accept(ITreeVisitorI ask)  (Virtual)
| ch07.Split.accept(ITreeVisitorI ask)  (Virtual)

ch07.Split.accept(BTreeVisitorI ask)
| ch07.BTreeVisitorI.forSplit(TreeD l,TreeD t)  (Virtual)
| ch07.BHasFruitV.forSplit(TreeD l,TreeD t)  (Virtual)
| ch07.BIsFlatV.forSplit(TreeD l,TreeD t)  (Virtual)
| ch07.BIsSplitV.forSplit(TreeD l,TreeD t)  (Virtual)

ch07.Split.accept(ITreeVisitorI ask)
| ch07.ITreeVisitorI.forSplit(TreeD l,TreeD t)  (Virtual)
| ch07.IHeightV.forSplit(TreeD l,TreeD t)  (Virtual)
| ch07.IOccursV.forSplit(TreeD l,TreeD t)  (Virtual)

ch07.Split.accept(TTreeVisitorI ask)
| ch07.TTreeVisitorI.forSplit(TreeD l,TreeD t)  (Virtual)
| ch07.TSubstsV.forSplit(TreeD l,TreeD t)  (Virtual)

ch07.TSubstsV.forFlat(FruitD f,TreeD t)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
                                                                     Page 299
                         Simple Invocation Tree Report
===============================================================================
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
                                                                     Page 300
                         Simple Invocation Tree Report
===============================================================================
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch07.TreeD.accept(TTreeVisitorI ask)  (Virtual)
| ch07.Bud.accept(TTreeVisitorI ask)  (Virtual)
| ch07.Flat.accept(TTreeVisitorI ask)  (Virtual)
| ch07.Split.accept(TTreeVisitorI ask)  (Virtual)
| ch07.Flat.Flat(FruitD _f,TreeD _t)

ch07.TSubstsV.forSplit(TreeD l,TreeD t)
| ch07.TreeD.accept(TTreeVisitorI ask)  (Virtual)
| ch07.Bud.accept(TTreeVisitorI ask)  (Virtual)
| ch07.Flat.accept(TTreeVisitorI ask)  (Virtual)
| ch07.Split.accept(TTreeVisitorI ask)  (Virtual)
                                                                     Page 301
                         Simple Invocation Tree Report
===============================================================================
| ch07.Split.Split(TreeD _l,TreeD _t)

ch071.Flat.accept(TreeVisitorI ask)
| ch071.TreeVisitorI.forFlat(FruitD f,TreeD t)  (Virtual)
| ch071.HasFruitV.forFlat(FruitD f,TreeD t)  (Virtual)
| ch071.IHeightV.forFlat(FruitD f,TreeD t)  (Virtual)
| ch071.IOccursV.forFlat(FruitD f,TreeD t)  (Virtual)
| ch071.IsFlatV.forFlat(FruitD f,TreeD t)  (Virtual)
| ch071.IsSplitV.forFlat(FruitD f,TreeD t)  (Virtual)
| ch071.TSubstsV.forFlat(FruitD f,TreeD t)  (Virtual)

ch071.HasFruitV.forBud
| java.lang.Boolean.Boolean(boolean value)

ch071.HasFruitV.forFlat(FruitD f,TreeD t)
| java.lang.Boolean.Boolean(boolean value)

ch071.HasFruitV.forSplit(TreeD l,TreeD t)
| ch071.TreeD.accept(TreeVisitorI ask)  (Virtual)
| ch071.Bud.accept(TreeVisitorI ask)  (Virtual)
| ch071.Flat.accept(TreeVisitorI ask)  (Virtual)
| ch071.Split.accept(TreeVisitorI ask)  (Virtual)
| java.lang.Boolean.Boolean(boolean value)

ch071.IHeightV.forFlat(FruitD f,TreeD t)
| ch071.TreeD.accept(TreeVisitorI ask)  (Virtual)
| ch071.Bud.accept(TreeVisitorI ask)  (Virtual)
| ch071.Flat.accept(TreeVisitorI ask)  (Virtual)
| ch071.Split.accept(TreeVisitorI ask)  (Virtual)

ch071.IHeightV.forSplit(TreeD l,TreeD t)
| ch071.TreeD.accept(TreeVisitorI ask)  (Virtual)
| ch071.Bud.accept(TreeVisitorI ask)  (Virtual)
| ch071.Flat.accept(TreeVisitorI ask)  (Virtual)
| ch071.Split.accept(TreeVisitorI ask)  (Virtual)

ch071.IOccursV.forFlat(FruitD f,TreeD t)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
                                                                     Page 302
                         Simple Invocation Tree Report
===============================================================================
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
                                                                     Page 303
                         Simple Invocation Tree Report
===============================================================================
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
                                                                     Page 304
                         Simple Invocation Tree Report
===============================================================================
| java.time.Clock.equals(Object obj)  (Virtual)
| ch071.TreeD.accept(TreeVisitorI ask)  (Virtual)
| ch071.Bud.accept(TreeVisitorI ask)  (Virtual)
| ch071.Flat.accept(TreeVisitorI ask)  (Virtual)
| ch071.Split.accept(TreeVisitorI ask)  (Virtual)

ch071.IOccursV.forSplit(TreeD l,TreeD t)
| ch071.TreeD.accept(TreeVisitorI ask)  (Virtual)
| ch071.Bud.accept(TreeVisitorI ask)  (Virtual)
| ch071.Flat.accept(TreeVisitorI ask)  (Virtual)
| ch071.Split.accept(TreeVisitorI ask)  (Virtual)

ch071.IsFlatV.forBud
| java.lang.Boolean.Boolean(boolean value)

ch071.IsFlatV.forFlat(FruitD f,TreeD t)
| ch071.TreeD.accept(TreeVisitorI ask)  (Virtual)
| ch071.Bud.accept(TreeVisitorI ask)  (Virtual)
| ch071.Flat.accept(TreeVisitorI ask)  (Virtual)
| ch071.Split.accept(TreeVisitorI ask)  (Virtual)

ch071.IsFlatV.forSplit(TreeD l,TreeD t)
| java.lang.Boolean.Boolean(boolean value)

ch071.IsSplitV.forBud
| java.lang.Boolean.Boolean(boolean value)

ch071.IsSplitV.forFlat(FruitD f,TreeD t)
| java.lang.Boolean.Boolean(boolean value)

ch071.IsSplitV.forSplit(TreeD l,TreeD t)
| ch071.TreeD.accept(TreeVisitorI ask)  (Virtual)
| ch071.Bud.accept(TreeVisitorI ask)  (Virtual)
| ch071.Flat.accept(TreeVisitorI ask)  (Virtual)
| ch071.Split.accept(TreeVisitorI ask)  (Virtual)
| java.lang.Boolean.booleanValue
| java.lang.Boolean.Boolean(boolean value)

ch071.Split.accept(TreeVisitorI ask)
| ch071.TreeVisitorI.forSplit(TreeD l,TreeD t)  (Virtual)
| ch071.HasFruitV.forSplit(TreeD l,TreeD t)  (Virtual)
| ch071.IHeightV.forSplit(TreeD l,TreeD t)  (Virtual)
| ch071.IOccursV.forSplit(TreeD l,TreeD t)  (Virtual)
| ch071.IsFlatV.forSplit(TreeD l,TreeD t)  (Virtual)
| ch071.IsSplitV.forSplit(TreeD l,TreeD t)  (Virtual)
| ch071.TSubstsV.forSplit(TreeD l,TreeD t)  (Virtual)

ch071.TSubstsV.forFlat(FruitD f,TreeD t)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
                                                                     Page 305
                         Simple Invocation Tree Report
===============================================================================
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
                                                                     Page 306
                         Simple Invocation Tree Report
===============================================================================
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
                                                                     Page 307
                         Simple Invocation Tree Report
===============================================================================
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch071.TreeD.accept(TreeVisitorI ask)  (Virtual)
| ch071.Bud.accept(TreeVisitorI ask)  (Virtual)
| ch071.Flat.accept(TreeVisitorI ask)  (Virtual)
| ch071.Split.accept(TreeVisitorI ask)  (Virtual)
| ch071.Flat.Flat(FruitD _f,TreeD _t)

ch071.TSubstsV.forSplit(TreeD l,TreeD t)
| ch071.TreeD.accept(TreeVisitorI ask)  (Virtual)
| ch071.Bud.accept(TreeVisitorI ask)  (Virtual)
| ch071.Flat.accept(TreeVisitorI ask)  (Virtual)
| ch071.Split.accept(TreeVisitorI ask)  (Virtual)
| ch071.Split.Split(TreeD _l,TreeD _t)

ch08.Add.diff(SetD t)
| ch08.SetD.mem(Integer i)  (Virtual)
| ch08.Add.mem(Integer n)  (Virtual)
| ch08.Empty.mem(Integer i)  (Virtual)
| ch08.SetD.diff(SetD s)  (Virtual)
| ch08.Add.diff(SetD t)  (Virtual)
| ch08.Empty.diff(SetD s)  (Virtual)
| ch08.SetD.add(Integer i)

ch08.Add.mem(Integer n)
| java.lang.Integer.equals(Object obj)
| ch08.SetD.mem(Integer i)  (Virtual)
| ch08.Add.mem(Integer n)  (Virtual)
| ch08.Empty.mem(Integer i)  (Virtual)

ch08.Add.plus(SetD t)
| ch08.SetD.add(Integer i)
| ch08.SetD.plus(SetD s)  (Virtual)
| ch08.Add.plus(SetD t)  (Virtual)
| ch08.Empty.plus(SetD s)  (Virtual)

ch08.Add.prod(SetD t)
| ch08.SetD.mem(Integer i)  (Virtual)
| ch08.Add.mem(Integer n)  (Virtual)
| ch08.Empty.mem(Integer i)  (Virtual)
| ch08.SetD.prod(SetD s)  (Virtual)
| ch08.Add.prod(SetD t)  (Virtual)
| ch08.Empty.prod(SetD s)  (Virtual)
| ch08.SetD.add(Integer i)

ch08.Const.accpet(ExprVisitorI ask)
                                                                     Page 308
                         Simple Invocation Tree Report
===============================================================================
| ch08.ExprVisitorI.forConst(Object c)  (Virtual)
| ch08.IntEvalV.forConst(Object c)  (Virtual)

ch08.Diff.accpet(ExprVisitorI ask)
| ch08.ExprVisitorI.forDiff(ExprD l,ExprD r)  (Virtual)
| ch08.IntEvalV.forDiff(ExprD l,ExprD r)  (Virtual)

ch08.IntEvalV.diff(Object l,Object r)
| java.lang.Integer.intValue
| java.lang.Integer.Integer(int value)

ch08.IntEvalV.forDiff(ExprD l,ExprD r)
| ch08.ExprD.accpet(ExprVisitorI ask)  (Virtual)
| ch08.Const.accpet(ExprVisitorI ask)  (Virtual)
| ch08.Diff.accpet(ExprVisitorI ask)  (Virtual)
| ch08.Plus.accpet(ExprVisitorI ask)  (Virtual)
| ch08.Prod.accpet(ExprVisitorI ask)  (Virtual)
| ch08.IntEvalV.diff(Object l,Object r)  (Virtual)
| ch08.SetEvalV.diff(Object l,Object r)  (Virtual)

ch08.IntEvalV.forPlus(ExprD l,ExprD r)
| ch08.ExprD.accpet(ExprVisitorI ask)  (Virtual)
| ch08.Const.accpet(ExprVisitorI ask)  (Virtual)
| ch08.Diff.accpet(ExprVisitorI ask)  (Virtual)
| ch08.Plus.accpet(ExprVisitorI ask)  (Virtual)
| ch08.Prod.accpet(ExprVisitorI ask)  (Virtual)
| ch08.IntEvalV.plus(Object l,Object r)  (Virtual)
| ch08.SetEvalV.plus(Object l,Object r)  (Virtual)

ch08.IntEvalV.forProd(ExprD l,ExprD r)
| ch08.ExprD.accpet(ExprVisitorI ask)  (Virtual)
| ch08.Const.accpet(ExprVisitorI ask)  (Virtual)
| ch08.Diff.accpet(ExprVisitorI ask)  (Virtual)
| ch08.Plus.accpet(ExprVisitorI ask)  (Virtual)
| ch08.Prod.accpet(ExprVisitorI ask)  (Virtual)
| ch08.IntEvalV.prod(Object l,Object r)  (Virtual)
| ch08.SetEvalV.prod(Object l,Object r)  (Virtual)

ch08.IntEvalV.plus(Object l,Object r)
| java.lang.Integer.intValue
| java.lang.Integer.Integer(int value)

ch08.IntEvalV.prod(Object l,Object r)
| java.lang.Integer.intValue
| java.lang.Integer.Integer(int value)

ch08.Plus.accpet(ExprVisitorI ask)
| ch08.ExprVisitorI.forPlus(ExprD l,ExprD r)  (Virtual)
| ch08.IntEvalV.forPlus(ExprD l,ExprD r)  (Virtual)

ch08.Prod.accpet(ExprVisitorI ask)
| ch08.ExprVisitorI.forProd(ExprD l,ExprD r)  (Virtual)
| ch08.IntEvalV.forProd(ExprD l,ExprD r)  (Virtual)

ch08.SetD.add(Integer i)
                                                                     Page 309
                         Simple Invocation Tree Report
===============================================================================
| ch08.SetD.mem(Integer i)  (Virtual)
| ch08.Add.mem(Integer n)  (Virtual)
| ch08.Empty.mem(Integer i)  (Virtual)
| ch08.Add.Add(Integer _i,SetD _s)

ch08.SetEvalV.diff(Object l,Object r)
| ch08.SetD.diff(SetD s)  (Virtual)
| ch08.Add.diff(SetD t)  (Virtual)
| ch08.Empty.diff(SetD s)  (Virtual)

ch08.SetEvalV.plus(Object l,Object r)
| ch08.SetD.plus(SetD s)  (Virtual)
| ch08.Add.plus(SetD t)  (Virtual)
| ch08.Empty.plus(SetD s)  (Virtual)

ch08.SetEvalV.prod(Object l,Object r)
| ch08.SetD.prod(SetD s)  (Virtual)
| ch08.Add.prod(SetD t)  (Virtual)
| ch08.Empty.prod(SetD s)  (Virtual)

ch0801That.Bot.accept(PieVistor1 ask)
| ch0801That.PieVistor1.forBot(Bot that)  (Virtual)
| ch0801That.LtSubstV.forBot(Bot that)  (Virtual)
| ch0801That.RemV.forBot(Bot that)  (Virtual)
| ch0801That.SubstV.forBot(Bot that)  (Virtual)

ch0801That.Bot.toString
| java.lang.Object.getClass
| java.lang.Class.getName

ch0801That.LtSubstV.forTop(Top that)
| ch0801That.Top.Top(Object t,PieDUpdate r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
                                                                     Page 310
                         Simple Invocation Tree Report
===============================================================================
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
                                                                     Page 311
                         Simple Invocation Tree Report
===============================================================================
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
| ch0801That.PieDUpdate.accept(PieVistor1 ask)  (Virtual)
| ch0801That.Bot.accept(PieVistor1 ask)  (Virtual)
| ch0801That.Top.accept(PieVistor1 ask)  (Virtual)
                                                                     Page 312
                         Simple Invocation Tree Report
===============================================================================

ch0801That.RemV.forTop(Top that)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
                                                                     Page 313
                         Simple Invocation Tree Report
===============================================================================
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
                                                                     Page 314
                         Simple Invocation Tree Report
===============================================================================
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch0801That.PieDUpdate.accept(PieVistor1 ask)  (Virtual)
| ch0801That.Bot.accept(PieVistor1 ask)  (Virtual)
| ch0801That.Top.accept(PieVistor1 ask)  (Virtual)
| ch0801That.Top.Top(Object t,PieDUpdate r)

ch0801That.SubstV.forTop(Top that)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
                                                                     Page 315
                         Simple Invocation Tree Report
===============================================================================
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
                                                                     Page 316
                         Simple Invocation Tree Report
===============================================================================
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch0801That.PieDUpdate.accept(PieVistor1 ask)  (Virtual)
| ch0801That.Bot.accept(PieVistor1 ask)  (Virtual)
| ch0801That.Top.accept(PieVistor1 ask)  (Virtual)
| ch0801That.Top.Top(Object t,PieDUpdate r)

ch0801That.TestThat.main(String[] args)
| ch0801That.Top.Top(Object t,PieDUpdate r)
| ch0801That.RemV.RemV(Object _o)
| ch0801That.Top.accept(PieVistor1 ask)
                                                                     Page 317
                         Simple Invocation Tree Report
===============================================================================
| java.io.PrintStream.println(Object x)
| ch0801That.SubstV.SubstV(Object _n,Object _o)
| ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)

ch0801That.Top.accept(PieVistor1 ask)
| ch0801That.PieVistor1.forTop(Top that)  (Virtual)
| ch0801That.LtSubstV.forTop(Top that)  (Virtual)
| ch0801That.RemV.forTop(Top that)  (Virtual)
| ch0801That.SubstV.forTop(Top that)  (Virtual)

ch0801That.Top.toString
| java.lang.Object.getClass
| java.lang.Class.getName
| java.lang.Object.toString  (Virtual)
| java.nio.channels.FileLock.toString  (Virtual)
| java.time.Instant.toString  (Virtual)
| java.nio.FloatBuffer.toString  (Virtual)
| java.util.concurrent.locks.ReentrantLock.toString  (Virtual)
| java.nio.channels.FileChannel.MapMode.toString  (Virtual)
| java.time.chrono.ChronoZonedDateTime.toString  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.toString  (Virtual)
| java.time.LocalTime.toString  (Virtual)
| java.security.AlgorithmParameters.toString  (Virtual)
| java.util.zip.ZipEntry.toString  (Virtual)
| java.time.zone.ZoneOffsetTransition.toString  (Virtual)
| java.security.Timestamp.toString  (Virtual)
| java.lang.Long.toString  (Virtual)
| java.time.Duration.toString  (Virtual)
| javax.security.auth.Subject.toString  (Virtual)
| java.lang.String.toString  (Virtual)
| java.io.ObjectStreamField.toString  (Virtual)
| java.time.chrono.ChronoLocalDate.toString  (Virtual)
| java.security.PermissionCollection.toString  (Virtual)
| java.security.MessageDigest.toString  (Virtual)
| java.net.InetAddress.toString  (Virtual)
| java.nio.DoubleBuffer.toString  (Virtual)
| java.nio.charset.CoderResult.toString  (Virtual)
| java.util.IntSummaryStatistics.toString  (Virtual)
| java.nio.file.Path.toString  (Virtual)
| java.time.temporal.TemporalField.toString  (Virtual)
| java.lang.invoke.SerializedLambda.toString  (Virtual)
| java.io.File.toString  (Virtual)
| java.lang.Integer.toString  (Virtual)
| java.net.NetworkInterface.toString  (Virtual)
| java.nio.LongBuffer.toString  (Virtual)
| java.security.Permission.toString  (Virtual)
| java.math.MutableBigInteger.toString  (Virtual)
| java.time.ZonedDateTime.toString  (Virtual)
| java.lang.annotation.Annotation.toString  (Virtual)
| ch02.YangRouChuan.toString  (Virtual)
| java.nio.charset.CodingErrorAction.toString  (Virtual)
| java.time.format.Parsed.toString  (Virtual)
| java.io.ObjectStreamClass.toString  (Virtual)
| java.lang.Thread.toString  (Virtual)
| java.lang.Boolean.toString  (Virtual)
                                                                     Page 318
                         Simple Invocation Tree Report
===============================================================================
| java.time.temporal.ValueRange.toString  (Virtual)
| ch0801That.Bot.toString  (Virtual)
| ch0801That.Top.toString  (Virtual)
| java.lang.Throwable.toString  (Virtual)
| java.security.cert.CRL.toString  (Virtual)
| java.util.regex.Matcher.toString  (Virtual)
| ch081.Bot.toString  (Virtual)
| ch081.Top.toString  (Virtual)
| java.util.regex.Pattern.toString  (Virtual)
| java.security.CodeSource.toString  (Virtual)
| java.lang.CharSequence.toString  (Virtual)
| java.lang.reflect.Constructor.toString  (Virtual)
| java.util.Locale.toString  (Virtual)
| java.util.concurrent.atomic.AtomicLong.toString  (Virtual)
| java.time.chrono.AbstractChronology.toString  (Virtual)
| java.time.LocalDateTime.toString  (Virtual)
| java.time.ZoneId.toString  (Virtual)
| java.nio.ByteOrder.toString  (Virtual)
| java.time.OffsetTime.toString  (Virtual)
| java.time.YearMonth.toString  (Virtual)
| java.security.ProtectionDomain.toString  (Virtual)
| java.time.zone.ZoneRules.toString  (Virtual)
| java.nio.IntBuffer.toString  (Virtual)
| java.util.Optional.toString  (Virtual)
| java.time.chrono.Chronology.toString  (Virtual)
| java.util.OptionalLong.toString  (Virtual)
| java.time.Period.toString  (Virtual)
| java.lang.Enum.toString  (Virtual)
| java.lang.Character.Subset.toString  (Virtual)
| java.lang.Character.toString  (Virtual)
| java.lang.Double.toString  (Virtual)
| java.util.Calendar.toString  (Virtual)
| java.text.FieldPosition.toString  (Virtual)
| java.util.HashMap.Node.toString  (Virtual)
| java.net.URL.toString  (Virtual)
| java.lang.Byte.toString  (Virtual)
| java.text.ParsePosition.toString  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.toString  (Virtual)
| java.math.BigDecimal.toString  (Virtual)
| java.lang.reflect.Parameter.toString  (Virtual)
| java.time.format.DateTimePrintContext.toString  (Virtual)
| java.security.cert.CertPath.toString  (Virtual)
| java.security.CodeSigner.toString  (Virtual)
| java.lang.AbstractStringBuilder.toString  (Virtual)
| java.util.concurrent.atomic.AtomicInteger.toString  (Virtual)
| java.time.chrono.ChronoPeriod.toString  (Virtual)
| ch02.KaoRou.toString  (Virtual)
| java.security.Principal.toString  (Virtual)
| java.util.LongSummaryStatistics.toString  (Virtual)
| java.io.ObjectOutputStream.DebugTraceInfoStack.toString  (Virtual)
| java.time.OffsetDateTime.toString  (Virtual)
| java.io.ByteArrayOutputStream.toString  (Virtual)
| java.lang.Class.toString  (Virtual)
| java.time.format.DateTimeFormatter.toString  (Virtual)
| java.time.format.DateTimeParseContext.toString  (Virtual)
                                                                     Page 319
                         Simple Invocation Tree Report
===============================================================================
| java.time.chrono.ChronoLocalDateTime.toString  (Virtual)
| java.util.OptionalDouble.toString  (Virtual)
| java.net.InterfaceAddress.toString  (Virtual)
| java.util.concurrent.ConcurrentHashMap.CollectionView.toString  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.toString  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.toString  (Virtual)
| java.net.URLConnection.toString  (Virtual)
| ch10.AnchovyFish.toString  (Virtual)
| java.net.URI.toString  (Virtual)
| java.nio.charset.Charset.toString  (Virtual)
| java.time.Year.toString  (Virtual)
| java.lang.Package.toString  (Virtual)
| java.util.Formatter.FixedString.toString  (Virtual)
| java.util.Formatter.Flags.toString  (Virtual)
| java.util.Formatter.FormatSpecifier.toString  (Virtual)
| java.util.Formatter.FormatString.toString  (Virtual)
| java.util.Formatter.toString  (Virtual)
| java.security.cert.Certificate.toString  (Virtual)
| java.time.temporal.TemporalUnit.toString  (Virtual)
| java.util.Date.toString  (Virtual)
| java.util.concurrent.atomic.AtomicReference.toString  (Virtual)
| java.util.concurrent.locks.AbstractQueuedSynchronizer.toString  (Virtual)
| java.time.LocalDate.toString  (Virtual)
| java.util.WeakHashMap.Entry.toString  (Virtual)
| java.nio.ByteBuffer.toString  (Virtual)
| java.security.Provider.Service.toString  (Virtual)
| java.security.Provider.UString.toString  (Virtual)
| java.util.OptionalInt.toString  (Virtual)
| java.lang.reflect.Field.toString  (Virtual)
| java.lang.StackTraceElement.toString  (Virtual)
| java.nio.ShortBuffer.toString  (Virtual)
| ch10.PiemanM.toString  (Virtual)
| java.security.cert.X509CRLEntry.toString  (Virtual)
| java.time.MonthDay.toString  (Virtual)
| javax.security.auth.x500.X500Principal.toString  (Virtual)
| java.nio.CharBuffer.toString  (Virtual)
| java.math.MathContext.toString  (Virtual)
| java.util.AbstractCollection.toString  (Virtual)
| java.nio.file.attribute.FileTime.toString  (Virtual)
| java.math.BigInteger.toString  (Virtual)
| java.util.DoubleSummaryStatistics.toString  (Virtual)
| java.util.Hashtable.Entry.toString  (Virtual)
| java.util.Hashtable.toString  (Virtual)
| java.net.Proxy.toString  (Virtual)
| java.util.AbstractMap.SimpleEntry.toString  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.toString  (Virtual)
| java.util.AbstractMap.toString  (Virtual)
| ch01.ManHattanPt.toString  (Virtual)
| java.lang.reflect.Method.toString  (Virtual)
| java.util.jar.Attributes.Name.toString  (Virtual)
| ch02.PointD.toString  (Virtual)
| java.lang.ThreadGroup.toString  (Virtual)
| java.time.format.DecimalStyle.toString  (Virtual)
| java.util.concurrent.ForkJoinPool.toString  (Virtual)
| java.time.Clock.FixedClock.toString  (Virtual)
                                                                     Page 320
                         Simple Invocation Tree Report
===============================================================================
| java.time.Clock.OffsetClock.toString  (Virtual)
| java.time.Clock.SystemClock.toString  (Virtual)
| java.time.Clock.TickClock.toString  (Virtual)

ch081.Add.diff(SetD t)
| ch081.SetD.mem(Integer i)  (Virtual)
| ch081.Add.mem(Integer n)  (Virtual)
| ch081.Empty.mem(Integer i)  (Virtual)
| ch081.SetD.diff(SetD s)  (Virtual)
| ch081.Add.diff(SetD t)  (Virtual)
| ch081.Empty.diff(SetD s)  (Virtual)
| ch081.SetD.add(Integer i)

ch081.Add.mem(Integer n)
| java.lang.Integer.equals(Object obj)
| ch081.SetD.mem(Integer i)  (Virtual)
| ch081.Add.mem(Integer n)  (Virtual)
| ch081.Empty.mem(Integer i)  (Virtual)

ch081.Add.plus(SetD t)
| ch081.SetD.add(Integer i)
| ch081.SetD.plus(SetD s)  (Virtual)
| ch081.Add.plus(SetD t)  (Virtual)
| ch081.Empty.plus(SetD s)  (Virtual)

ch081.Add.prod(SetD t)
| ch081.SetD.mem(Integer i)  (Virtual)
| ch081.Add.mem(Integer n)  (Virtual)
| ch081.Empty.mem(Integer i)  (Virtual)
| ch081.SetD.prod(SetD s)  (Virtual)
| ch081.Add.prod(SetD t)  (Virtual)
| ch081.Empty.prod(SetD s)  (Virtual)
| ch081.SetD.add(Integer i)

ch081.Bot.accept(PieVistor1 ask)
| ch081.PieVistor1.forBot  (Virtual)
| ch081.LtSubstV.forBot  (Virtual)
| ch081.RemV.forBot  (Virtual)
| ch081.SubstV.forBot  (Virtual)
| ch081.SubstD.forBot  (Virtual)
| ch081.SubstVExt.forBot  (Virtual)

ch081.Bot.toString
| java.lang.Object.getClass
| java.lang.Class.getName

ch081.Const.accpet(ExprVisitorI ask)
| ch081.ExprVisitorI.forConst(Object c)  (Virtual)
| ch081.EvalV.forConst(Object c)  (Virtual)

ch081.Diff.accpet(ExprVisitorI ask)
| ch081.ExprVisitorI.forDiff(ExprD l,ExprD r)  (Virtual)
| ch081.EvalV.forDiff(ExprD l,ExprD r)  (Virtual)

ch081.EvalV.forDiff(ExprD l,ExprD r)
                                                                     Page 321
                         Simple Invocation Tree Report
===============================================================================
| ch081.ExprD.accpet(ExprVisitorI ask)  (Virtual)
| ch081.Const.accpet(ExprVisitorI ask)  (Virtual)
| ch081.Diff.accpet(ExprVisitorI ask)  (Virtual)
| ch081.Plus.accpet(ExprVisitorI ask)  (Virtual)
| ch081.Prod.accpet(ExprVisitorI ask)  (Virtual)
| ch081.EvalV.diff(Object l,Object r)  (Virtual)
| ch081.IntEvalV.diff(Object l,Object r)  (Virtual)
| ch081.SetEvalV.diff(Object l,Object r)  (Virtual)

ch081.EvalV.forPlus(ExprD l,ExprD r)
| ch081.ExprD.accpet(ExprVisitorI ask)  (Virtual)
| ch081.Const.accpet(ExprVisitorI ask)  (Virtual)
| ch081.Diff.accpet(ExprVisitorI ask)  (Virtual)
| ch081.Plus.accpet(ExprVisitorI ask)  (Virtual)
| ch081.Prod.accpet(ExprVisitorI ask)  (Virtual)
| ch081.EvalV.plus(Object l,Object r)  (Virtual)
| ch081.IntEvalV.plus(Object l,Object r)  (Virtual)
| ch081.SetEvalV.plus(Object l,Object r)  (Virtual)

ch081.EvalV.forProd(ExprD l,ExprD r)
| ch081.ExprD.accpet(ExprVisitorI ask)  (Virtual)
| ch081.Const.accpet(ExprVisitorI ask)  (Virtual)
| ch081.Diff.accpet(ExprVisitorI ask)  (Virtual)
| ch081.Plus.accpet(ExprVisitorI ask)  (Virtual)
| ch081.Prod.accpet(ExprVisitorI ask)  (Virtual)
| ch081.EvalV.prod(Object l,Object r)  (Virtual)
| ch081.IntEvalV.prod(Object l,Object r)  (Virtual)
| ch081.SetEvalV.prod(Object l,Object r)  (Virtual)

ch081.IntEvalV.diff(Object l,Object r)
| java.lang.Integer.intValue
| java.lang.Integer.Integer(int value)

ch081.IntEvalV.plus(Object l,Object r)
| java.lang.Integer.intValue
| java.lang.Integer.Integer(int value)

ch081.IntEvalV.prod(Object l,Object r)
| java.lang.Integer.intValue
| java.lang.Integer.Integer(int value)

ch081.LtSubstV.forTop(Object t,PieD r)
| ch081.Top.Top(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
                                                                     Page 322
                         Simple Invocation Tree Report
===============================================================================
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
                                                                     Page 323
                         Simple Invocation Tree Report
===============================================================================
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
                                                                     Page 324
                         Simple Invocation Tree Report
===============================================================================
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
| ch081.PieD.accept(PieVistor1 ask)  (Virtual)
| ch081.Bot.accept(PieVistor1 ask)  (Virtual)
| ch081.Top.accept(PieVistor1 ask)  (Virtual)

ch081.LtSubstV1.forTop(Object t,PieD r)
| ch081.Top.Top(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
                                                                     Page 325
                         Simple Invocation Tree Report
===============================================================================
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
                                                                     Page 326
                         Simple Invocation Tree Report
===============================================================================
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)
| ch081.PieD.accept(PieVistor1 ask)  (Virtual)
| ch081.Bot.accept(PieVistor1 ask)  (Virtual)
| ch081.Top.accept(PieVistor1 ask)  (Virtual)

ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)
| ch081.SubstD.SubstD(Object _n,Object _o)

ch081.LtSubstV2.forTop(Object t,PieD r)
| ch081.Top.Top(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
                                                                     Page 327
                         Simple Invocation Tree Report
===============================================================================
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
                                                                     Page 328
                         Simple Invocation Tree Report
===============================================================================
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
                                                                     Page 329
                         Simple Invocation Tree Report
===============================================================================
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)
| ch081.PieD.accept(PieVistor1 ask)  (Virtual)
| ch081.Bot.accept(PieVistor1 ask)  (Virtual)
| ch081.Top.accept(PieVistor1 ask)  (Virtual)

ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)
| ch081.SubstVExt.SubstVExt(Object _n,Object _o)

ch081.Plus.accpet(ExprVisitorI ask)
| ch081.ExprVisitorI.forPlus(ExprD l,ExprD r)  (Virtual)
| ch081.EvalV.forPlus(ExprD l,ExprD r)  (Virtual)

ch081.Prod.accpet(ExprVisitorI ask)
| ch081.ExprVisitorI.forProd(ExprD l,ExprD r)  (Virtual)
| ch081.EvalV.forProd(ExprD l,ExprD r)  (Virtual)

ch081.RemV.forTop(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
                                                                     Page 330
                         Simple Invocation Tree Report
===============================================================================
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
                                                                     Page 331
                         Simple Invocation Tree Report
===============================================================================
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch081.PieD.accept(PieVistor1 ask)  (Virtual)
| ch081.Bot.accept(PieVistor1 ask)  (Virtual)
| ch081.Top.accept(PieVistor1 ask)  (Virtual)
| ch081.Top.Top(Object t,PieD r)

ch081.SetD.add(Integer i)
| ch081.SetD.mem(Integer i)  (Virtual)
| ch081.Add.mem(Integer n)  (Virtual)
| ch081.Empty.mem(Integer i)  (Virtual)
| ch081.Add.Add(Integer _i,SetD _s)

ch081.SetEvalV.diff(Object l,Object r)
                                                                     Page 332
                         Simple Invocation Tree Report
===============================================================================
| ch081.SetD.diff(SetD s)  (Virtual)
| ch081.Add.diff(SetD t)  (Virtual)
| ch081.Empty.diff(SetD s)  (Virtual)

ch081.SetEvalV.plus(Object l,Object r)
| ch081.SetD.plus(SetD s)  (Virtual)
| ch081.Add.plus(SetD t)  (Virtual)
| ch081.Empty.plus(SetD s)  (Virtual)

ch081.SetEvalV.prod(Object l,Object r)
| ch081.SetD.prod(SetD s)  (Virtual)
| ch081.Add.prod(SetD t)  (Virtual)
| ch081.Empty.prod(SetD s)  (Virtual)

ch081.SubstV.forTop(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
                                                                     Page 333
                         Simple Invocation Tree Report
===============================================================================
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
                                                                     Page 334
                         Simple Invocation Tree Report
===============================================================================
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch081.PieD.accept(PieVistor1 ask)  (Virtual)
| ch081.Bot.accept(PieVistor1 ask)  (Virtual)
| ch081.Top.accept(PieVistor1 ask)  (Virtual)
| ch081.Top.Top(Object t,PieD r)

ch081.SubstV1.forTop(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
                                                                     Page 335
                         Simple Invocation Tree Report
===============================================================================
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
                                                                     Page 336
                         Simple Invocation Tree Report
===============================================================================
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
                                                                     Page 337
                         Simple Invocation Tree Report
===============================================================================
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch081.PieD.accept(PieVistor1 ask)  (Virtual)
| ch081.Bot.accept(PieVistor1 ask)  (Virtual)
| ch081.Top.accept(PieVistor1 ask)  (Virtual)
| ch081.Top.Top(Object t,PieD r)

ch081.SubstV1.SubstV1(Object _n,Object _o)
| ch081.SubstD.SubstD(Object _n,Object _o)

ch081.SubstVExt.forTop(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
                                                                     Page 338
                         Simple Invocation Tree Report
===============================================================================
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
                                                                     Page 339
                         Simple Invocation Tree Report
===============================================================================
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch081.PieD.accept(PieVistor1 ask)  (Virtual)
| ch081.Bot.accept(PieVistor1 ask)  (Virtual)
| ch081.Top.accept(PieVistor1 ask)  (Virtual)
| ch081.Top.Top(Object t,PieD r)

ch081.TestPieD.main(String[] args)
| ch081.Top.accept(PieVistor1 ask)
| java.io.PrintStream.println(Object x)

ch081.Top.accept(PieVistor1 ask)
| ch081.PieVistor1.forTop(Object t,PieD r)  (Virtual)
| ch081.LtSubstV.forTop(Object t,PieD r)  (Virtual)
| ch081.RemV.forTop(Object t,PieD r)  (Virtual)
| ch081.SubstV.forTop(Object t,PieD r)  (Virtual)
| ch081.SubstD.forTop(Object t,PieD r)  (Virtual)
| ch081.SubstVExt.forTop(Object t,PieD r)  (Virtual)

ch081.Top.toString
| java.lang.Object.getClass
| java.lang.Class.getName
| java.lang.Object.toString  (Virtual)
| java.nio.channels.FileLock.toString  (Virtual)
| java.time.Instant.toString  (Virtual)
                                                                     Page 340
                         Simple Invocation Tree Report
===============================================================================
| java.nio.FloatBuffer.toString  (Virtual)
| java.util.concurrent.locks.ReentrantLock.toString  (Virtual)
| java.nio.channels.FileChannel.MapMode.toString  (Virtual)
| java.time.chrono.ChronoZonedDateTime.toString  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.toString  (Virtual)
| java.time.LocalTime.toString  (Virtual)
| java.security.AlgorithmParameters.toString  (Virtual)
| java.util.zip.ZipEntry.toString  (Virtual)
| java.time.zone.ZoneOffsetTransition.toString  (Virtual)
| java.security.Timestamp.toString  (Virtual)
| java.lang.Long.toString  (Virtual)
| java.time.Duration.toString  (Virtual)
| javax.security.auth.Subject.toString  (Virtual)
| java.lang.String.toString  (Virtual)
| java.io.ObjectStreamField.toString  (Virtual)
| java.time.chrono.ChronoLocalDate.toString  (Virtual)
| java.security.PermissionCollection.toString  (Virtual)
| java.security.MessageDigest.toString  (Virtual)
| java.net.InetAddress.toString  (Virtual)
| java.nio.DoubleBuffer.toString  (Virtual)
| java.nio.charset.CoderResult.toString  (Virtual)
| java.util.IntSummaryStatistics.toString  (Virtual)
| java.nio.file.Path.toString  (Virtual)
| java.time.temporal.TemporalField.toString  (Virtual)
| java.lang.invoke.SerializedLambda.toString  (Virtual)
| java.io.File.toString  (Virtual)
| java.lang.Integer.toString  (Virtual)
| java.net.NetworkInterface.toString  (Virtual)
| java.nio.LongBuffer.toString  (Virtual)
| java.security.Permission.toString  (Virtual)
| java.math.MutableBigInteger.toString  (Virtual)
| java.time.ZonedDateTime.toString  (Virtual)
| java.lang.annotation.Annotation.toString  (Virtual)
| ch02.YangRouChuan.toString  (Virtual)
| java.nio.charset.CodingErrorAction.toString  (Virtual)
| java.time.format.Parsed.toString  (Virtual)
| java.io.ObjectStreamClass.toString  (Virtual)
| java.lang.Thread.toString  (Virtual)
| java.lang.Boolean.toString  (Virtual)
| java.time.temporal.ValueRange.toString  (Virtual)
| ch0801That.Bot.toString  (Virtual)
| ch0801That.Top.toString  (Virtual)
| java.lang.Throwable.toString  (Virtual)
| java.security.cert.CRL.toString  (Virtual)
| java.util.regex.Matcher.toString  (Virtual)
| ch081.Bot.toString  (Virtual)
| ch081.Top.toString  (Virtual)
| java.util.regex.Pattern.toString  (Virtual)
| java.security.CodeSource.toString  (Virtual)
| java.lang.CharSequence.toString  (Virtual)
| java.lang.reflect.Constructor.toString  (Virtual)
| java.util.Locale.toString  (Virtual)
| java.util.concurrent.atomic.AtomicLong.toString  (Virtual)
| java.time.chrono.AbstractChronology.toString  (Virtual)
| java.time.LocalDateTime.toString  (Virtual)
                                                                     Page 341
                         Simple Invocation Tree Report
===============================================================================
| java.time.ZoneId.toString  (Virtual)
| java.nio.ByteOrder.toString  (Virtual)
| java.time.OffsetTime.toString  (Virtual)
| java.time.YearMonth.toString  (Virtual)
| java.security.ProtectionDomain.toString  (Virtual)
| java.time.zone.ZoneRules.toString  (Virtual)
| java.nio.IntBuffer.toString  (Virtual)
| java.util.Optional.toString  (Virtual)
| java.time.chrono.Chronology.toString  (Virtual)
| java.util.OptionalLong.toString  (Virtual)
| java.time.Period.toString  (Virtual)
| java.lang.Enum.toString  (Virtual)
| java.lang.Character.Subset.toString  (Virtual)
| java.lang.Character.toString  (Virtual)
| java.lang.Double.toString  (Virtual)
| java.util.Calendar.toString  (Virtual)
| java.text.FieldPosition.toString  (Virtual)
| java.util.HashMap.Node.toString  (Virtual)
| java.net.URL.toString  (Virtual)
| java.lang.Byte.toString  (Virtual)
| java.text.ParsePosition.toString  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.toString  (Virtual)
| java.math.BigDecimal.toString  (Virtual)
| java.lang.reflect.Parameter.toString  (Virtual)
| java.time.format.DateTimePrintContext.toString  (Virtual)
| java.security.cert.CertPath.toString  (Virtual)
| java.security.CodeSigner.toString  (Virtual)
| java.lang.AbstractStringBuilder.toString  (Virtual)
| java.util.concurrent.atomic.AtomicInteger.toString  (Virtual)
| java.time.chrono.ChronoPeriod.toString  (Virtual)
| ch02.KaoRou.toString  (Virtual)
| java.security.Principal.toString  (Virtual)
| java.util.LongSummaryStatistics.toString  (Virtual)
| java.io.ObjectOutputStream.DebugTraceInfoStack.toString  (Virtual)
| java.time.OffsetDateTime.toString  (Virtual)
| java.io.ByteArrayOutputStream.toString  (Virtual)
| java.lang.Class.toString  (Virtual)
| java.time.format.DateTimeFormatter.toString  (Virtual)
| java.time.format.DateTimeParseContext.toString  (Virtual)
| java.time.chrono.ChronoLocalDateTime.toString  (Virtual)
| java.util.OptionalDouble.toString  (Virtual)
| java.net.InterfaceAddress.toString  (Virtual)
| java.util.concurrent.ConcurrentHashMap.CollectionView.toString  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.toString  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.toString  (Virtual)
| java.net.URLConnection.toString  (Virtual)
| ch10.AnchovyFish.toString  (Virtual)
| java.net.URI.toString  (Virtual)
| java.nio.charset.Charset.toString  (Virtual)
| java.time.Year.toString  (Virtual)
| java.lang.Package.toString  (Virtual)
| java.util.Formatter.FixedString.toString  (Virtual)
| java.util.Formatter.Flags.toString  (Virtual)
| java.util.Formatter.FormatSpecifier.toString  (Virtual)
| java.util.Formatter.FormatString.toString  (Virtual)
                                                                     Page 342
                         Simple Invocation Tree Report
===============================================================================
| java.util.Formatter.toString  (Virtual)
| java.security.cert.Certificate.toString  (Virtual)
| java.time.temporal.TemporalUnit.toString  (Virtual)
| java.util.Date.toString  (Virtual)
| java.util.concurrent.atomic.AtomicReference.toString  (Virtual)
| java.util.concurrent.locks.AbstractQueuedSynchronizer.toString  (Virtual)
| java.time.LocalDate.toString  (Virtual)
| java.util.WeakHashMap.Entry.toString  (Virtual)
| java.nio.ByteBuffer.toString  (Virtual)
| java.security.Provider.Service.toString  (Virtual)
| java.security.Provider.UString.toString  (Virtual)
| java.util.OptionalInt.toString  (Virtual)
| java.lang.reflect.Field.toString  (Virtual)
| java.lang.StackTraceElement.toString  (Virtual)
| java.nio.ShortBuffer.toString  (Virtual)
| ch10.PiemanM.toString  (Virtual)
| java.security.cert.X509CRLEntry.toString  (Virtual)
| java.time.MonthDay.toString  (Virtual)
| javax.security.auth.x500.X500Principal.toString  (Virtual)
| java.nio.CharBuffer.toString  (Virtual)
| java.math.MathContext.toString  (Virtual)
| java.util.AbstractCollection.toString  (Virtual)
| java.nio.file.attribute.FileTime.toString  (Virtual)
| java.math.BigInteger.toString  (Virtual)
| java.util.DoubleSummaryStatistics.toString  (Virtual)
| java.util.Hashtable.Entry.toString  (Virtual)
| java.util.Hashtable.toString  (Virtual)
| java.net.Proxy.toString  (Virtual)
| java.util.AbstractMap.SimpleEntry.toString  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.toString  (Virtual)
| java.util.AbstractMap.toString  (Virtual)
| ch01.ManHattanPt.toString  (Virtual)
| java.lang.reflect.Method.toString  (Virtual)
| java.util.jar.Attributes.Name.toString  (Virtual)
| ch02.PointD.toString  (Virtual)
| java.lang.ThreadGroup.toString  (Virtual)
| java.time.format.DecimalStyle.toString  (Virtual)
| java.util.concurrent.ForkJoinPool.toString  (Virtual)
| java.time.Clock.FixedClock.toString  (Virtual)
| java.time.Clock.OffsetClock.toString  (Virtual)
| java.time.Clock.SystemClock.toString  (Virtual)
| java.time.Clock.TickClock.toString  (Virtual)

ch09.CartesianPt2.CartesianPt2(int _x,int _y)
| ch09.PointDCloserSimplify.PointDCloserSimplify(int _x,int _y)

ch09.CartesianPt2.distanceTo0
| java.lang.Math.sqrt(double a)

ch09.Circle.accept(ShapeVisitorI ask)
| ch09.ShapeVisitorI.forCircle(int r)  (Virtual)
| ch09.HasPtV.forCircle(int r)  (Virtual)

ch09.HasPtV.forCircle(int r)
| ch09.PointDCloserSimplify.distanceTo0  (Virtual)
                                                                     Page 343
                         Simple Invocation Tree Report
===============================================================================
| ch09.CartesianPt2.distanceTo0  (Virtual)
| ch09.ManHattanPt2.distanceTo0  (Virtual)

ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)
| ch09.HasPtV.HasPtV(PointDCloserSimplify _p)
| ch09.ShapeD.accept(ShapeVisitorI ask)  (Virtual)
| ch09.Circle.accept(ShapeVisitorI ask)  (Virtual)
| ch09.Square.accept(ShapeVisitorI ask)  (Virtual)
| ch09.Trans.accept(ShapeVisitorI ask)  (Virtual)
| ch09.Union.accept(ShapeVisitorI ask)  (Virtual)

ch09.ManHattanPt2.closerTo0(CartesianPt2 p1)
| ch09.ManHattanPt2.distanceTo0
| ch09.CartesianPt2.distanceTo0  (Virtual)
| ch09.ShadowCartesian.distanceTo0  (Virtual)

ch09.ManHattanPt2.ManHattanPt2(int _x,int _y)
| ch09.PointDCloserSimplify.PointDCloserSimplify(int _x,int _y)

ch09.PointDCloserSimplify.closerTo0(CartesianPt2 p1)
| ch09.PointDCloserSimplify.distanceTo0  (Virtual)
| ch09.CartesianPt2.distanceTo0  (Virtual)
| ch09.ManHattanPt2.distanceTo0  (Virtual)
| ch09.CartesianPt2.distanceTo0  (Virtual)
| ch09.ShadowCartesian.distanceTo0  (Virtual)

ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)
| ch09.CartesianPt2.CartesianPt2(int _x,int _y)

ch09.ShadowCartesian.distanceTo0
| ch09.CartesianPt2.distanceTo0
| java.lang.Math.sqrt(double a)

ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)
| ch09.CartesianPt2.CartesianPt2(int _x,int _y)

ch09.Square.accept(ShapeVisitorI ask)
| ch09.ShapeVisitorI.forSquare(int s)  (Virtual)
| ch09.HasPtV.forSquare(int s)  (Virtual)

ch09.Test.main(String[] args)
| ch09.ManHattanPt2.ManHattanPt2(int _x,int _y)
| java.io.PrintStream.println(int x)

ch09.Trans.accept(ShapeVisitorI ask)
| ch09.ShapeVisitorI.forTrans(PointDCloserSimplify q,ShapeD s)  (Virtual)
| ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)  (Virtual)

ch09.Union.accept(ShapeVisitorI ask)
| ch09.UnionVisitorI.forUnion(ShapeD s,ShapeD t)

ch09.UnionHasPtV.forUnion(ShapeD s,ShapeD t)
| ch09.ShapeD.accept(ShapeVisitorI ask)  (Virtual)
| ch09.Circle.accept(ShapeVisitorI ask)  (Virtual)
| ch09.Square.accept(ShapeVisitorI ask)  (Virtual)
                                                                     Page 344
                         Simple Invocation Tree Report
===============================================================================
| ch09.Trans.accept(ShapeVisitorI ask)  (Virtual)
| ch09.Union.accept(ShapeVisitorI ask)  (Virtual)

ch09.UnionHasPtV.UnionHasPtV(CartesianPt2 _p)
| ch09.HasPtV.HasPtV(PointDCloserSimplify _p)

ch10.AnchovyFish.toString
| java.lang.Object.getClass
| java.lang.Class.getName

ch10.Bot.accept(PieVistor1 ask)
| ch10.PieVistor1.forBot  (Virtual)
| ch10.LtSubstV.forBot  (Virtual)
| ch10.RemV.forBot  (Virtual)
| ch10.SubstV.forBot  (Virtual)
| ch10.OccursV.forBot  (Virtual)

ch10.LtSubstV.forTop(Object t,PieD r)
| ch10.Top.Top(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
                                                                     Page 345
                         Simple Invocation Tree Report
===============================================================================
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
                                                                     Page 346
                         Simple Invocation Tree Report
===============================================================================
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
| ch10.PieD.accept(PieVistor1 ask)  (Virtual)
| ch10.Bot.accept(PieVistor1 ask)  (Virtual)
| ch10.Top.accept(PieVistor1 ask)  (Virtual)

ch10.Mian.main(String[] args)
| ch10.PiemanM.PiemanM(PieD _p)
| ch10.PiemanI.addTop(Object t)  (Virtual)
| ch10.PiemanM.addTop(Object t)  (Virtual)
| ch10.PiemanI.substTop(Object n,Object o)  (Virtual)
| ch10.PiemanM.substTop(Object n,Object o)  (Virtual)
| java.io.PrintStream.println(String x)

ch10.OccursV.forBot
| java.lang.Integer.Integer(int value)

ch10.OccursV.forTop(Object t,PieD r)
                                                                     Page 347
                         Simple Invocation Tree Report
===============================================================================
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
                                                                     Page 348
                         Simple Invocation Tree Report
===============================================================================
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
                                                                     Page 349
                         Simple Invocation Tree Report
===============================================================================
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch10.PieD.accept(PieVistor1 ask)  (Virtual)
| ch10.Bot.accept(PieVistor1 ask)  (Virtual)
| ch10.Top.accept(PieVistor1 ask)  (Virtual)
| java.lang.Integer.intValue
| java.lang.Integer.Integer(int value)

ch10.PiemanM.addTop(Object t)
| ch10.Top.Top(Object t,PieD r)
| ch10.PiemanM.occTop(Object o)

ch10.PiemanM.occTop(Object o)
| ch10.OccursV.OccursV(Object _a)
| ch10.PieD.accept(PieVistor1 ask)  (Virtual)
| ch10.Bot.accept(PieVistor1 ask)  (Virtual)
| ch10.Top.accept(PieVistor1 ask)  (Virtual)
| java.lang.Integer.intValue

ch10.PiemanM.remTop(Object t)
| ch10.RemV.RemV(Object _o)
| ch10.PieD.accept(PieVistor1 ask)  (Virtual)
| ch10.Bot.accept(PieVistor1 ask)  (Virtual)
| ch10.Top.accept(PieVistor1 ask)  (Virtual)
| ch10.PiemanM.occTop(Object o)

ch10.PiemanM.substTop(Object n,Object o)
| ch10.SubstV.SubstV(Object _n,Object _o)
| ch10.PieD.accept(PieVistor1 ask)  (Virtual)
| ch10.Bot.accept(PieVistor1 ask)  (Virtual)
| ch10.Top.accept(PieVistor1 ask)  (Virtual)
| ch10.PiemanM.occTop(Object o)

ch10.PiemanM.toString
| java.lang.Object.getClass
| java.lang.Class.getName

ch10.RemV.forTop(Object t,PieD r)
                                                                     Page 350
                         Simple Invocation Tree Report
===============================================================================
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
                                                                     Page 351
                         Simple Invocation Tree Report
===============================================================================
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
                                                                     Page 352
                         Simple Invocation Tree Report
===============================================================================
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch10.PieD.accept(PieVistor1 ask)  (Virtual)
| ch10.Bot.accept(PieVistor1 ask)  (Virtual)
| ch10.Top.accept(PieVistor1 ask)  (Virtual)
| ch10.Top.Top(Object t,PieD r)

ch10.SubstV.forTop(Object t,PieD r)
| java.lang.Object.equals(Object obj)  (Virtual)
| java.util.AbstractList.equals(Object o)  (Virtual)
| java.time.Instant.equals(Object otherInstant)  (Virtual)
| java.nio.FloatBuffer.equals(Object ob)  (Virtual)
| java.time.chrono.ChronoZonedDateTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransitionRule.equals(Object otherRule)  (Virtual)
| java.time.LocalTime.equals(Object obj)  (Virtual)
| java.time.zone.ZoneOffsetTransition.equals(Object other)  (Virtual)
| java.security.Timestamp.equals(Object obj)  (Virtual)
| java.lang.Long.equals(Object obj)  (Virtual)
| java.time.Duration.equals(Object otherDuration)  (Virtual)
| javax.security.auth.Subject.equals(Object o)  (Virtual)
| java.lang.String.equals(Object anObject)  (Virtual)
| java.time.chrono.ChronoLocalDate.equals(Object obj)  (Virtual)
| ch07.Apple.equals(Object o)  (Virtual)
| ch07.Fig.equals(Object o)  (Virtual)
| ch07.Lemon.equals(Object o)  (Virtual)
| ch07.Peach.equals(Object o)  (Virtual)
| ch07.Pear.equals(Object o)  (Virtual)
| java.net.InetAddress.equals(Object obj)  (Virtual)
| java.nio.DoubleBuffer.equals(Object ob)  (Virtual)
| java.util.AbstractSet.equals(Object o)  (Virtual)
| java.nio.file.Path.equals(Object other)  (Virtual)
| java.io.File.equals(Object obj)  (Virtual)
| java.lang.Integer.equals(Object obj)  (Virtual)
| java.net.NetworkInterface.equals(Object obj)  (Virtual)
| java.nio.LongBuffer.equals(Object ob)  (Virtual)
| java.security.Permission.equals(Object obj)  (Virtual)
| java.time.ZonedDateTime.equals(Object obj)  (Virtual)
| java.lang.annotation.Annotation.equals(Object obj)  (Virtual)
                                                                     Page 353
                         Simple Invocation Tree Report
===============================================================================
| java.io.ObjectStreamClass.FieldReflectorKey.equals(Object obj)  (Virtual)
| java.io.ObjectStreamClass.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Thread.WeakClassKey.equals(Object obj)  (Virtual)
| java.lang.Boolean.equals(Object obj)  (Virtual)
| java.time.temporal.ValueRange.equals(Object obj)  (Virtual)
| ch06.FishD.equals(Object o)  (Virtual)
| java.security.CodeSource.equals(Object obj)  (Virtual)
| java.lang.reflect.Constructor.equals(Object obj)  (Virtual)
| java.util.Locale.LanguageRange.equals(Object obj)  (Virtual)
| java.util.Locale.LocaleKey.equals(Object obj)  (Virtual)
| java.util.Locale.equals(Object obj)  (Virtual)
| java.time.chrono.AbstractChronology.equals(Object obj)  (Virtual)
| java.time.LocalDateTime.equals(Object obj)  (Virtual)
| java.time.ZoneId.equals(Object obj)  (Virtual)
| java.time.OffsetTime.equals(Object obj)  (Virtual)
| java.time.YearMonth.equals(Object obj)  (Virtual)
| java.time.zone.ZoneRules.equals(Object otherRules)  (Virtual)
| java.nio.IntBuffer.equals(Object ob)  (Virtual)
| java.util.Optional.equals(Object obj)  (Virtual)
| java.time.chrono.Chronology.equals(Object obj)  (Virtual)
| java.util.OptionalLong.equals(Object obj)  (Virtual)
| java.time.Period.equals(Object obj)  (Virtual)
| java.lang.Enum.equals(Object other)  (Virtual)
| java.util.jar.Manifest.equals(Object o)  (Virtual)
| java.lang.Character.Subset.equals(Object obj)  (Virtual)
| java.lang.Character.equals(Object obj)  (Virtual)
| java.lang.Double.equals(Object obj)  (Virtual)
| java.util.Calendar.equals(Object obj)  (Virtual)
| ch05.MoreThanOne.equals(Object o)  (Virtual)
| ch05.Zero.equals(Object o)  (Virtual)
| java.text.FieldPosition.equals(Object obj)  (Virtual)
| java.util.HashMap.Node.equals(Object o)  (Virtual)
| java.net.URL.equals(Object obj)  (Virtual)
| java.util.Map.Entry.equals(Object o)  (Virtual)
| java.util.Map.equals(Object o)  (Virtual)
| java.lang.Byte.equals(Object obj)  (Virtual)
| java.text.ParsePosition.equals(Object obj)  (Virtual)
| java.text.AttributedCharacterIterator.Attribute.equals(Object obj)  (Virtual)
| java.math.BigDecimal.equals(Object x)  (Virtual)
| java.lang.reflect.Parameter.equals(Object obj)  (Virtual)
| java.security.cert.CertPath.equals(Object other)  (Virtual)
| java.security.CodeSigner.equals(Object obj)  (Virtual)
| java.util.Collection.equals(Object o)  (Virtual)
| java.time.chrono.ChronoPeriod.equals(Object obj)  (Virtual)
| ch061.FishD.equals(Object o)  (Virtual)
| java.security.Principal.equals(Object another)  (Virtual)
| java.security.AccessControlContext.equals(Object obj)  (Virtual)
| ch05.FishD.equals(Object o)  (Virtual)
| java.time.OffsetDateTime.equals(Object obj)  (Virtual)
| java.time.chrono.ChronoLocalDateTime.equals(Object obj)  (Virtual)
| java.util.OptionalDouble.equals(Object obj)  (Virtual)
| java.net.InterfaceAddress.equals(Object obj)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.EntrySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object o)  (Virtual)
| java.util.concurrent.ConcurrentHashMap.MapEntry.equals(Object o)  (Virtual)
                                                                     Page 354
                         Simple Invocation Tree Report
===============================================================================
| java.util.concurrent.ConcurrentHashMap.Node.equals(Object o)  (Virtual)
| java.text.MessageFormat.equals(Object obj)  (Virtual)
| ch10.FishD.equals(Object o)  (Virtual)
| java.security.cert.X509CRL.equals(Object other)  (Virtual)
| ch051.FishD.equals(Object o)  (Virtual)
| java.net.URI.equals(Object ob)  (Virtual)
| java.nio.charset.Charset.equals(Object ob)  (Virtual)
| java.text.DateFormatSymbols.equals(Object obj)  (Virtual)
| java.time.Year.equals(Object obj)  (Virtual)
| ch071.Apple.equals(Object o)  (Virtual)
| ch071.Fig.equals(Object o)  (Virtual)
| ch071.Lemon.equals(Object o)  (Virtual)
| ch071.Peach.equals(Object o)  (Virtual)
| ch071.Pear.equals(Object o)  (Virtual)
| java.security.cert.Certificate.equals(Object other)  (Virtual)
| java.util.Date.equals(Object obj)  (Virtual)
| java.time.LocalDate.equals(Object obj)  (Virtual)
| java.util.WeakHashMap.Entry.equals(Object o)  (Virtual)
| java.nio.ByteBuffer.equals(Object ob)  (Virtual)
| java.util.Comparator.equals(Object obj)  (Virtual)
| java.security.Provider.ServiceKey.equals(Object obj)  (Virtual)
| java.security.Provider.UString.equals(Object obj)  (Virtual)
| java.util.OptionalInt.equals(Object obj)  (Virtual)
| java.lang.reflect.Field.equals(Object obj)  (Virtual)
| java.lang.StackTraceElement.equals(Object obj)  (Virtual)
| java.nio.ShortBuffer.equals(Object ob)  (Virtual)
| java.security.cert.X509CRLEntry.equals(Object other)  (Virtual)
| java.time.MonthDay.equals(Object obj)  (Virtual)
| javax.security.auth.x500.X500Principal.equals(Object o)  (Virtual)
| java.nio.CharBuffer.equals(Object ob)  (Virtual)
| java.math.MathContext.equals(Object x)  (Virtual)
| java.nio.file.attribute.FileTime.equals(Object obj)  (Virtual)
| java.math.BigInteger.equals(Object x)  (Virtual)
| java.util.Hashtable.Entry.equals(Object o)  (Virtual)
| java.util.Hashtable.equals(Object o)  (Virtual)
| java.net.Proxy.equals(Object obj)  (Virtual)
| java.util.AbstractMap.SimpleEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.SimpleImmutableEntry.equals(Object o)  (Virtual)
| java.util.AbstractMap.equals(Object o)  (Virtual)
| java.lang.reflect.Method.equals(Object obj)  (Virtual)
| java.util.jar.Attributes.Name.equals(Object o)  (Virtual)
| java.util.jar.Attributes.equals(Object o)  (Virtual)
| java.time.format.DecimalStyle.equals(Object obj)  (Virtual)
| java.time.Clock.equals(Object obj)  (Virtual)
| ch10.PieD.accept(PieVistor1 ask)  (Virtual)
| ch10.Bot.accept(PieVistor1 ask)  (Virtual)
| ch10.Top.accept(PieVistor1 ask)  (Virtual)
| ch10.Top.Top(Object t,PieD r)

ch10.Top.accept(PieVistor1 ask)
| ch10.PieVistor1.forTop(Object t,PieD r)  (Virtual)
| ch10.LtSubstV.forTop(Object t,PieD r)  (Virtual)
| ch10.RemV.forTop(Object t,PieD r)  (Virtual)
| ch10.SubstV.forTop(Object t,PieD r)  (Virtual)
| ch10.OccursV.forTop(Object t,PieD r)  (Virtual)
                                                                     Page 355
                         Simple Invocation Tree Report
===============================================================================

receive(String result)
| java.io.PrintStream.println(String x)

ReCall.Stranger.askQuestion(String question)
| java.lang.Thread.Thread(Runnable target)
| java.lang.Thread.start
| ReCall.Stranger.play

ReCall.Stranger.askQuestion.(Anon_1).run
| accept(Callback callback,String question)

ReCall.Stranger.play
| java.io.PrintStream.println(String x)

ReCall.Test.main(String[] args)
| ReCall.Wang.Wang(Ye ye)
| ReCall.Stranger.Stranger(Ye ye)
| ReCall.Wang.askQuestion(String question)
| ReCall.Stranger.askQuestion(String question)

receive(String result)
| java.io.PrintStream.println(String x)

ReCall.Wang.askQuestion(String question)
| java.lang.Thread.Thread(Runnable target)
| java.lang.Thread.start
| ReCall.Wang.play

ReCall.Wang.askQuestion.(Anon_1).run
| accept(Callback callback,String question)

ReCall.Wang.play
| java.io.PrintStream.println(String x)

accept(Callback callback,String question)
| java.io.PrintStream.println(String x)
| receive(String result)  (Virtual)
| receive(String result)  (Virtual)
| receive(String result)  (Virtual)

YeRestaurant.Restaurant
| java.util.ArrayList.ArrayList

YeRestaurant.Restaurant.init
| java.lang.Class.getResourceAsStream(String name)
| java.util.Properties.Properties
| java.util.Properties.load(InputStream inStream)  (Virtual)
| java.security.Provider.load(InputStream inStream)  (Virtual)
| java.lang.Throwable.printStackTrace
| java.util.Hashtable.values  (Virtual)
| java.security.Provider.values  (Virtual)
| java.lang.Class.forName(String className)
| java.lang.Class.newInstance
| java.util.List.add(E e)  (Virtual)
                                                                     Page 356
                         Simple Invocation Tree Report
===============================================================================
| java.util.LinkedList.add(E e)  (Virtual)
| java.io.PrintStream.println(String x)

YeRestaurant.Restaurant.main(String[] args)
| YeRestaurant.Restaurant.Restaurant
| java.io.PrintStream.println(String x)
| YeRestaurant.Restaurant.init
| YeRestaurant.Restaurant.showFoods

YeRestaurant.Restaurant.showFoods
| YeRestaurant.Food.getFoodName  (Virtual)
| YeRestaurant.Cai.QingJiaoRouSi.getFoodName  (Virtual)
| YeRestaurant.Cai.TangCuLiYu.getFoodName  (Virtual)
| YeRestaurant.Cai.SuanTaiChaoRou.getFoodName  (Virtual)
| YeRestaurant.Cai.Apple.getFoodName  (Virtual)
| YeRestaurant.Cai.Banana.getFoodName  (Virtual)
| YeRestaurant.Cai.HongShaoRou.getFoodName  (Virtual)
| java.io.PrintStream.println(String x)
                                                                     Page 357
                                 Imports Report
===============================================================================

Apple.java
| java.lang
| YeRestaurant.Food

Banana.java
| java.lang
| YeRestaurant.Food

Callback.java
| java.lang

ExprD.java
| java.lang

ExprD.java
| java.lang

Food.java
| java.lang

FruitD.java
| java.lang

FruitD.java
| java.lang

HongShaoRou.java
| java.lang
| YeRestaurant.Food

KaoRou.java
| java.lang

KaoRouChuan.java
| java.lang

KaoRouPlates.java
| java.lang

LayerD.java
| java.lang

Main.java
| java.lang

Mian.java
| java.lang

NumD.java
| java.lang

NumD.java
| java.lang

NumD.java
                                                                     Page 358
                                 Imports Report
===============================================================================
| java.lang

PieD.java
| java.lang

PieD.java
| java.lang

PieD.java
| java.lang

PieD.java
| java.lang

PieD.java
| java.lang

PieD.java
| java.lang

PieD.java
| java.lang

PieDGeneral.java
| java.lang

PieDUpdate.java
| java.lang

PiemanM.java
| java.lang

PizzaD.java
| java.lang

PointD.java
| java.lang

PointD.java
| java.lang

PointDCloser.java
| java.lang

PointDCloserSimplify.java
| java.lang
| java.util.Locale.Category

PointDCloserSimplify.java
| java.lang

QingJiaoRouSi.java
| java.lang
| YeRestaurant.Food

Restaurant.java
                                                                     Page 359
                                 Imports Report
===============================================================================
| java.lang
| java.util.ArrayList
| java.util
| java.io.FileInputStream
| java.io.IOException
| java.io.InputStream

Seasoning.java
| java.lang

SetD.java
| java.lang

SetD.java
| java.lang

ShadowCartesian.java
| java.lang

ShapeD.java
| java.lang

Stranger.java
| java.lang

SuanTaiChaoRou.java
| java.lang
| YeRestaurant.Food

SubstD.java
| java.lang

SubstVExt.java
| java.lang

TangCuLiYu.java
| java.lang
| YeRestaurant.Food

Test.java
| java.lang

Test.java
| java.lang

Test.java
| java.lang

Test.java
| java.lang

TestMain.java
| java.lang

TestPieD.java
                                                                     Page 360
                                 Imports Report
===============================================================================
| java.lang

TestThat.java
| java.lang

TestTYangRouChuan.java
| java.lang

TreeD.java
| java.lang

TreeD.java
| java.lang

Union.java
| java.lang

Wang.java
| java.lang

YangRouChuan.java
| java.lang

YangRouChuan.java
| java.lang

Ye.java
| java.lang
                                                                     Page 361
                         Program Unit Complexity Report
===============================================================================

ch01.Base.Base(Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch01.CartesianPt.CartesianPt(int _x,int _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch01.ManHattanPt.ManHattanPt(int _x,int _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch01.ManHattanPt.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch01.MoreThanOne.MoreThanOne(NumD _d)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch01.Slice.Slice(LayerD _s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch01.Test.main(String[] args)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 362
                         Program Unit Complexity Report
===============================================================================

ch01.TestMain.main(String[] args)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.CartesianPt.CartesianPt(int _x,int _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.CartesianPt.distanceTo0
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.CartesianPt1.CartesianPt1(int _x,int _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.CartesianPt1.closerTo0(CartesianPt1 p1)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.CartesianPt1.distanceTo0
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.CartesianPt2.CartesianPt2(int _x,int _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 363
                         Program Unit Complexity Report
===============================================================================

ch02.CartesianPt2.distanceTo0
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Holder.Holder(Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Holder.isVeggie
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Holder.whatHolder
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.KaoRou.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Lamb.isVegetarian
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Lamb.Lamb(YangRouChuan _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 364
                         Program Unit Complexity Report
===============================================================================

ch02.Lamb.onlyOnions
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Main.main(String[] args)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.ManHattanPt.distanceTo0
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.ManHattanPt.ManHattanPt(int _x,int _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.ManHattanPt.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.ManHattanPt1.closerTo0(ManHattanPt1 p1)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.ManHattanPt1.distanceTo0
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 365
                         Program Unit Complexity Report
===============================================================================

ch02.ManHattanPt1.ManHattanPt1(int _x,int _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.ManHattanPt2.closerTo0(CartesianPt p1)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.ManHattanPt2.distanceTo0
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.ManHattanPt2.ManHattanPt2(int _x,int _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.MoreThanOne.MoreThanOne(NumD _d)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Onion.isVegetarian
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Onion.Onion(YangRouChuan _s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 366
                         Program Unit Complexity Report
===============================================================================

ch02.Onion.onlyOnions
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Onion.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Pepper.isVeggie
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Pepper.Pepper(KaoRou kaoroujia)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Pepper.whatHolder
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.PointD.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.PointDCloserSimplify.closerTo0(CartesianPt2 p1)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 367
                         Program Unit Complexity Report
===============================================================================

ch02.Radish.isVeggie
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Radish.Radish(KaoRou kaoroujia)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Radish.whatHolder
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Shallot.isVeggie
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Shallot.Shallot(KaoRou kaoroujia)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Shallot.whatHolder
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Shrimp.isVeggie
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 368
                         Program Unit Complexity Report
===============================================================================

ch02.Shrimp.Shrimp(KaoRou kaoroujia)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Shrimp.whatHolder
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Skewer.isVegetarian
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Skewer.onlyOnions
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Test.main(String[] args)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.TestTYangRouChuan.main(String[] args)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Tomato.isVegetarian
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 369
                         Program Unit Complexity Report
===============================================================================

ch02.Tomato.onlyOnions
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Tomato.Tomato(YangRouChuan _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Tomato.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.YangRouChuan.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.YangRouChuan.YangRouChuan
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Zucchini.isVeggie
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch02.Zucchini.whatHolder
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 370
                         Program Unit Complexity Report
===============================================================================

ch02.Zucchini.Zucchini(KaoRou kaoroujia)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Anchovy.Anchovy(PizzaD _p)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Anchovy.remA
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Anchovy.subAwC
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Anchovy.topAwC
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Cheese.Cheese(PizzaD _p)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Cheese.remA
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 371
                         Program Unit Complexity Report
===============================================================================

ch03.Cheese.subAwC
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Cheese.topAwC
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Crust.remA
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Crust.subAwC
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Crust.topAwC
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Olive.Olive(PizzaD _p)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Olive.remA
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 372
                         Program Unit Complexity Report
===============================================================================

ch03.Olive.subAwC
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Olive.topAwC
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Sausage.remA
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Sausage.Sausage(PizzaD _p)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Sausage.subAwC
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Sausage.topAwC
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Spinach.remA
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 373
                         Program Unit Complexity Report
===============================================================================

ch03.Spinach.Spinach(PizzaD _p)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Spinach.subAwC
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch03.Spinach.topAwC
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.IsVegetarianV.forLamb(YangRouChuan y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.IsVegetarianV.forOnion(YangRouChuan y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.IsVegetarianV.forSkewer
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.IsVegetarianV.forTomato(YangRouChuan y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 374
                         Program Unit Complexity Report
===============================================================================

ch04.Lamb.isVegetarian
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.Lamb.Lamb(YangRouChuan _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.Lamb.onlyOnions
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.Onion.isVegetarian
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.Onion.Onion(YangRouChuan _s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.Onion.onlyOnions
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.OnlyOnionsV.forLamb(YangRouChuan y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 375
                         Program Unit Complexity Report
===============================================================================

ch04.OnlyOnionsV.forOnion(YangRouChuan y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.OnlyOnionsV.forSkewer
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.OnlyOnionsV.forTomato(YangRouChuan y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.Skewer.isVegetarian
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.Skewer.onlyOnions
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.Tomato.isVegetarian
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch04.Tomato.onlyOnions
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 376
                         Program Unit Complexity Report
===============================================================================

ch04.Tomato.Tomato(YangRouChuan _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.AnchovyFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.Bot.remA
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.Bot.remFish(FishD f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.Bot1.remA(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.MoreThanOne.equals(Object o)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch05.MoreThanOne.MoreThanOne(NumD _d)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 377
                         Program Unit Complexity Report
===============================================================================

ch05.RemAV.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.RemAV.forTop(Object t,PieD r)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch05.RemFishInt.forBot(FishD f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch05.RemFishV.forBot(FishD f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.RemFishV.forTop(Object t,PieD r,FishD f)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch05.RemFishV1.forBot(FishD f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 378
                         Program Unit Complexity Report
===============================================================================

ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch05.RemV.forBot(Object f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.RemV.forTop(Object t,PieDGeneral r,Object f)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch05.SalmonFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.Top.remA
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.Top.remFish(FishD f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.Top.Top(Object t,PieD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 379
                         Program Unit Complexity Report
===============================================================================

ch05.Top1.remA(Object f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.Top1.Top1(Object t,PieDGeneral r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.TunaFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch05.Zero.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch051.AnchovyFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch051.Bot.remA(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch051.Bot.substFish(Object n,Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 380
                         Program Unit Complexity Report
===============================================================================

ch051.RemFishInt.forBot(FishD f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch051.RemFishInt.forTop(Object t,PieD r,Integer f)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch051.RemFishV.forBot(FishD f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch051.RemFishV.forTop(Object t,PieD r,FishD f)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch051.RemV.forBot(Object f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch051.RemV.forTop(Object t,PieD r,Object f)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch051.SalmonFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 381
                         Program Unit Complexity Report
===============================================================================

ch051.SubstFishV.forBot(FishD n,FishD o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch051.SubstIntV.forBot(Integer n,Integer o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch051.SubstV.forBot(Object n,Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch051.SubstV.forTop(Object t,PieD r,Object n,Object o)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch051.Top.remA(Object f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 382
                         Program Unit Complexity Report
===============================================================================

ch051.Top.substFish(Object n,Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch051.Top.Top(Object t,PieD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch051.TunaFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch06.AnchovyFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch06.Bot.remA(RemV remFn,Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch06.Bot.substFish(SubstV subFn,Object n,Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch06.RemV.forBot(Object f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 383
                         Program Unit Complexity Report
===============================================================================

ch06.RemV.forTop(Object t,PieD r,Object f)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch06.SalmonFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch06.SubstV.forBot(Object n,Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch06.SubstV.forTop(Object t,PieD r,Object n,Object o)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch06.Top.remA(RemV remFn,Object f)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch06.Top.substFish(SubstV subFn,Object n,Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch06.Top.Top(Object t,PieD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 384
                         Program Unit Complexity Report
===============================================================================

ch06.TunaFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch061.AnchovyFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch061.Bot.Bot(Object _t,PieD _r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch061.Bot.remA(RemV remFn)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch061.Bot.substFish(SubstV subFn)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch061.RemV.forBot(Object t,PieD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch061.RemV.forTop(Object t,PieD r)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0
                                                                     Page 385
                         Program Unit Complexity Report
===============================================================================

ch061.RemV.RemV(Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch061.SalmonFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch061.SubstV.forBot(Object t,PieD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch061.SubstV.forTop(Object t,PieD r)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch061.SubstV.SubstV(Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch061.Top.remA(RemV remFn)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch061.Top.substFish(SubstV subFn)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 386
                         Program Unit Complexity Report
===============================================================================

ch061.Top.Top(Object t,PieD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch061.TunaFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch062.Bot.accept(PieVistor1 ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch062.LtSubstV.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch062.LtSubstV.forTop(Object t,PieD r)
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 3
   Essential:                         3
   Max Nesting:                       2
   Count Path:                        3
   Count Path Log:                        0

ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch062.RemV.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 387
                         Program Unit Complexity Report
===============================================================================

ch062.RemV.forTop(Object t,PieD r)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch062.RemV.RemV(Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch062.SubstV.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch062.SubstV.forTop(Object t,PieD r)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch062.SubstV.SubstV(Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch062.Top.accept(PieVistor1 ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch062.Top.Top(Object t,PieD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 388
                         Program Unit Complexity Report
===============================================================================

ch07.Apple.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.BHasFruitV.forBud
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.BHasFruitV.forFlat(FruitD f,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.BHasFruitV.forSplit(TreeD l,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.BIsFlatV.forBud
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.BIsFlatV.forFlat(FruitD f,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.BIsFlatV.forSplit(TreeD l,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 389
                         Program Unit Complexity Report
===============================================================================

ch07.BIsSplitV.forBud
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.BIsSplitV.forFlat(FruitD f,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.BIsSplitV.forSplit(TreeD l,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Bud.accept(BTreeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Bud.accept(ITreeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Bud.accept(TTreeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Fig.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 390
                         Program Unit Complexity Report
===============================================================================

ch07.Flat.accept(BTreeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Flat.accept(ITreeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Flat.accept(TTreeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Flat.Flat(FruitD _f,TreeD _t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.IHeightV.forBud
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.IHeightV.forFlat(FruitD f,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.IHeightV.forSplit(TreeD l,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 391
                         Program Unit Complexity Report
===============================================================================

ch07.IOccursV.forBud
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.IOccursV.forFlat(FruitD f,TreeD t)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch07.IOccursV.forSplit(TreeD l,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.IOccursV.IOccursV(FruitD _a)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Lemon.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Peach.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Pear.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 392
                         Program Unit Complexity Report
===============================================================================

ch07.Split.accept(BTreeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Split.accept(ITreeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Split.accept(TTreeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.Split.Split(TreeD _l,TreeD _t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.TSubstsV.forBud
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch07.TSubstsV.forFlat(FruitD f,TreeD t)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch07.TSubstsV.forSplit(TreeD l,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 393
                         Program Unit Complexity Report
===============================================================================

ch07.TSubstsV.TSubstsV(FruitD _n,FruitD _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.Apple.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.Bud.accept(TreeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.Fig.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.Flat.accept(TreeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.Flat.Flat(FruitD _f,TreeD _t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.HasFruitV.forBud
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 394
                         Program Unit Complexity Report
===============================================================================

ch071.HasFruitV.forFlat(FruitD f,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.HasFruitV.forSplit(TreeD l,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.IHeightV.forBud
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.IHeightV.forFlat(FruitD f,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.IHeightV.forSplit(TreeD l,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.IOccursV.forBud
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.IOccursV.forFlat(FruitD f,TreeD t)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0
                                                                     Page 395
                         Program Unit Complexity Report
===============================================================================

ch071.IOccursV.forSplit(TreeD l,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.IOccursV.IOccursV(FruitD _a)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.IsFlatV.forBud
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.IsFlatV.forFlat(FruitD f,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.IsFlatV.forSplit(TreeD l,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.IsSplitV.forBud
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.IsSplitV.forFlat(FruitD f,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 396
                         Program Unit Complexity Report
===============================================================================

ch071.IsSplitV.forSplit(TreeD l,TreeD t)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch071.Lemon.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.Peach.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.Pear.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.Split.accept(TreeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.Split.Split(TreeD _l,TreeD _t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.TSubstsV.forBud
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 397
                         Program Unit Complexity Report
===============================================================================

ch071.TSubstsV.forFlat(FruitD f,TreeD t)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch071.TSubstsV.forSplit(TreeD l,TreeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch071.TSubstsV.TSubstsV(FruitD _n,FruitD _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.Add.Add(Integer _i,SetD _s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.Add.diff(SetD t)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch08.Add.mem(Integer n)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch08.Add.plus(SetD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 398
                         Program Unit Complexity Report
===============================================================================

ch08.Add.prod(SetD t)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch08.Const.accpet(ExprVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.Const.Const(Object _c)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.Diff.accpet(ExprVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.Diff.Diff(ExprD _l,ExprD _r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.Empty.diff(SetD s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.Empty.mem(Integer i)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 399
                         Program Unit Complexity Report
===============================================================================

ch08.Empty.plus(SetD s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.Empty.prod(SetD s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.IntEvalV.diff(Object l,Object r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.IntEvalV.forConst(Object c)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.IntEvalV.forDiff(ExprD l,ExprD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.IntEvalV.forPlus(ExprD l,ExprD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.IntEvalV.forProd(ExprD l,ExprD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 400
                         Program Unit Complexity Report
===============================================================================

ch08.IntEvalV.plus(Object l,Object r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.IntEvalV.prod(Object l,Object r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.Plus.accpet(ExprVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.Plus.Plus(ExprD _l,ExprD _r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.Prod.accpet(ExprVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.Prod.Prod(ExprD _l,ExprD _r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.SetD.add(Integer i)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0
                                                                     Page 401
                         Program Unit Complexity Report
===============================================================================

ch08.SetEvalV.diff(Object l,Object r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.SetEvalV.plus(Object l,Object r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch08.SetEvalV.prod(Object l,Object r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch0801That.Bot.accept(PieVistor1 ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch0801That.Bot.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch0801That.LtSubstV.forBot(Bot that)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch0801That.LtSubstV.forTop(Top that)
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 3
   Essential:                         3
   Max Nesting:                       2
   Count Path:                        3
   Count Path Log:                        0
                                                                     Page 402
                         Program Unit Complexity Report
===============================================================================

ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch0801That.RemV.forBot(Bot that)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch0801That.RemV.forTop(Top that)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch0801That.RemV.RemV(Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch0801That.SubstV.forBot(Bot that)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch0801That.SubstV.forTop(Top that)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch0801That.SubstV.SubstV(Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 403
                         Program Unit Complexity Report
===============================================================================

ch0801That.TestThat.main(String[] args)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch0801That.Top.accept(PieVistor1 ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch0801That.Top.Top(Object t,PieDUpdate r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch0801That.Top.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Add.Add(Integer _i,SetD _s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Add.diff(SetD t)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch081.Add.mem(Integer n)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0
                                                                     Page 404
                         Program Unit Complexity Report
===============================================================================

ch081.Add.plus(SetD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Add.prod(SetD t)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch081.Bot.accept(PieVistor1 ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Bot.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Const.accpet(ExprVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Const.Const(Object _c)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Diff.accpet(ExprVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 405
                         Program Unit Complexity Report
===============================================================================

ch081.Diff.Diff(ExprD _l,ExprD _r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Empty.diff(SetD s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Empty.mem(Integer i)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Empty.plus(SetD s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Empty.prod(SetD s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.EvalV.forConst(Object c)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.EvalV.forDiff(ExprD l,ExprD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 406
                         Program Unit Complexity Report
===============================================================================

ch081.EvalV.forPlus(ExprD l,ExprD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.EvalV.forProd(ExprD l,ExprD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.IntEvalV.diff(Object l,Object r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.IntEvalV.plus(Object l,Object r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.IntEvalV.prod(Object l,Object r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.LtSubstV.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.LtSubstV.forTop(Object t,PieD r)
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 3
   Essential:                         3
   Max Nesting:                       2
   Count Path:                        3
   Count Path Log:                        0
                                                                     Page 407
                         Program Unit Complexity Report
===============================================================================

ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.LtSubstV1.forTop(Object t,PieD r)
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 3
   Essential:                         3
   Max Nesting:                       2
   Count Path:                        3
   Count Path Log:                        0

ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.LtSubstV2.forTop(Object t,PieD r)
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 3
   Essential:                         3
   Max Nesting:                       2
   Count Path:                        3
   Count Path Log:                        0

ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Plus.accpet(ExprVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Plus.Plus(ExprD _l,ExprD _r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 408
                         Program Unit Complexity Report
===============================================================================

ch081.Prod.accpet(ExprVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Prod.Prod(ExprD _l,ExprD _r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.RemV.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.RemV.forTop(Object t,PieD r)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch081.RemV.RemV(Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.SetD.add(Integer i)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch081.SetEvalV.diff(Object l,Object r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 409
                         Program Unit Complexity Report
===============================================================================

ch081.SetEvalV.plus(Object l,Object r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.SetEvalV.prod(Object l,Object r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.SubstD.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.SubstD.SubstD(Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.SubstV.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.SubstV.forTop(Object t,PieD r)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch081.SubstV.SubstV(Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 410
                         Program Unit Complexity Report
===============================================================================

ch081.SubstV1.forTop(Object t,PieD r)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch081.SubstV1.SubstV1(Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.SubstVExt.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.SubstVExt.forTop(Object t,PieD r)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch081.SubstVExt.SubstVExt(Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.TestPieD.main(String[] args)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Top.accept(PieVistor1 ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 411
                         Program Unit Complexity Report
===============================================================================

ch081.Top.Top(Object t,PieD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch081.Top.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.CartesianPt2.CartesianPt2(int _x,int _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.CartesianPt2.distanceTo0
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.Circle.accept(ShapeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.Circle.Circle(int _r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.HasPtV.forCircle(int r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 412
                         Program Unit Complexity Report
===============================================================================

ch09.HasPtV.forSquare(int s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.HasPtV.HasPtV(PointDCloserSimplify _p)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.ManHattanPt2.closerTo0(CartesianPt2 p1)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.ManHattanPt2.distanceTo0
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.ManHattanPt2.ManHattanPt2(int _x,int _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.PointDCloserSimplify.closerTo0(CartesianPt2 p1)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 413
                         Program Unit Complexity Report
===============================================================================

ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.PointDCloserSimplify.PointDCloserSimplify(int _x,int _y)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.ShadowCartesian.distanceTo0
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.Square.accept(ShapeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.Square.Square(int _s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.Test.main(String[] args)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 414
                         Program Unit Complexity Report
===============================================================================

ch09.Trans.accept(ShapeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.Trans.Trans(PointDCloserSimplify _q,ShapeD _s)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.Union.accept(ShapeVisitorI ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.Union.Union(ShapeD _s,ShapeD _t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.UnionHasPtV.forUnion(ShapeD s,ShapeD t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch09.UnionHasPtV.UnionHasPtV(CartesianPt2 _p)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.AnchovyFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 415
                         Program Unit Complexity Report
===============================================================================

ch10.AnchovyFish.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.Bot.accept(PieVistor1 ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.LtSubstV.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.LtSubstV.forTop(Object t,PieD r)
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 3
   Essential:                         3
   Max Nesting:                       2
   Count Path:                        3
   Count Path Log:                        0

ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.Mian.main(String[] args)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.OccursV.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 416
                         Program Unit Complexity Report
===============================================================================

ch10.OccursV.forTop(Object t,PieD r)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch10.OccursV.OccursV(Object _a)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.PiemanM.addTop(Object t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.PiemanM.occTop(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.PiemanM.PiemanM(PieD _p)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.PiemanM.remTop(Object t)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.PiemanM.substTop(Object n,Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 417
                         Program Unit Complexity Report
===============================================================================

ch10.PiemanM.toString
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.RemV.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.RemV.forTop(Object t,PieD r)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0

ch10.RemV.RemV(Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.SalmonFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.SubstV.forBot
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.SubstV.forTop(Object t,PieD r)
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0
                                                                     Page 418
                         Program Unit Complexity Report
===============================================================================

ch10.SubstV.SubstV(Object _n,Object _o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.Top.accept(PieVistor1 ask)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.Top.Top(Object t,PieD r)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ch10.TunaFish.equals(Object o)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

receive(String result)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ReCall.Stranger.askQuestion(String question)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ReCall.Stranger.askQuestion.(Anon_1).run
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 419
                         Program Unit Complexity Report
===============================================================================

ReCall.Stranger.play
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ReCall.Stranger.Stranger(Ye ye)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ReCall.Test.main(String[] args)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

receive(String result)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ReCall.Wang.askQuestion(String question)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ReCall.Wang.askQuestion.(Anon_1).run
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

ReCall.Wang.play
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 420
                         Program Unit Complexity Report
===============================================================================

ReCall.Wang.Wang(Ye ye)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

accept(Callback callback,String question)
   Cyclomatic:                        5
   Modified Cyclomatic:               5
   Strict Cyclomatic:                 5
   Essential:                         1
   Max Nesting:                       2
   Count Path:                        8
   Count Path Log:                        1

YeRestaurant.Cai.Apple.getFoodName
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

YeRestaurant.Cai.Banana.getFoodName
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

YeRestaurant.Cai.HongShaoRou.getFoodName
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

YeRestaurant.Cai.QingJiaoRouSi.getFoodName
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

YeRestaurant.Cai.SuanTaiChaoRou.getFoodName
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0
                                                                     Page 421
                         Program Unit Complexity Report
===============================================================================

YeRestaurant.Cai.TangCuLiYu.getFoodName
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

YeRestaurant.Restaurant.init
   Cyclomatic:                        6
   Modified Cyclomatic:               6
   Strict Cyclomatic:                 6
   Essential:                         1
   Max Nesting:                       2
   Count Path:                        7
   Count Path Log:                        1

YeRestaurant.Restaurant.main(String[] args)
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

YeRestaurant.Restaurant.Restaurant
   Cyclomatic:                        1
   Modified Cyclomatic:               1
   Strict Cyclomatic:                 1
   Essential:                         1
   Max Nesting:                       0
   Count Path:                        1
   Count Path Log:                        0

YeRestaurant.Restaurant.showFoods
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
   Count Path Log:                        0
                                                                     Page 422
                         Project Metrics Summary Report
===============================================================================
Classes:                    247
Files:                       61
Program Units:              513
Lines:                     4165
Lines Blank:                818
Lines Code:                2669
Lines Comment:              806
Lines Inactive:               0
Executable Statements:      625
Declarative Statements:    1004
Ratio Comment/Code:        0.30
                                                                     Page 423
                              Program Unit Metrics
===============================================================================

ch01.Base.Base(Object _o) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch01.CartesianPt.CartesianPt(int _x,int _y) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch01.ManHattanPt.ManHattanPt(int _x,int _y) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch01.ManHattanPt.toString (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch01.MoreThanOne.MoreThanOne(NumD _d) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 424
                              Program Unit Metrics
===============================================================================

ch01.Slice.Slice(LayerD _s) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch01.Test.main(String[] args) (Public Static Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  2
   Ratio Comment/Code:      0.00

ch01.TestMain.main(String[] args) (Public Static Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  2
   Ratio Comment/Code:      0.00

ch02.CartesianPt.CartesianPt(int _x,int _y) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch02.CartesianPt.distanceTo0 (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 425
                              Program Unit Metrics
===============================================================================

ch02.CartesianPt1.CartesianPt1(int _x,int _y) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch02.CartesianPt1.closerTo0(CartesianPt1 p1) (Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch02.CartesianPt1.distanceTo0 (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.CartesianPt2.CartesianPt2(int _x,int _y) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch02.CartesianPt2.distanceTo0 (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 426
                              Program Unit Metrics
===============================================================================

ch02.Holder.Holder(Object _o) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Holder.isVeggie (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Holder.whatHolder (Method)
   Lines:                   3
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.50

ch02.KaoRou.isVeggie (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch02.KaoRou.toString (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 427
                              Program Unit Metrics
===============================================================================

ch02.KaoRou.whatHolder (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch02.Lamb.isVegetarian (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Lamb.Lamb(YangRouChuan _y) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             1
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Lamb.onlyOnions (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Main.main(String[] args) (Public Static Method)
   Lines:                   8
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   6
   Declarative Code Lines:  3
   Execution Statements:    4
   Declaration Statements:  3
   Ratio Comment/Code:      0.00
                                                                     Page 428
                              Program Unit Metrics
===============================================================================

ch02.ManHattanPt.distanceTo0 (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.ManHattanPt.ManHattanPt(int _x,int _y) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch02.ManHattanPt.toString (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.ManHattanPt1.closerTo0(ManHattanPt1 p1) (Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch02.ManHattanPt1.distanceTo0 (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 429
                              Program Unit Metrics
===============================================================================

ch02.ManHattanPt1.ManHattanPt1(int _x,int _y) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch02.ManHattanPt2.closerTo0(CartesianPt p1) (Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch02.ManHattanPt2.distanceTo0 (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.ManHattanPt2.ManHattanPt2(int _x,int _y) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch02.MoreThanOne.MoreThanOne(NumD _d) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 430
                              Program Unit Metrics
===============================================================================

ch02.Onion.isVegetarian (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Onion.Onion(YangRouChuan _s) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Onion.onlyOnions (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Onion.toString (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Pepper.isVeggie (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 431
                              Program Unit Metrics
===============================================================================

ch02.Pepper.Pepper(KaoRou kaoroujia) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Pepper.whatHolder (Method)
   Lines:                   3
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.50

ch02.PointD.distanceTo0 (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch02.PointD.toString (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.PointDCloser.distanceTo0 (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 432
                              Program Unit Metrics
===============================================================================

ch02.PointDCloserSimplify.closerTo0(CartesianPt2 p1) (Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch02.PointDCloserSimplify.distanceTo0 (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch02.Radish.isVeggie (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Radish.Radish(KaoRou kaoroujia) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Radish.whatHolder (Method)
   Lines:                   3
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.50
                                                                     Page 433
                              Program Unit Metrics
===============================================================================

ch02.Shallot.isVeggie (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Shallot.Shallot(KaoRou kaoroujia) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Shallot.whatHolder (Method)
   Lines:                   3
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.50

ch02.Shrimp.isVeggie (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Shrimp.Shrimp(KaoRou kaoroujia) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 434
                              Program Unit Metrics
===============================================================================

ch02.Shrimp.whatHolder (Method)
   Lines:                   3
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.50

ch02.Skewer.isVegetarian (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch02.Skewer.onlyOnions (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Test.main(String[] args) (Public Static Method)
   Lines:                   8
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  4
   Execution Statements:    2
   Declaration Statements:  4
   Ratio Comment/Code:      0.00

ch02.TestTYangRouChuan.main(String[] args) (Public Static Method)
   Lines:                   14
   Comment Lines:           2
   Blank Lines:             3
   Code Lines:              9
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  1
   Execution Statements:    7
   Declaration Statements:  1
   Ratio Comment/Code:      0.22
                                                                     Page 435
                              Program Unit Metrics
===============================================================================

ch02.Tomato.isVegetarian (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch02.Tomato.onlyOnions (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Tomato.Tomato(YangRouChuan _y) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Tomato.toString (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.YangRouChuan.isVegetarian (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00
                                                                     Page 436
                              Program Unit Metrics
===============================================================================

ch02.YangRouChuan.onlyOnions (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch02.YangRouChuan.toString (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.YangRouChuan.YangRouChuan (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Zucchini.isVeggie (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch02.Zucchini.whatHolder (Method)
   Lines:                   3
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              2
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.50
                                                                     Page 437
                              Program Unit Metrics
===============================================================================

ch02.Zucchini.Zucchini(KaoRou kaoroujia) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch03.Anchovy.Anchovy(PizzaD _p) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch03.Anchovy.remA (Method)
   Lines:                   5
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch03.Anchovy.subAwC (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch03.Anchovy.topAwC (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 438
                              Program Unit Metrics
===============================================================================

ch03.Cheese.Cheese(PizzaD _p) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch03.Cheese.remA (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch03.Cheese.subAwC (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch03.Cheese.topAwC (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch03.Crust.remA (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 439
                              Program Unit Metrics
===============================================================================

ch03.Crust.subAwC (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch03.Crust.topAwC (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch03.Olive.Olive(PizzaD _p) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch03.Olive.remA (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch03.Olive.subAwC (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67
                                                                     Page 440
                              Program Unit Metrics
===============================================================================

ch03.Olive.topAwC (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch03.PizzaD.remA (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch03.PizzaD.subAwC (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch03.PizzaD.topAwC (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch03.Sausage.remA (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 441
                              Program Unit Metrics
===============================================================================

ch03.Sausage.Sausage(PizzaD _p) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch03.Sausage.subAwC (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch03.Sausage.topAwC (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch03.Spinach.remA (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch03.Spinach.Spinach(PizzaD _p) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 442
                              Program Unit Metrics
===============================================================================

ch03.Spinach.subAwC (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch03.Spinach.topAwC (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch04.IsVegetarianV.forLamb(YangRouChuan y) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch04.IsVegetarianV.forOnion(YangRouChuan y) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch04.IsVegetarianV.forSkewer (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 443
                              Program Unit Metrics
===============================================================================

ch04.IsVegetarianV.forTomato(YangRouChuan y) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch04.Lamb.isVegetarian (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch04.Lamb.Lamb(YangRouChuan _y) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             1
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch04.Lamb.onlyOnions (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch04.Onion.isVegetarian (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 444
                              Program Unit Metrics
===============================================================================

ch04.Onion.Onion(YangRouChuan _s) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch04.Onion.onlyOnions (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch04.OnlyOnionsV.forLamb(YangRouChuan y) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch04.OnlyOnionsV.forOnion(YangRouChuan y) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch04.OnlyOnionsV.forSkewer (Method)
   Lines:                   3
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 445
                              Program Unit Metrics
===============================================================================

ch04.OnlyOnionsV.forTomato(YangRouChuan y) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch04.Skewer.isVegetarian (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch04.Skewer.onlyOnions (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch04.Tomato.isVegetarian (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch04.Tomato.onlyOnions (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 446
                              Program Unit Metrics
===============================================================================

ch04.Tomato.Tomato(YangRouChuan _y) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch04.YangRouChuan.isVegetarian (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch04.YangRouChuan.onlyOnions (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch05.AnchovyFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch05.Bot.remA (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 447
                              Program Unit Metrics
===============================================================================

ch05.Bot.remFish(FishD f) (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch05.Bot1.remA(Object o) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch05.FishD.equals(Object o) (Public Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch05.MoreThanOne.equals(Object o) (Public Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch05.MoreThanOne.MoreThanOne(NumD _d) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 448
                              Program Unit Metrics
===============================================================================

ch05.PieD.remA (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch05.PieD.remFish(FishD f) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch05.PieDGeneral.remA(Object o) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch05.RemAV.forBot (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch05.RemAV.forTop(Object t,PieD r) (Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 449
                              Program Unit Metrics
===============================================================================

ch05.RemFishInt.forBot(FishD f) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f) (Method)
   Lines:                   7
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14

ch05.RemFishV.forBot(FishD f) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch05.RemFishV.forTop(Object t,PieD r,FishD f) (Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch05.RemFishV1.forBot(FishD f) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 450
                              Program Unit Metrics
===============================================================================

ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f) (Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch05.RemV.forBot(Object f) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch05.RemV.forTop(Object t,PieDGeneral r,Object f) (Method)
   Lines:                   7
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14

ch05.SalmonFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch05.Top.remA (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 451
                              Program Unit Metrics
===============================================================================

ch05.Top.remFish(FishD f) (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch05.Top.Top(Object t,PieD r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch05.Top1.remA(Object f) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch05.Top1.Top1(Object t,PieDGeneral r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch05.TunaFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67
                                                                     Page 452
                              Program Unit Metrics
===============================================================================

ch05.Zero.equals(Object o) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch051.AnchovyFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch051.Bot.remA(Object o) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch051.Bot.substFish(Object n,Object o) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch051.FishD.equals(Object o) (Public Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 453
                              Program Unit Metrics
===============================================================================

ch051.PieD.remA(Object o) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch051.PieD.substFish(Object n,Object o) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch051.RemFishInt.forBot(FishD f) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch051.RemFishInt.forTop(Object t,PieD r,Integer f) (Method)
   Lines:                   7
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14

ch051.RemFishV.forBot(FishD f) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 454
                              Program Unit Metrics
===============================================================================

ch051.RemFishV.forTop(Object t,PieD r,FishD f) (Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch051.RemV.forBot(Object f) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch051.RemV.forTop(Object t,PieD r,Object f) (Method)
   Lines:                   7
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14

ch051.SalmonFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch051.SubstFishV.forBot(FishD n,FishD o) (Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 455
                              Program Unit Metrics
===============================================================================

ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o) (Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch051.SubstIntV.forBot(Integer n,Integer o) (Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o) (Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch051.SubstV.forBot(Object n,Object o) (Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch051.SubstV.forTop(Object t,PieD r,Object n,Object o) (Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 456
                              Program Unit Metrics
===============================================================================

ch051.Top.remA(Object f) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch051.Top.substFish(Object n,Object o) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch051.Top.Top(Object t,PieD r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch051.TunaFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch06.AnchovyFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67
                                                                     Page 457
                              Program Unit Metrics
===============================================================================

ch06.Bot.remA(RemV remFn,Object o) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch06.Bot.substFish(SubstV subFn,Object n,Object o) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch06.FishD.equals(Object o) (Public Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch06.PieD.remA(RemV remFn,Object o) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch06.PieD.substFish(SubstV subFn,Object n,Object o) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 458
                              Program Unit Metrics
===============================================================================

ch06.RemV.forBot(Object f) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch06.RemV.forTop(Object t,PieD r,Object f) (Method)
   Lines:                   7
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.29

ch06.SalmonFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch06.SubstV.forBot(Object n,Object o) (Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch06.SubstV.forTop(Object t,PieD r,Object n,Object o) (Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 459
                              Program Unit Metrics
===============================================================================

ch06.Top.remA(RemV remFn,Object f) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch06.Top.substFish(SubstV subFn,Object n,Object o) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch06.Top.Top(Object t,PieD r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch06.TunaFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch061.AnchovyFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67
                                                                     Page 460
                              Program Unit Metrics
===============================================================================

ch061.Bot.Bot(Object _t,PieD _r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch061.Bot.remA(RemV remFn) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch061.Bot.substFish(SubstV subFn) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch061.FishD.equals(Object o) (Public Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch061.PieD.remA(RemV remFn) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 461
                              Program Unit Metrics
===============================================================================

ch061.PieD.substFish(SubstV subFn) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch061.RemV.forBot(Object t,PieD r) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch061.RemV.forTop(Object t,PieD r) (Method)
   Lines:                   7
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.29

ch061.RemV.RemV(Object _o) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch061.SalmonFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67
                                                                     Page 462
                              Program Unit Metrics
===============================================================================

ch061.SubstV.forBot(Object t,PieD r) (Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch061.SubstV.forTop(Object t,PieD r) (Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch061.SubstV.SubstV(Object _n,Object _o) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch061.Top.remA(RemV remFn) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch061.Top.substFish(SubstV subFn) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 463
                              Program Unit Metrics
===============================================================================

ch061.Top.Top(Object t,PieD r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch061.TunaFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch062.Bot.accept(PieVistor1 ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch062.LtSubstV.forBot (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch062.LtSubstV.forTop(Object t,PieD r) (Public Method)
   Lines:                   13
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              12
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  1
   Execution Statements:    5
   Declaration Statements:  1
   Ratio Comment/Code:      0.08
                                                                     Page 464
                              Program Unit Metrics
===============================================================================

ch062.LtSubstV.LtSubstV(int _c,Object _n,Object _o) (Public Constructor)
   Lines:                   6
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.20

ch062.PieD.accept(PieVistor1 ask) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch062.PieVistor1.forBot (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch062.PieVistor1.forTop(Object t,PieD r) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch062.RemV.forBot (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 465
                              Program Unit Metrics
===============================================================================

ch062.RemV.forTop(Object t,PieD r) (Public Method)
   Lines:                   7
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.29

ch062.RemV.RemV(Object _o) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch062.SubstV.forBot (Public Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch062.SubstV.forTop(Object t,PieD r) (Public Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch062.SubstV.SubstV(Object _n,Object _o) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25
                                                                     Page 466
                              Program Unit Metrics
===============================================================================

ch062.Top.accept(PieVistor1 ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch062.Top.Top(Object t,PieD r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch07.Apple.equals(Object o) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.BHasFruitV.forBud (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.BHasFruitV.forFlat(FruitD f,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 467
                              Program Unit Metrics
===============================================================================

ch07.BHasFruitV.forSplit(TreeD l,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.BIsFlatV.forBud (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.BIsFlatV.forFlat(FruitD f,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.BIsFlatV.forSplit(TreeD l,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.BIsSplitV.forBud (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 468
                              Program Unit Metrics
===============================================================================

ch07.BIsSplitV.forFlat(FruitD f,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.BIsSplitV.forSplit(TreeD l,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.BTreeVisitorI.forBud (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.BTreeVisitorI.forFlat(FruitD f,TreeD t) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.BTreeVisitorI.forSplit(TreeD l,TreeD t) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 469
                              Program Unit Metrics
===============================================================================

ch07.Bud.accept(BTreeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.Bud.accept(ITreeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.Bud.accept(TTreeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch07.Fig.equals(Object o) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.Flat.accept(BTreeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 470
                              Program Unit Metrics
===============================================================================

ch07.Flat.accept(ITreeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.Flat.accept(TTreeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.Flat.Flat(FruitD _f,TreeD _t) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch07.IHeightV.forBud (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.IHeightV.forFlat(FruitD f,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 471
                              Program Unit Metrics
===============================================================================

ch07.IHeightV.forSplit(TreeD l,TreeD t) (Public Method)
   Lines:                   6
   Comment Lines:           2
   Blank Lines:             1
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch07.IOccursV.forBud (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.IOccursV.forFlat(FruitD f,TreeD t) (Public Method)
   Lines:                   10
   Comment Lines:           1
   Blank Lines:             1
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.13

ch07.IOccursV.forSplit(TreeD l,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.IOccursV.IOccursV(FruitD _a) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             1
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 472
                              Program Unit Metrics
===============================================================================

ch07.ITreeVisitorI.forBud (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.ITreeVisitorI.forFlat(FruitD f,TreeD t) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.ITreeVisitorI.forSplit(TreeD l,TreeD t) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.Lemon.equals(Object o) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.Peach.equals(Object o) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 473
                              Program Unit Metrics
===============================================================================

ch07.Pear.equals(Object o) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.Split.accept(BTreeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.Split.accept(ITreeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.Split.accept(TTreeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch07.Split.Split(TreeD _l,TreeD _t) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25
                                                                     Page 474
                              Program Unit Metrics
===============================================================================

ch07.TreeD.accept(BTreeVisitorI ask) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.TreeD.accept(ITreeVisitorI ask) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.TreeD.accept(TTreeVisitorI ask) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.TSubstsV.forBud (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.TSubstsV.forFlat(FruitD f,TreeD t) (Public Method)
   Lines:                   8
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14
                                                                     Page 475
                              Program Unit Metrics
===============================================================================

ch07.TSubstsV.forSplit(TreeD l,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch07.TSubstsV.TSubstsV(FruitD _n,FruitD _o) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch07.TTreeVisitorI.forBud (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.TTreeVisitorI.forFlat(FruitD f,TreeD t) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch07.TTreeVisitorI.forSplit(TreeD l,TreeD t) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 476
                              Program Unit Metrics
===============================================================================

ch071.Apple.equals(Object o) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch071.Bud.accept(TreeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.Fig.equals(Object o) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch071.Flat.accept(TreeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.Flat.Flat(FruitD _f,TreeD _t) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25
                                                                     Page 477
                              Program Unit Metrics
===============================================================================

ch071.HasFruitV.forBud (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.HasFruitV.forFlat(FruitD f,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.HasFruitV.forSplit(TreeD l,TreeD t) (Public Method)
   Lines:                   5
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch071.IHeightV.forBud (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.IHeightV.forFlat(FruitD f,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 478
                              Program Unit Metrics
===============================================================================

ch071.IHeightV.forSplit(TreeD l,TreeD t) (Public Method)
   Lines:                   6
   Comment Lines:           2
   Blank Lines:             1
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch071.IOccursV.forBud (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.IOccursV.forFlat(FruitD f,TreeD t) (Public Method)
   Lines:                   10
   Comment Lines:           1
   Blank Lines:             1
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.13

ch071.IOccursV.forSplit(TreeD l,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.IOccursV.IOccursV(FruitD _a) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             1
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 479
                              Program Unit Metrics
===============================================================================

ch071.IsFlatV.forBud (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.IsFlatV.forFlat(FruitD f,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.IsFlatV.forSplit(TreeD l,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.IsSplitV.forBud (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.IsSplitV.forFlat(FruitD f,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 480
                              Program Unit Metrics
===============================================================================

ch071.IsSplitV.forSplit(TreeD l,TreeD t) (Public Method)
   Lines:                   8
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14

ch071.Lemon.equals(Object o) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch071.Peach.equals(Object o) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch071.Pear.equals(Object o) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch071.Split.accept(TreeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 481
                              Program Unit Metrics
===============================================================================

ch071.Split.Split(TreeD _l,TreeD _t) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch071.TreeD.accept(TreeVisitorI ask) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch071.TreeVisitorI.forBud (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch071.TreeVisitorI.forFlat(FruitD f,TreeD t) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch071.TreeVisitorI.forSplit(TreeD l,TreeD t) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 482
                              Program Unit Metrics
===============================================================================

ch071.TSubstsV.forBud (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.TSubstsV.forFlat(FruitD f,TreeD t) (Public Method)
   Lines:                   8
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14

ch071.TSubstsV.forSplit(TreeD l,TreeD t) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch071.TSubstsV.TSubstsV(FruitD _n,FruitD _o) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch08.Add.Add(Integer _i,SetD _s) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25
                                                                     Page 483
                              Program Unit Metrics
===============================================================================

ch08.Add.diff(SetD t) (Method)
   Lines:                   8
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14

ch08.Add.mem(Integer n) (Method)
   Lines:                   8
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14

ch08.Add.plus(SetD t) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch08.Add.prod(SetD t) (Method)
   Lines:                   8
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14

ch08.Const.accpet(ExprVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 484
                              Program Unit Metrics
===============================================================================

ch08.Const.Const(Object _c) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch08.Diff.accpet(ExprVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch08.Diff.Diff(ExprD _l,ExprD _r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch08.Empty.diff(SetD s) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch08.Empty.mem(Integer i) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 485
                              Program Unit Metrics
===============================================================================

ch08.Empty.plus(SetD s) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch08.Empty.prod(SetD s) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch08.ExprD.accpet(ExprVisitorI ask) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch08.ExprVisitorI.forConst(Object c) (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch08.ExprVisitorI.forDiff(ExprD l,ExprD r) (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00
                                                                     Page 486
                              Program Unit Metrics
===============================================================================

ch08.ExprVisitorI.forPlus(ExprD l,ExprD r) (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch08.ExprVisitorI.forProd(ExprD l,ExprD r) (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch08.IntEvalV.diff(Object l,Object r) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch08.IntEvalV.forConst(Object c) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch08.IntEvalV.forDiff(ExprD l,ExprD r) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 487
                              Program Unit Metrics
===============================================================================

ch08.IntEvalV.forPlus(ExprD l,ExprD r) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch08.IntEvalV.forProd(ExprD l,ExprD r) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch08.IntEvalV.plus(Object l,Object r) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch08.IntEvalV.prod(Object l,Object r) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch08.Plus.accpet(ExprVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 488
                              Program Unit Metrics
===============================================================================

ch08.Plus.Plus(ExprD _l,ExprD _r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch08.Prod.accpet(ExprVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch08.Prod.Prod(ExprD _l,ExprD _r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch08.SetD.add(Integer i) (Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch08.SetD.diff(SetD s) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 489
                              Program Unit Metrics
===============================================================================

ch08.SetD.mem(Integer i) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch08.SetD.plus(SetD s) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch08.SetD.prod(SetD s) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch08.SetEvalV.diff(Object l,Object r) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch08.SetEvalV.plus(Object l,Object r) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 490
                              Program Unit Metrics
===============================================================================

ch08.SetEvalV.prod(Object l,Object r) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch0801That.Bot.accept(PieVistor1 ask) (Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch0801That.Bot.toString (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch0801That.LtSubstV.forBot(Bot that) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch0801That.LtSubstV.forTop(Top that) (Public Method)
   Lines:                   13
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              12
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  1
   Execution Statements:    5
   Declaration Statements:  1
   Ratio Comment/Code:      0.08
                                                                     Page 491
                              Program Unit Metrics
===============================================================================

ch0801That.LtSubstV.LtSubstV(int _c,Object _n,Object _o) (Public Constructor)
   Lines:                   6
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.20

ch0801That.PieDUpdate.accept(PieVistor1 ask) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch0801That.PieVistor1.forBot(Bot that) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch0801That.PieVistor1.forTop(Top that) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch0801That.RemV.forBot(Bot that) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 492
                              Program Unit Metrics
===============================================================================

ch0801That.RemV.forTop(Top that) (Public Method)
   Lines:                   7
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.29

ch0801That.RemV.RemV(Object _o) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch0801That.SubstV.forBot(Bot that) (Public Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch0801That.SubstV.forTop(Top that) (Public Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch0801That.SubstV.SubstV(Object _n,Object _o) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25
                                                                     Page 493
                              Program Unit Metrics
===============================================================================

ch0801That.TestThat.main(String[] args) (Public Static Method)
   Lines:                   12
   Comment Lines:           0
   Blank Lines:             2
   Code Lines:              10
   Inactive Lines:          0
   Executable Code Lines:   8
   Declarative Code Lines:  1
   Execution Statements:    5
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch0801That.Top.accept(PieVistor1 ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch0801That.Top.Top(Object t,PieDUpdate r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch0801That.Top.toString (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.Add.Add(Integer _i,SetD _s) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25
                                                                     Page 494
                              Program Unit Metrics
===============================================================================

ch081.Add.diff(SetD t) (Method)
   Lines:                   8
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14

ch081.Add.mem(Integer n) (Method)
   Lines:                   8
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14

ch081.Add.plus(SetD t) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.Add.prod(SetD t) (Method)
   Lines:                   8
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14

ch081.Bot.accept(PieVistor1 ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 495
                              Program Unit Metrics
===============================================================================

ch081.Bot.toString (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.Const.accpet(ExprVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.Const.Const(Object _c) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.Diff.accpet(ExprVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.Diff.Diff(ExprD _l,ExprD _r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25
                                                                     Page 496
                              Program Unit Metrics
===============================================================================

ch081.Empty.diff(SetD s) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.Empty.mem(Integer i) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.Empty.plus(SetD s) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.Empty.prod(SetD s) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.EvalV.diff(Object l,Object r) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 497
                              Program Unit Metrics
===============================================================================

ch081.EvalV.forConst(Object c) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.EvalV.forDiff(ExprD l,ExprD r) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.EvalV.forPlus(ExprD l,ExprD r) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.EvalV.forProd(ExprD l,ExprD r) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.EvalV.plus(Object l,Object r) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 498
                              Program Unit Metrics
===============================================================================

ch081.EvalV.prod(Object l,Object r) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.ExprD.accpet(ExprVisitorI ask) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.ExprVisitorI.forConst(Object c) (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch081.ExprVisitorI.forDiff(ExprD l,ExprD r) (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch081.ExprVisitorI.forPlus(ExprD l,ExprD r) (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00
                                                                     Page 499
                              Program Unit Metrics
===============================================================================

ch081.ExprVisitorI.forProd(ExprD l,ExprD r) (Abstract Method)
   Lines:                   1
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      1.00

ch081.IntEvalV.diff(Object l,Object r) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.IntEvalV.plus(Object l,Object r) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.IntEvalV.prod(Object l,Object r) (Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.LtSubstV.forBot (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 500
                              Program Unit Metrics
===============================================================================

ch081.LtSubstV.forTop(Object t,PieD r) (Public Method)
   Lines:                   13
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              12
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  1
   Execution Statements:    5
   Declaration Statements:  1
   Ratio Comment/Code:      0.08

ch081.LtSubstV.LtSubstV(int _c,Object _n,Object _o) (Public Constructor)
   Lines:                   6
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.20

ch081.LtSubstV1.forTop(Object t,PieD r) (Public Method)
   Lines:                   13
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              12
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  1
   Execution Statements:    5
   Declaration Statements:  1
   Ratio Comment/Code:      0.08

ch081.LtSubstV1.LtSubstV1(int c,Object _n,Object _o) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch081.LtSubstV2.forTop(Object t,PieD r) (Public Method)
   Lines:                   13
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              12
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  1
   Execution Statements:    5
   Declaration Statements:  1
   Ratio Comment/Code:      0.08
                                                                     Page 501
                              Program Unit Metrics
===============================================================================

ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch081.PieD.accept(PieVistor1 ask) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.PieVistor1.forBot (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.PieVistor1.forTop(Object t,PieD r) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.Plus.accpet(ExprVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 502
                              Program Unit Metrics
===============================================================================

ch081.Plus.Plus(ExprD _l,ExprD _r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch081.Prod.accpet(ExprVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.Prod.Prod(ExprD _l,ExprD _r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch081.RemV.forBot (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.RemV.forTop(Object t,PieD r) (Public Method)
   Lines:                   7
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.29
                                                                     Page 503
                              Program Unit Metrics
===============================================================================

ch081.RemV.RemV(Object _o) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.SetD.add(Integer i) (Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.SetD.diff(SetD s) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.SetD.mem(Integer i) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.SetD.plus(SetD s) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 504
                              Program Unit Metrics
===============================================================================

ch081.SetD.prod(SetD s) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.SetEvalV.diff(Object l,Object r) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.SetEvalV.plus(Object l,Object r) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.SetEvalV.prod(Object l,Object r) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.SubstD.forBot (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 505
                              Program Unit Metrics
===============================================================================

ch081.SubstD.forTop(Object t,PieD r) (Public Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.SubstD.SubstD(Object _n,Object _o) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch081.SubstV.forBot (Public Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.SubstV.forTop(Object t,PieD r) (Public Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.SubstV.SubstV(Object _n,Object _o) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25
                                                                     Page 506
                              Program Unit Metrics
===============================================================================

ch081.SubstV1.forTop(Object t,PieD r) (Public Method)
   Lines:                   9
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.13

ch081.SubstV1.SubstV1(Object _n,Object _o) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.SubstVExt.forBot (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.SubstVExt.forTop(Object t,PieD r) (Public Method)
   Lines:                   6
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.SubstVExt.SubstVExt(Object _n,Object _o) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25
                                                                     Page 507
                              Program Unit Metrics
===============================================================================

ch081.TestPieD.main(String[] args) (Public Static Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch081.Top.accept(PieVistor1 ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch081.Top.Top(Object t,PieD r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch081.Top.toString (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch09.CartesianPt2.CartesianPt2(int _x,int _y) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 508
                              Program Unit Metrics
===============================================================================

ch09.CartesianPt2.distanceTo0 (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch09.Circle.accept(ShapeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch09.Circle.Circle(int _r) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch09.HasPtV.forCircle(int r) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch09.HasPtV.forSquare(int s) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 509
                              Program Unit Metrics
===============================================================================

ch09.HasPtV.forTrans(PointDCloserSimplify q,ShapeD s) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch09.HasPtV.HasPtV(PointDCloserSimplify _p) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch09.ManHattanPt2.closerTo0(CartesianPt2 p1) (Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch09.ManHattanPt2.distanceTo0 (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch09.ManHattanPt2.ManHattanPt2(int _x,int _y) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 510
                              Program Unit Metrics
===============================================================================

ch09.PointDCloserSimplify.closerTo0(CartesianPt2 p1) (Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch09.PointDCloserSimplify.distanceTo0 (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch09.PointDCloserSimplify.minus(PointDCloserSimplify p) (Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch09.PointDCloserSimplify.PointDCloserSimplify(int _x,int _y) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch09.ShadowCartesian.distanceTo0 (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 511
                              Program Unit Metrics
===============================================================================

ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty) (Public Constructor)
   Lines:                   7
   Comment Lines:           1
   Blank Lines:             1
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.20

ch09.ShapeD.accept(ShapeVisitorI ask) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch09.ShapeVisitorI.forCircle(int r) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch09.ShapeVisitorI.forSquare(int s) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch09.ShapeVisitorI.forTrans(PointDCloserSimplify q,ShapeD s) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 512
                              Program Unit Metrics
===============================================================================

ch09.Square.accept(ShapeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch09.Square.Square(int _s) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch09.Test.main(String[] args) (Public Static Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  2
   Ratio Comment/Code:      0.00

ch09.Trans.accept(ShapeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch09.Trans.Trans(PointDCloserSimplify _q,ShapeD _s) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25
                                                                     Page 513
                              Program Unit Metrics
===============================================================================

ch09.Union.accept(ShapeVisitorI ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch09.Union.Union(ShapeD _s,ShapeD _t) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch09.UnionHasPtV.forUnion(ShapeD s,ShapeD t) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch09.UnionHasPtV.UnionHasPtV(CartesianPt2 _p) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch09.UnionVisitorI.forUnion(ShapeD s,ShapeD t) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 514
                              Program Unit Metrics
===============================================================================

ch10.AnchovyFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch10.AnchovyFish.toString (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch10.Bot.accept(PieVistor1 ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch10.FishD.equals(Object o) (Public Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch10.LtSubstV.forBot (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33
                                                                     Page 515
                              Program Unit Metrics
===============================================================================

ch10.LtSubstV.forTop(Object t,PieD r) (Public Method)
   Lines:                   13
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              12
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  1
   Execution Statements:    5
   Declaration Statements:  1
   Ratio Comment/Code:      0.08

ch10.LtSubstV.LtSubstV(int _c,Object _n,Object _o) (Public Constructor)
   Lines:                   6
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              5
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.20

ch10.Mian.main(String[] args) (Public Static Method)
   Lines:                   8
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  2
   Execution Statements:    1
   Declaration Statements:  2
   Ratio Comment/Code:      0.14

ch10.OccursV.forBot (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch10.OccursV.forTop(Object t,PieD r) (Public Method)
   Lines:                   8
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.14
                                                                     Page 516
                              Program Unit Metrics
===============================================================================

ch10.OccursV.OccursV(Object _a) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch10.PieD.accept(PieVistor1 ask) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch10.PiemanI.addTop(Object t) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch10.PiemanI.occTop(Object o) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch10.PiemanI.remTop(Object t) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 517
                              Program Unit Metrics
===============================================================================

ch10.PiemanI.substTop(Object n,Object o) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch10.PiemanM.addTop(Object t) (Public Method)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch10.PiemanM.occTop(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch10.PiemanM.PiemanM(PieD _p) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch10.PiemanM.remTop(Object t) (Public Method)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25
                                                                     Page 518
                              Program Unit Metrics
===============================================================================

ch10.PiemanM.substTop(Object n,Object o) (Public Method)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch10.PiemanM.toString (Public Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch10.PieVistor1.forBot (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch10.PieVistor1.forTop(Object t,PieD r) (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch10.RemV.forBot (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 519
                              Program Unit Metrics
===============================================================================

ch10.RemV.forTop(Object t,PieD r) (Public Method)
   Lines:                   7
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.29

ch10.RemV.RemV(Object _o) (Public Constructor)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch10.SalmonFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

ch10.SubstV.forBot (Public Method)
   Lines:                   4
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ch10.SubstV.forTop(Object t,PieD r) (Public Method)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 520
                              Program Unit Metrics
===============================================================================

ch10.SubstV.SubstV(Object _n,Object _o) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch10.Top.accept(PieVistor1 ask) (Method)
   Lines:                   4
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.33

ch10.Top.Top(Object t,PieD r) (Public Constructor)
   Lines:                   5
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  1
   Ratio Comment/Code:      0.25

ch10.TunaFish.equals(Object o) (Public Method)
   Lines:                   4
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.67

java.lang.Object.getClass (Unresolved Method)
   Lines:                   0
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              0
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  0
   Execution Statements:    0
   Declaration Statements:  0
   Ratio Comment/Code:      0.00
                                                                     Page 521
                              Program Unit Metrics
===============================================================================

receive(String result) (Public Abstract Method)
   Lines:                   5
   Comment Lines:           4
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      4.00

receive(String result) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ReCall.Stranger.askQuestion(String question) (Public Method)
   Lines:                   18
   Comment Lines:           8
   Blank Lines:             1
   Code Lines:              9
   Inactive Lines:          0
   Executable Code Lines:   6
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  2
   Ratio Comment/Code:      0.89

ReCall.Stranger.askQuestion.(Anon_1).run (Public Method)
   Lines:                   8
   Comment Lines:           5
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  0
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      1.67

ReCall.Stranger.play (Private Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 522
                              Program Unit Metrics
===============================================================================

ReCall.Stranger.Stranger(Ye ye) (Public Constructor)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ReCall.Test.main(String[] args) (Public Static Method)
   Lines:                   14
   Comment Lines:           5
   Blank Lines:             2
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  4
   Execution Statements:    2
   Declaration Statements:  4
   Ratio Comment/Code:      0.71

receive(String result) (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ReCall.Wang.askQuestion(String question) (Public Method)
   Lines:                   22
   Comment Lines:           12
   Blank Lines:             1
   Code Lines:              9
   Inactive Lines:          0
   Executable Code Lines:   6
   Declarative Code Lines:  1
   Execution Statements:    3
   Declaration Statements:  2
   Ratio Comment/Code:      1.33

ReCall.Wang.askQuestion.(Anon_1).run (Public Method)
   Lines:                   8
   Comment Lines:           5
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  0
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      1.67
                                                                     Page 523
                              Program Unit Metrics
===============================================================================

ReCall.Wang.play (Private Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

ReCall.Wang.Wang(Ye ye) (Public Constructor)
   Lines:                   7
   Comment Lines:           4
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      1.33

accept(Callback callback,String question) (Public Method)
   Lines:                   40
   Comment Lines:           18
   Blank Lines:             6
   Code Lines:              16
   Inactive Lines:          0
   Executable Code Lines:   11
   Declarative Code Lines:  2
   Execution Statements:    11
   Declaration Statements:  4
   Ratio Comment/Code:      1.13

YeRestaurant.Cai.Apple.getFoodName (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

YeRestaurant.Cai.Banana.getFoodName (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 524
                              Program Unit Metrics
===============================================================================

YeRestaurant.Cai.HongShaoRou.getFoodName (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

YeRestaurant.Cai.QingJiaoRouSi.getFoodName (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

YeRestaurant.Cai.SuanTaiChaoRou.getFoodName (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

YeRestaurant.Cai.TangCuLiYu.getFoodName (Public Method)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  1
   Execution Statements:    1
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

YeRestaurant.Food.getFoodName (Abstract Method)
   Lines:                   1
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              1
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 525
                              Program Unit Metrics
===============================================================================

YeRestaurant.Restaurant.init (Public Method)
   Lines:                   47
   Comment Lines:           12
   Blank Lines:             3
   Code Lines:              32
   Inactive Lines:          0
   Executable Code Lines:   18
   Declarative Code Lines:  6
   Execution Statements:    10
   Declaration Statements:  7
   Ratio Comment/Code:      0.38

YeRestaurant.Restaurant.main(String[] args) (Public Static Method)
   Lines:                   10
   Comment Lines:           2
   Blank Lines:             0
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  2
   Execution Statements:    4
   Declaration Statements:  2
   Ratio Comment/Code:      0.25

YeRestaurant.Restaurant.Restaurant (Public Constructor)
   Lines:                   3
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              3
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  1
   Execution Statements:    0
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

YeRestaurant.Restaurant.showFoods (Public Method)
   Lines:                   8
   Comment Lines:           1
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  1
   Execution Statements:    2
   Declaration Statements:  2
   Ratio Comment/Code:      0.14
                                                                     Page 526
                                  File Metrics
===============================================================================

Apple.java
   Lines:                   10
   Comment Lines:           0
   Blank Lines:             2
   Preprocessor Lines:      0
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  5
   Execution Statements:    1
   Declaration Statements:  4
   Ratio Comment/Code:      0.00
   Units                    1

Banana.java
   Lines:                   10
   Comment Lines:           0
   Blank Lines:             2
   Preprocessor Lines:      0
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  5
   Execution Statements:    1
   Declaration Statements:  4
   Ratio Comment/Code:      0.00
   Units                    1

Callback.java
   Lines:                   9
   Comment Lines:           4
   Blank Lines:             1
   Preprocessor Lines:      0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  3
   Execution Statements:    0
   Declaration Statements:  3
   Ratio Comment/Code:      1.00
   Units                    1

ExprD.java
   Lines:                   120
   Comment Lines:           17
   Blank Lines:             20
   Preprocessor Lines:      0
   Code Lines:              88
   Inactive Lines:          0
   Executable Code Lines:   18
   Declarative Code Lines:  47
   Execution Statements:    18
   Declaration Statements:  39
   Ratio Comment/Code:      0.19
   Units                    23
                                                                     Page 527
                                  File Metrics
===============================================================================

ExprD.java
   Lines:                   114
   Comment Lines:           17
   Blank Lines:             19
   Preprocessor Lines:      0
   Code Lines:              83
   Inactive Lines:          0
   Executable Code Lines:   18
   Declarative Code Lines:  43
   Execution Statements:    18
   Declaration Statements:  35
   Ratio Comment/Code:      0.20
   Units                    20

Food.java
   Lines:                   5
   Comment Lines:           0
   Blank Lines:             1
   Preprocessor Lines:      0
   Code Lines:              4
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  3
   Execution Statements:    0
   Declaration Statements:  3
   Ratio Comment/Code:      0.00
   Units                    1

FruitD.java
   Lines:                   34
   Comment Lines:           6
   Blank Lines:             7
   Preprocessor Lines:      0
   Code Lines:              27
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  12
   Execution Statements:    5
   Declaration Statements:  12
   Ratio Comment/Code:      0.22
   Units                    5

FruitD.java
   Lines:                   34
   Comment Lines:           6
   Blank Lines:             7
   Preprocessor Lines:      0
   Code Lines:              27
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  12
   Execution Statements:    5
   Declaration Statements:  12
   Ratio Comment/Code:      0.22
   Units                    5
                                                                     Page 528
                                  File Metrics
===============================================================================

HongShaoRou.java
   Lines:                   10
   Comment Lines:           0
   Blank Lines:             2
   Preprocessor Lines:      0
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  5
   Execution Statements:    1
   Declaration Statements:  4
   Ratio Comment/Code:      0.00
   Units                    1

KaoRou.java
   Lines:                   135
   Comment Lines:           35
   Blank Lines:             22
   Preprocessor Lines:      0
   Code Lines:              87
   Inactive Lines:          0
   Executable Code Lines:   19
   Declarative Code Lines:  54
   Execution Statements:    19
   Declaration Statements:  35
   Ratio Comment/Code:      0.40
   Units                    21

KaoRouChuan.java
   Lines:                   23
   Comment Lines:           8
   Blank Lines:             10
   Preprocessor Lines:      0
   Code Lines:              9
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  5
   Execution Statements:    0
   Declaration Statements:  5
   Ratio Comment/Code:      0.89
   Units                    0

KaoRouPlates.java
   Lines:                   30
   Comment Lines:           10
   Blank Lines:             13
   Preprocessor Lines:      0
   Code Lines:              13
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  7
   Execution Statements:    0
   Declaration Statements:  7
   Ratio Comment/Code:      0.77
   Units                    0
                                                                     Page 529
                                  File Metrics
===============================================================================

LayerD.java
   Lines:                   33
   Comment Lines:           9
   Blank Lines:             9
   Preprocessor Lines:      0
   Code Lines:              15
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  8
   Execution Statements:    2
   Declaration Statements:  8
   Ratio Comment/Code:      0.60
   Units                    2

Main.java
   Lines:                   12
   Comment Lines:           0
   Blank Lines:             1
   Preprocessor Lines:      0
   Code Lines:              11
   Inactive Lines:          0
   Executable Code Lines:   6
   Declarative Code Lines:  5
   Execution Statements:    4
   Declaration Statements:  5
   Ratio Comment/Code:      0.00
   Units                    1

Mian.java
   Lines:                   12
   Comment Lines:           1
   Blank Lines:             1
   Preprocessor Lines:      0
   Code Lines:              10
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  4
   Execution Statements:    1
   Declaration Statements:  4
   Ratio Comment/Code:      0.10
   Units                    1

NumD.java
   Lines:                   51
   Comment Lines:           19
   Blank Lines:             21
   Preprocessor Lines:      0
   Code Lines:              11
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  6
   Execution Statements:    1
   Declaration Statements:  6
   Ratio Comment/Code:      1.73
   Units                    1
                                                                     Page 530
                                  File Metrics
===============================================================================

NumD.java
   Lines:                   51
   Comment Lines:           19
   Blank Lines:             21
   Preprocessor Lines:      0
   Code Lines:              11
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  6
   Execution Statements:    1
   Declaration Statements:  6
   Ratio Comment/Code:      1.73
   Units                    1

NumD.java
   Lines:                   60
   Comment Lines:           19
   Blank Lines:             20
   Preprocessor Lines:      0
   Code Lines:              21
   Inactive Lines:          0
   Executable Code Lines:   6
   Declarative Code Lines:  8
   Execution Statements:    5
   Declaration Statements:  8
   Ratio Comment/Code:      0.90
   Units                    3

PieD.java
   Lines:                   180
   Comment Lines:           76
   Blank Lines:             33
   Preprocessor Lines:      0
   Code Lines:              77
   Inactive Lines:          0
   Executable Code Lines:   19
   Declarative Code Lines:  35
   Execution Statements:    17
   Declaration Statements:  27
   Ratio Comment/Code:      0.99
   Units                    15

PieD.java
   Lines:                   126
   Comment Lines:           18
   Blank Lines:             18
   Preprocessor Lines:      0
   Code Lines:              94
   Inactive Lines:          0
   Executable Code Lines:   30
   Declarative Code Lines:  37
   Execution Statements:    26
   Declaration Statements:  33
   Ratio Comment/Code:      0.19
   Units                    17
                                                                     Page 531
                                  File Metrics
===============================================================================

PieD.java
   Lines:                   138
   Comment Lines:           23
   Blank Lines:             28
   Preprocessor Lines:      0
   Code Lines:              93
   Inactive Lines:          0
   Executable Code Lines:   24
   Declarative Code Lines:  43
   Execution Statements:    22
   Declaration Statements:  35
   Ratio Comment/Code:      0.25
   Units                    18

PieD.java
   Lines:                   118
   Comment Lines:           20
   Blank Lines:             27
   Preprocessor Lines:      0
   Code Lines:              78
   Inactive Lines:          0
   Executable Code Lines:   21
   Declarative Code Lines:  37
   Execution Statements:    17
   Declaration Statements:  29
   Ratio Comment/Code:      0.26
   Units                    15

PieD.java
   Lines:                   121
   Comment Lines:           18
   Blank Lines:             19
   Preprocessor Lines:      0
   Code Lines:              88
   Inactive Lines:          0
   Executable Code Lines:   28
   Declarative Code Lines:  35
   Execution Statements:    24
   Declaration Statements:  31
   Ratio Comment/Code:      0.20
   Units                    15

PieD.java
   Lines:                   162
   Comment Lines:           26
   Blank Lines:             30
   Preprocessor Lines:      0
   Code Lines:              113
   Inactive Lines:          0
   Executable Code Lines:   32
   Declarative Code Lines:  49
   Execution Statements:    28
   Declaration Statements:  40
   Ratio Comment/Code:      0.23
   Units                    20
                                                                     Page 532
                                  File Metrics
===============================================================================

PieD.java
   Lines:                   180
   Comment Lines:           23
   Blank Lines:             34
   Preprocessor Lines:      0
   Code Lines:              129
   Inactive Lines:          0
   Executable Code Lines:   41
   Declarative Code Lines:  49
   Execution Statements:    33
   Declaration Statements:  41
   Ratio Comment/Code:      0.18
   Units                    23

PieDGeneral.java
   Lines:                   85
   Comment Lines:           13
   Blank Lines:             16
   Preprocessor Lines:      0
   Code Lines:              59
   Inactive Lines:          0
   Executable Code Lines:   20
   Declarative Code Lines:  22
   Execution Statements:    16
   Declaration Statements:  20
   Ratio Comment/Code:      0.22
   Units                    10

PieDUpdate.java
   Lines:                   122
   Comment Lines:           20
   Blank Lines:             13
   Preprocessor Lines:      0
   Code Lines:              94
   Inactive Lines:          0
   Executable Code Lines:   30
   Declarative Code Lines:  37
   Execution Statements:    26
   Declaration Statements:  33
   Ratio Comment/Code:      0.21
   Units                    17

PiemanM.java
   Lines:                   76
   Comment Lines:           9
   Blank Lines:             13
   Preprocessor Lines:      0
   Code Lines:              54
   Inactive Lines:          0
   Executable Code Lines:   16
   Declarative Code Lines:  26
   Execution Statements:    14
   Declaration Statements:  19
   Ratio Comment/Code:      0.17
   Units                    13
                                                                     Page 533
                                  File Metrics
===============================================================================

PizzaD.java
   Lines:                   196
   Comment Lines:           50
   Blank Lines:             47
   Preprocessor Lines:      0
   Code Lines:              110
   Inactive Lines:          0
   Executable Code Lines:   23
   Declarative Code Lines:  57
   Execution Statements:    23
   Declaration Statements:  39
   Ratio Comment/Code:      0.45
   Units                    26

PointD.java
   Lines:                   38
   Comment Lines:           6
   Blank Lines:             9
   Preprocessor Lines:      0
   Code Lines:              23
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  12
   Execution Statements:    5
   Declaration Statements:  11
   Ratio Comment/Code:      0.26
   Units                    3

PointD.java
   Lines:                   56
   Comment Lines:           13
   Blank Lines:             7
   Preprocessor Lines:      0
   Code Lines:              36
   Inactive Lines:          0
   Executable Code Lines:   8
   Declarative Code Lines:  19
   Execution Statements:    8
   Declaration Statements:  15
   Ratio Comment/Code:      0.36
   Units                    7

PointDCloser.java
   Lines:                   57
   Comment Lines:           10
   Blank Lines:             11
   Preprocessor Lines:      0
   Code Lines:              36
   Inactive Lines:          0
   Executable Code Lines:   8
   Declarative Code Lines:  17
   Execution Statements:    8
   Declaration Statements:  15
   Ratio Comment/Code:      0.28
   Units                    7
                                                                     Page 534
                                  File Metrics
===============================================================================

PointDCloserSimplify.java
   Lines:                   60
   Comment Lines:           11
   Blank Lines:             12
   Preprocessor Lines:      0
   Code Lines:              37
   Inactive Lines:          0
   Executable Code Lines:   8
   Declarative Code Lines:  18
   Execution Statements:    8
   Declaration Statements:  16
   Ratio Comment/Code:      0.30
   Units                    7

PointDCloserSimplify.java
   Lines:                   79
   Comment Lines:           23
   Blank Lines:             12
   Preprocessor Lines:      0
   Code Lines:              44
   Inactive Lines:          0
   Executable Code Lines:   9
   Declarative Code Lines:  21
   Execution Statements:    9
   Declaration Statements:  19
   Ratio Comment/Code:      0.52
   Units                    9

QingJiaoRouSi.java
   Lines:                   10
   Comment Lines:           0
   Blank Lines:             2
   Preprocessor Lines:      0
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  5
   Execution Statements:    1
   Declaration Statements:  4
   Ratio Comment/Code:      0.00
   Units                    1

Restaurant.java
   Lines:                   110
   Comment Lines:           36
   Blank Lines:             15
   Preprocessor Lines:      0
   Code Lines:              59
   Inactive Lines:          0
   Executable Code Lines:   26
   Declarative Code Lines:  18
   Execution Statements:    16
   Declaration Statements:  20
   Ratio Comment/Code:      0.61
   Units                    4
                                                                     Page 535
                                  File Metrics
===============================================================================

Seasoning.java
   Lines:                   16
   Comment Lines:           8
   Blank Lines:             5
   Preprocessor Lines:      0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  6
   Execution Statements:    0
   Declaration Statements:  6
   Ratio Comment/Code:      1.14
   Units                    0

SetD.java
   Lines:                   112
   Comment Lines:           12
   Blank Lines:             18
   Preprocessor Lines:      0
   Code Lines:              82
   Inactive Lines:          0
   Executable Code Lines:   26
   Declarative Code Lines:  35
   Execution Statements:    22
   Declaration Statements:  24
   Ratio Comment/Code:      0.15
   Units                    17

SetD.java
   Lines:                   113
   Comment Lines:           13
   Blank Lines:             18
   Preprocessor Lines:      0
   Code Lines:              82
   Inactive Lines:          0
   Executable Code Lines:   26
   Declarative Code Lines:  35
   Execution Statements:    22
   Declaration Statements:  24
   Ratio Comment/Code:      0.16
   Units                    17

ShadowCartesian.java
   Lines:                   26
   Comment Lines:           5
   Blank Lines:             7
   Preprocessor Lines:      0
   Code Lines:              14
   Inactive Lines:          0
   Executable Code Lines:   4
   Declarative Code Lines:  7
   Execution Statements:    4
   Declaration Statements:  6
   Ratio Comment/Code:      0.36
   Units                    2
                                                                     Page 536
                                  File Metrics
===============================================================================

ShapeD.java
   Lines:                   83
   Comment Lines:           13
   Blank Lines:             14
   Preprocessor Lines:      0
   Code Lines:              59
   Inactive Lines:          0
   Executable Code Lines:   11
   Declarative Code Lines:  32
   Execution Statements:    11
   Declaration Statements:  26
   Ratio Comment/Code:      0.22
   Units                    14

Stranger.java
   Lines:                   37
   Comment Lines:           8
   Blank Lines:             6
   Preprocessor Lines:      0
   Code Lines:              23
   Inactive Lines:          0
   Executable Code Lines:   9
   Declarative Code Lines:  8
   Execution Statements:    6
   Declaration Statements:  8
   Ratio Comment/Code:      0.35
   Units                    5

SuanTaiChaoRou.java
   Lines:                   10
   Comment Lines:           0
   Blank Lines:             2
   Preprocessor Lines:      0
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  5
   Execution Statements:    1
   Declaration Statements:  4
   Ratio Comment/Code:      0.00
   Units                    1

SubstD.java
   Lines:                   63
   Comment Lines:           7
   Blank Lines:             8
   Preprocessor Lines:      0
   Code Lines:              48
   Inactive Lines:          0
   Executable Code Lines:   17
   Declarative Code Lines:  17
   Execution Statements:    14
   Declaration Statements:  14
   Ratio Comment/Code:      0.15
   Units                    7
                                                                     Page 537
                                  File Metrics
===============================================================================

SubstVExt.java
   Lines:                   51
   Comment Lines:           5
   Blank Lines:             6
   Preprocessor Lines:      0
   Code Lines:              40
   Inactive Lines:          0
   Executable Code Lines:   16
   Declarative Code Lines:  14
   Execution Statements:    13
   Declaration Statements:  11
   Ratio Comment/Code:      0.13
   Units                    5

TangCuLiYu.java
   Lines:                   10
   Comment Lines:           0
   Blank Lines:             2
   Preprocessor Lines:      0
   Code Lines:              8
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  5
   Execution Statements:    1
   Declaration Statements:  4
   Ratio Comment/Code:      0.00
   Units                    1

Test.java
   Lines:                   13
   Comment Lines:           0
   Blank Lines:             3
   Preprocessor Lines:      0
   Code Lines:              10
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  6
   Execution Statements:    2
   Declaration Statements:  6
   Ratio Comment/Code:      0.00
   Units                    1

Test.java
   Lines:                   18
   Comment Lines:           5
   Blank Lines:             3
   Preprocessor Lines:      0
   Code Lines:              10
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  6
   Execution Statements:    2
   Declaration Statements:  6
   Ratio Comment/Code:      0.50
   Units                    1
                                                                     Page 538
                                  File Metrics
===============================================================================

Test.java
   Lines:                   9
   Comment Lines:           0
   Blank Lines:             2
   Preprocessor Lines:      0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  4
   Execution Statements:    1
   Declaration Statements:  4
   Ratio Comment/Code:      0.00
   Units                    1

Test.java
   Lines:                   9
   Comment Lines:           0
   Blank Lines:             2
   Preprocessor Lines:      0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  4
   Execution Statements:    1
   Declaration Statements:  4
   Ratio Comment/Code:      0.00
   Units                    1

TestMain.java
   Lines:                   8
   Comment Lines:           0
   Blank Lines:             1
   Preprocessor Lines:      0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   2
   Declarative Code Lines:  4
   Execution Statements:    1
   Declaration Statements:  4
   Ratio Comment/Code:      0.00
   Units                    1

TestPieD.java
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             1
   Preprocessor Lines:      0
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   1
   Declarative Code Lines:  3
   Execution Statements:    1
   Declaration Statements:  3
   Ratio Comment/Code:      0.00
   Units                    1
                                                                     Page 539
                                  File Metrics
===============================================================================

TestThat.java
   Lines:                   16
   Comment Lines:           0
   Blank Lines:             3
   Preprocessor Lines:      0
   Code Lines:              13
   Inactive Lines:          0
   Executable Code Lines:   8
   Declarative Code Lines:  3
   Execution Statements:    5
   Declaration Statements:  3
   Ratio Comment/Code:      0.00
   Units                    1

TestTYangRouChuan.java
   Lines:                   20
   Comment Lines:           2
   Blank Lines:             6
   Preprocessor Lines:      0
   Code Lines:              12
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  3
   Execution Statements:    7
   Declaration Statements:  3
   Ratio Comment/Code:      0.17
   Units                    1

TreeD.java
   Lines:                   234
   Comment Lines:           31
   Blank Lines:             59
   Preprocessor Lines:      0
   Code Lines:              146
   Inactive Lines:          0
   Executable Code Lines:   37
   Declarative Code Lines:  69
   Execution Statements:    34
   Declaration Statements:  48
   Ratio Comment/Code:      0.21
   Units                    29

TreeD.java
   Lines:                   272
   Comment Lines:           37
   Blank Lines:             61
   Preprocessor Lines:      0
   Code Lines:              178
   Inactive Lines:          0
   Executable Code Lines:   40
   Declarative Code Lines:  91
   Execution Statements:    38
   Declaration Statements:  64
   Ratio Comment/Code:      0.21
   Units                    43
                                                                     Page 540
                                  File Metrics
===============================================================================

Union.java
   Lines:                   33
   Comment Lines:           3
   Blank Lines:             6
   Preprocessor Lines:      0
   Code Lines:              24
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  12
   Execution Statements:    5
   Declaration Statements:  11
   Ratio Comment/Code:      0.13
   Units                    5

Wang.java
   Lines:                   48
   Comment Lines:           19
   Blank Lines:             6
   Preprocessor Lines:      0
   Code Lines:              23
   Inactive Lines:          0
   Executable Code Lines:   9
   Declarative Code Lines:  8
   Execution Statements:    6
   Declaration Statements:  8
   Ratio Comment/Code:      0.83
   Units                    5

YangRouChuan.java
   Lines:                   130
   Comment Lines:           27
   Blank Lines:             24
   Preprocessor Lines:      0
   Code Lines:              87
   Inactive Lines:          0
   Executable Code Lines:   21
   Declarative Code Lines:  42
   Execution Statements:    19
   Declaration Statements:  34
   Ratio Comment/Code:      0.31
   Units                    21

YangRouChuan.java
   Lines:                   115
   Comment Lines:           28
   Blank Lines:             22
   Preprocessor Lines:      0
   Code Lines:              72
   Inactive Lines:          0
   Executable Code Lines:   15
   Declarative Code Lines:  37
   Execution Statements:    15
   Declaration Statements:  26
   Ratio Comment/Code:      0.39
   Units                    17
                                                                     Page 541
                                  File Metrics
===============================================================================

Ye.java
   Lines:                   45
   Comment Lines:           18
   Blank Lines:             8
   Preprocessor Lines:      0
   Code Lines:              19
   Inactive Lines:          0
   Executable Code Lines:   11
   Declarative Code Lines:  4
   Execution Statements:    11
   Declaration Statements:  6
   Ratio Comment/Code:      0.95
   Units                    1
                                                                     Page 542
                          File Average Metrics Report
===============================================================================

Apple.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              3
   Code                               3
   Comment                            0
   Blank                              0

Banana.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              3
   Code                               3
   Comment                            0
   Blank                              0

Callback.java
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0

ExprD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            0
   Blank                              0

ExprD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            0
   Blank                              0

Food.java
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0
                                                                     Page 543
                          File Average Metrics Report
===============================================================================

FruitD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              3
   Code                               3
   Comment                            0
   Blank                              0

FruitD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              3
   Code                               3
   Comment                            0
   Blank                              0

HongShaoRou.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              3
   Code                               3
   Comment                            0
   Blank                              0

KaoRou.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              3
   Code                               2
   Comment                            1
   Blank                              0

KaoRouChuan.java
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0

KaoRouPlates.java
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0
                                                                     Page 544
                          File Average Metrics Report
===============================================================================

LayerD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0

Main.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              8
   Code                               8
   Comment                            0
   Blank                              0

Mian.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              8
   Code                               7
   Comment                            1
   Blank                              0

NumD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0

NumD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0

NumD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               4
   Comment                            0
   Blank                              0
                                                                     Page 545
                          File Average Metrics Report
===============================================================================

PieD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0

PieD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              5
   Code                               4
   Comment                            0
   Blank                              0

PieD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0

PieD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0

PieD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              5
   Code                               4
   Comment                            0
   Blank                              0

PieD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              5
   Code                               4
   Comment                            1
   Blank                              0
                                                                     Page 546
                          File Average Metrics Report
===============================================================================

PieD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               4
   Comment                            0
   Blank                              0

PieDGeneral.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               4
   Comment                            0
   Blank                              0

PieDUpdate.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              5
   Code                               4
   Comment                            0
   Blank                              0

PiemanM.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0

PizzaD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0

PointD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            0
   Blank                              0
                                                                     Page 547
                          File Average Metrics Report
===============================================================================

PointD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0

PointDCloser.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            0
   Blank                              0

PointDCloserSimplify.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            0
   Blank                              0

PointDCloserSimplify.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            0
   Blank                              0

QingJiaoRouSi.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              3
   Code                               3
   Comment                            0
   Blank                              0

Restaurant.java
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              17
   Code                               12
   Comment                            3
   Blank                              0
                                                                     Page 548
                          File Average Metrics Report
===============================================================================

Seasoning.java
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0

SetD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              5
   Code                               4
   Comment                            0
   Blank                              0

SetD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              5
   Code                               4
   Comment                            0
   Blank                              0

ShadowCartesian.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              5
   Code                               4
   Comment                            1
   Blank                              0

ShapeD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0

Stranger.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              7
   Code                               4
   Comment                            2
   Blank                              0
                                                                     Page 549
                          File Average Metrics Report
===============================================================================

SuanTaiChaoRou.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              3
   Code                               3
   Comment                            0
   Blank                              0

SubstD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              6
   Code                               5
   Comment                            1
   Blank                              0

SubstVExt.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              6
   Code                               5
   Comment                            0
   Blank                              0

TangCuLiYu.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              3
   Code                               3
   Comment                            0
   Blank                              0

Test.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              8
   Code                               7
   Comment                            0
   Blank                              1

Test.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              14
   Code                               7
   Comment                            5
   Blank                              2
                                                                     Page 550
                          File Average Metrics Report
===============================================================================

Test.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               4
   Comment                            0
   Blank                              0

Test.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               4
   Comment                            0
   Blank                              0

TestMain.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               4
   Comment                            0
   Blank                              0

TestPieD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              3
   Code                               3
   Comment                            0
   Blank                              0

TestThat.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              12
   Code                               10
   Comment                            0
   Blank                              2

TestTYangRouChuan.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              14
   Code                               9
   Comment                            2
   Blank                              3
                                                                     Page 551
                          File Average Metrics Report
===============================================================================

TreeD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0

TreeD.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0

Union.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            0
   Blank                              0

Wang.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              8
   Code                               4
   Comment                            4
   Blank                              0

YangRouChuan.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              3
   Code                               3
   Comment                            0
   Blank                              0

YangRouChuan.java
   Cyclomatic                         1
   Modified                           1
   Strict                             1
   Essential                          1
   Lines                              4
   Code                               3
   Comment                            1
   Blank                              0
                                                                     Page 552
                          File Average Metrics Report
===============================================================================

Ye.java
   Cyclomatic                         5
   Modified                           5
   Strict                             5
   Essential                          1
   Lines                              40
   Code                               16
   Comment                            18
   Blank                              6
                                                                     Page 553
                              Class Metrics Report
===============================================================================
ch01.Base:
  Lines                      8
  Lines Blank                1
  Lines Code                 6
  Lines Comment              1
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch01.CartesianPt:
  Lines                      9
  Lines Blank                0
  Lines Code                 8
  Lines Comment              1
  Average Lines              5
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.13

ch01.LayerD:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch01.ManHattanPt:
  Lines                     16
  Lines Blank                3
  Lines Code                12
  Lines Comment              1
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.08

ch01.MoreThanOne:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              1
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

                                                                     Page 554
                              Class Metrics Report
===============================================================================
ch01.NumD:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch01.Pepper:
  Lines                      1
  Lines Blank                0
  Lines Code                 1
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.00

ch01.PointD:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch01.Sage:
  Lines                      1
  Lines Blank                0
  Lines Code                 1
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.00

ch01.Salt:
  Lines                      1
  Lines Blank                0
  Lines Code                 1
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.00

                                                                     Page 555
                              Class Metrics Report
===============================================================================
ch01.Seasoning:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch01.Slice:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              1
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch01.Test:
  Lines                      7
  Lines Blank                1
  Lines Code                 6
  Lines Comment              0
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

ch01.TestMain:
  Lines                      6
  Lines Blank                0
  Lines Code                 6
  Lines Comment              0
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

ch01.Thyme:
  Lines                      1
  Lines Blank                0
  Lines Code                 1
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.00

                                                                     Page 556
                              Class Metrics Report
===============================================================================
ch01.Zero:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch02.Brass:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.50

ch02.CartesianPt:
  Lines                     14
  Lines Blank                0
  Lines Code                12
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch02.CartesianPt1:
  Lines                     20
  Lines Blank                1
  Lines Code                16
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.19

ch02.CartesianPt2:
  Lines                     16
  Lines Blank                2
  Lines Code                12
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

                                                                     Page 557
                              Class Metrics Report
===============================================================================
ch02.Copper:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.50

ch02.Dagger:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.50

ch02.Gold:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.50

ch02.Holder:
  Lines                     18
  Lines Blank                2
  Lines Code                13
  Lines Comment              4
  Average Lines              3
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.31

ch02.KaoRou:
  Lines                     10
  Lines Blank                1
  Lines Code                 8
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.50

                                                                     Page 558
                              Class Metrics Report
===============================================================================
ch02.KaoRouChuan:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.50

ch02.KaoRouPlates:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.50

ch02.Lamb:
  Lines                     21
  Lines Blank                4
  Lines Code                14
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.29

ch02.Main:
  Lines                     10
  Lines Blank                0
  Lines Code                10
  Lines Comment              0
  Average Lines              8
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

ch02.ManHattanPt:
  Lines                     20
  Lines Blank                1
  Lines Code                16
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.19

                                                                     Page 559
                              Class Metrics Report
===============================================================================
ch02.ManHattanPt1:
  Lines                     19
  Lines Blank                0
  Lines Code                16
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.19

ch02.ManHattanPt2:
  Lines                     19
  Lines Blank                0
  Lines Code                16
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.19

ch02.MoreThanOne:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              1
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch02.NumD:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch02.Onion:
  Lines                     24
  Lines Blank                2
  Lines Code                18
  Lines Comment              5
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.28

                                                                     Page 560
                              Class Metrics Report
===============================================================================
ch02.Pepper:
  Lines                     18
  Lines Blank                2
  Lines Code                13
  Lines Comment              4
  Average Lines              3
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.31

ch02.PointD:
  Lines                     10
  Lines Blank                1
  Lines Code                 7
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.29

ch02.PointDCloser:
  Lines                      5
  Lines Blank                1
  Lines Code                 3
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.33

ch02.PointDCloserSimplify:
  Lines                     10
  Lines Blank                1
  Lines Code                 7
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.29

ch02.Radish:
  Lines                     18
  Lines Blank                2
  Lines Code                13
  Lines Comment              4
  Average Lines              3
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.31

                                                                     Page 561
                              Class Metrics Report
===============================================================================
ch02.Sabre:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.50

ch02.Shallot:
  Lines                     18
  Lines Blank                2
  Lines Code                13
  Lines Comment              4
  Average Lines              3
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.31

ch02.Shrimp:
  Lines                     18
  Lines Blank                2
  Lines Code                13
  Lines Comment              4
  Average Lines              3
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.31

ch02.Silver:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.50

ch02.Skewer:
  Lines                     16
  Lines Blank                4
  Lines Code                10
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.30

                                                                     Page 562
                              Class Metrics Report
===============================================================================
ch02.Sword:
  Lines                      1
  Lines Blank                0
  Lines Code                 1
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.00

ch02.Test:
  Lines                     11
  Lines Blank                2
  Lines Code                 9
  Lines Comment              0
  Average Lines              8
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

ch02.TestTYangRouChuan:
  Lines                     18
  Lines Blank                5
  Lines Code                11
  Lines Comment              2
  Average Lines             14
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.18

ch02.Tomato:
  Lines                     23
  Lines Blank                2
  Lines Code                17
  Lines Comment              6
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.35

ch02.Wood:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.50

                                                                     Page 563
                              Class Metrics Report
===============================================================================
ch02.YangRouChuan:
  Lines                     15
  Lines Blank                2
  Lines Code                11
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.36

ch02.Zero:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch02.Zucchini:
  Lines                     18
  Lines Blank                2
  Lines Code                13
  Lines Comment              4
  Average Lines              3
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.31

ch03.Anchovy:
  Lines                     28
  Lines Blank                4
  Lines Code                18
  Lines Comment              7
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.39

ch03.Cheese:
  Lines                     27
  Lines Blank                5
  Lines Code                18
  Lines Comment              5
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.28

                                                                     Page 564
                              Class Metrics Report
===============================================================================
ch03.Crust:
  Lines                     21
  Lines Blank                4
  Lines Code                14
  Lines Comment              5
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.36

ch03.Olive:
  Lines                     26
  Lines Blank                4
  Lines Code                18
  Lines Comment              5
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.28

ch03.PizzaD:
  Lines                      6
  Lines Blank                1
  Lines Code                 5
  Lines Comment              4
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.80

ch03.Sausage:
  Lines                     26
  Lines Blank                4
  Lines Code                18
  Lines Comment              5
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.28

ch03.Spinach:
  Lines                     26
  Lines Blank                4
  Lines Code                18
  Lines Comment              5
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.28

                                                                     Page 565
                              Class Metrics Report
===============================================================================
ch04.IsVegetarianV:
  Lines                     14
  Lines Blank                0
  Lines Code                14
  Lines Comment              0
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

ch04.Lamb:
  Lines                     21
  Lines Blank                4
  Lines Code                14
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.29

ch04.Onion:
  Lines                     20
  Lines Blank                3
  Lines Code                14
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.29

ch04.OnlyOnionsV:
  Lines                     14
  Lines Blank                0
  Lines Code                14
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.07

ch04.Skewer:
  Lines                     16
  Lines Blank                4
  Lines Code                10
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.30

                                                                     Page 566
                              Class Metrics Report
===============================================================================
ch04.Tomato:
  Lines                     18
  Lines Blank                2
  Lines Code                13
  Lines Comment              5
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.38

ch04.YangRouChuan:
  Lines                      8
  Lines Blank                1
  Lines Code                 6
  Lines Comment              3
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.50

ch05.AnchovyFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch05.Bot:
  Lines                     15
  Lines Blank                3
  Lines Code                10
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.40

ch05.Bot1:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              1
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

                                                                     Page 567
                              Class Metrics Report
===============================================================================
ch05.FishD:
  Lines                      3
  Lines Blank                0
  Lines Code                 3
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch05.MoreThanOne:
  Lines                     16
  Lines Blank                2
  Lines Code                13
  Lines Comment              1
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.08

ch05.NumD:
  Lines                      3
  Lines Blank                1
  Lines Code                 2
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch05.PieD:
  Lines                      8
  Lines Blank                1
  Lines Code                 6
  Lines Comment              2
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.33

ch05.PieDGeneral:
  Lines                      6
  Lines Blank                1
  Lines Code                 4
  Lines Comment              2
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.50

                                                                     Page 568
                              Class Metrics Report
===============================================================================
ch05.RemAV:
  Lines                     12
  Lines Blank                0
  Lines Code                12
  Lines Comment              0
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.00

ch05.RemFishInt:
  Lines                     13
  Lines Blank                0
  Lines Code                12
  Lines Comment              2
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.17

ch05.RemFishV:
  Lines                     13
  Lines Blank                0
  Lines Code                12
  Lines Comment              1
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.08

ch05.RemFishV1:
  Lines                     13
  Lines Blank                0
  Lines Code                12
  Lines Comment              1
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.08

ch05.RemV:
  Lines                     13
  Lines Blank                0
  Lines Code                12
  Lines Comment              2
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.17

                                                                     Page 569
                              Class Metrics Report
===============================================================================
ch05.SalmonFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch05.Top:
  Lines                     23
  Lines Blank                4
  Lines Code                16
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.25

ch05.Top1:
  Lines                     16
  Lines Blank                2
  Lines Code                12
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch05.TunaFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch05.Zero:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              0
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

                                                                     Page 570
                              Class Metrics Report
===============================================================================
ch051.AnchovyFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch051.Bot:
  Lines                     15
  Lines Blank                3
  Lines Code                10
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

ch051.FishD:
  Lines                      3
  Lines Blank                0
  Lines Code                 3
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch051.PieD:
  Lines                      8
  Lines Blank                1
  Lines Code                 6
  Lines Comment              2
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.33

ch051.RemFishInt:
  Lines                     13
  Lines Blank                0
  Lines Code                12
  Lines Comment              2
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.17

                                                                     Page 571
                              Class Metrics Report
===============================================================================
ch051.RemFishV:
  Lines                     13
  Lines Blank                0
  Lines Code                12
  Lines Comment              1
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.08

ch051.RemV:
  Lines                     13
  Lines Blank                0
  Lines Code                12
  Lines Comment              2
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.17

ch051.SalmonFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch051.SubstFishV:
  Lines                     13
  Lines Blank                0
  Lines Code                13
  Lines Comment              0
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.00

ch051.SubstIntV:
  Lines                     13
  Lines Blank                0
  Lines Code                13
  Lines Comment              0
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.00

                                                                     Page 572
                              Class Metrics Report
===============================================================================
ch051.SubstV:
  Lines                     13
  Lines Blank                0
  Lines Code                13
  Lines Comment              0
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.00

ch051.Top:
  Lines                     21
  Lines Blank                2
  Lines Code                16
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.19

ch051.TunaFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch06.AnchovyFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch06.Bot:
  Lines                     15
  Lines Blank                3
  Lines Code                10
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

                                                                     Page 573
                              Class Metrics Report
===============================================================================
ch06.FishD:
  Lines                      3
  Lines Blank                0
  Lines Code                 3
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch06.PieD:
  Lines                      8
  Lines Blank                1
  Lines Code                 4
  Lines Comment              4
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.00

ch06.RemV:
  Lines                     13
  Lines Blank                0
  Lines Code                12
  Lines Comment              3
  Average Lines              5
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.25

ch06.SalmonFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch06.SubstV:
  Lines                     13
  Lines Blank                0
  Lines Code                13
  Lines Comment              0
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.00

                                                                     Page 574
                              Class Metrics Report
===============================================================================
ch06.Top:
  Lines                     21
  Lines Blank                2
  Lines Code                16
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.19

ch06.TunaFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch061.AnchovyFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch061.Bot:
  Lines                     22
  Lines Blank                3
  Lines Code                16
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.19

ch061.FishD:
  Lines                      3
  Lines Blank                0
  Lines Code                 3
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

                                                                     Page 575
                              Class Metrics Report
===============================================================================
ch061.PieD:
  Lines                      8
  Lines Blank                1
  Lines Code                 4
  Lines Comment              4
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.00

ch061.RemV:
  Lines                     18
  Lines Blank                0
  Lines Code                16
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.25

ch061.SalmonFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch061.SubstV:
  Lines                     20
  Lines Blank                0
  Lines Code                19
  Lines Comment              1
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.05

ch061.Top:
  Lines                     21
  Lines Blank                2
  Lines Code                16
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.19

                                                                     Page 576
                              Class Metrics Report
===============================================================================
ch061.TunaFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch062.Bot:
  Lines                     10
  Lines Blank                3
  Lines Code                 6
  Lines Comment              1
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch062.LtSubstV:
  Lines                     33
  Lines Blank                3
  Lines Code                27
  Lines Comment              4
  Average Lines              7
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         3
  Ratio Comment/Code      0.15

ch062.PieD:
  Lines                      7
  Lines Blank                1
  Lines Code                 3
  Lines Comment              4
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.33

ch062.RemV:
  Lines                     19
  Lines Blank                0
  Lines Code                16
  Lines Comment              5
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.31

                                                                     Page 577
                              Class Metrics Report
===============================================================================
ch062.SubstV:
  Lines                     20
  Lines Blank                0
  Lines Code                19
  Lines Comment              1
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.05

ch062.Top:
  Lines                     17
  Lines Blank                3
  Lines Code                12
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch07.Apple:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

ch07.BHasFruitV:
  Lines                     19
  Lines Blank                2
  Lines Code                14
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.21

ch07.BIsFlatV:
  Lines                     21
  Lines Blank                4
  Lines Code                14
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.21

                                                                     Page 578
                              Class Metrics Report
===============================================================================
ch07.BIsSplitV:
  Lines                     21
  Lines Blank                4
  Lines Code                14
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.21

ch07.Bud:
  Lines                     21
  Lines Blank                4
  Lines Code                14
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.29

ch07.Fig:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

ch07.Flat:
  Lines                     30
  Lines Blank                6
  Lines Code                20
  Lines Comment              5
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.25

ch07.FruitD:
  Lines                      1
  Lines Blank                0
  Lines Code                 1
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.00

                                                                     Page 579
                              Class Metrics Report
===============================================================================
ch07.IHeightV:
  Lines                     23
  Lines Blank                5
  Lines Code                14
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.29

ch07.IOccursV:
  Lines                     33
  Lines Blank                6
  Lines Code                23
  Lines Comment              4
  Average Lines              5
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.17

ch07.Lemon:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

ch07.Peach:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

ch07.Pear:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

                                                                     Page 580
                              Class Metrics Report
===============================================================================
ch07.Split:
  Lines                     29
  Lines Blank                5
  Lines Code                20
  Lines Comment              5
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.25

ch07.TreeD:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.20

ch07.TSubstsV:
  Lines                     32
  Lines Blank                4
  Lines Code                24
  Lines Comment              4
  Average Lines              5
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.17

ch071.Apple:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

ch071.Bud:
  Lines                     11
  Lines Blank                4
  Lines Code                 6
  Lines Comment              1
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

                                                                     Page 581
                              Class Metrics Report
===============================================================================
ch071.Fig:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

ch071.Flat:
  Lines                     20
  Lines Blank                6
  Lines Code                12
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.25

ch071.FruitD:
  Lines                      1
  Lines Blank                0
  Lines Code                 1
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.00

ch071.HasFruitV:
  Lines                     20
  Lines Blank                2
  Lines Code                14
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.29

ch071.IHeightV:
  Lines                     23
  Lines Blank                5
  Lines Code                14
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.29

                                                                     Page 582
                              Class Metrics Report
===============================================================================
ch071.IOccursV:
  Lines                     33
  Lines Blank                6
  Lines Code                23
  Lines Comment              4
  Average Lines              5
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.17

ch071.IsFlatV:
  Lines                     23
  Lines Blank                6
  Lines Code                14
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.21

ch071.IsSplitV:
  Lines                     25
  Lines Blank                4
  Lines Code                18
  Lines Comment              3
  Average Lines              5
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.17

ch071.Lemon:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

ch071.Peach:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

                                                                     Page 583
                              Class Metrics Report
===============================================================================
ch071.Pear:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

ch071.Split:
  Lines                     18
  Lines Blank                3
  Lines Code                12
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.25

ch071.TreeD:
  Lines                      4
  Lines Blank                1
  Lines Code                 3
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.33

ch071.TSubstsV:
  Lines                     32
  Lines Blank                4
  Lines Code                24
  Lines Comment              4
  Average Lines              5
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.17

ch08.Add:
  Lines                     46
  Lines Blank                5
  Lines Code                36
  Lines Comment              5
  Average Lines              6
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.14

                                                                     Page 584
                              Class Metrics Report
===============================================================================
ch08.Const:
  Lines                     12
  Lines Blank                0
  Lines Code                10
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

ch08.Diff:
  Lines                     14
  Lines Blank                0
  Lines Code                12
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch08.Empty:
  Lines                     27
  Lines Blank                5
  Lines Code                18
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.22

ch08.ExprD:
  Lines                      3
  Lines Blank                0
  Lines Code                 3
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.33

ch08.IntEvalV:
  Lines                     37
  Lines Blank                6
  Lines Code                27
  Lines Comment              4
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.15

                                                                     Page 585
                              Class Metrics Report
===============================================================================
ch08.Plus:
  Lines                     16
  Lines Blank                2
  Lines Code                12
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch08.Prod:
  Lines                     14
  Lines Blank                0
  Lines Code                12
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch08.SetD:
  Lines                     14
  Lines Blank                1
  Lines Code                13
  Lines Comment              0
  Average Lines              7
  Average Lines Comment      0
  Average Complexity         2
  Maximum Complexity         2
  Ratio Comment/Code      0.00

ch08.SetEvalV:
  Lines                     16
  Lines Blank                0
  Lines Code                13
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.23

ch0801That.Bot:
  Lines                     12
  Lines Blank                2
  Lines Code                 9
  Lines Comment              2
  Average Lines              3
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.22

                                                                     Page 586
                              Class Metrics Report
===============================================================================
ch0801That.LtSubstV:
  Lines                     33
  Lines Blank                3
  Lines Code                27
  Lines Comment              4
  Average Lines              7
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         3
  Ratio Comment/Code      0.15

ch0801That.PieDUpdate:
  Lines                      7
  Lines Blank                1
  Lines Code                 3
  Lines Comment              4
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.33

ch0801That.RemV:
  Lines                     20
  Lines Blank                0
  Lines Code                16
  Lines Comment              6
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.38

ch0801That.SubstV:
  Lines                     20
  Lines Blank                0
  Lines Code                19
  Lines Comment              1
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.05

ch0801That.TestThat:
  Lines                     14
  Lines Blank                2
  Lines Code                12
  Lines Comment              0
  Average Lines             12
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

                                                                     Page 587
                              Class Metrics Report
===============================================================================
ch0801That.Top:
  Lines                     18
  Lines Blank                1
  Lines Code                15
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.13

ch081.Add:
  Lines                     46
  Lines Blank                5
  Lines Code                36
  Lines Comment              5
  Average Lines              6
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.14

ch081.Bot:
  Lines                     13
  Lines Blank                3
  Lines Code                 9
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.11

ch081.Const:
  Lines                     12
  Lines Blank                0
  Lines Code                10
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.20

ch081.Diff:
  Lines                     14
  Lines Blank                0
  Lines Code                12
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

                                                                     Page 588
                              Class Metrics Report
===============================================================================
ch081.Empty:
  Lines                     27
  Lines Blank                5
  Lines Code                18
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.22

ch081.EvalV:
  Lines                     29
  Lines Blank                4
  Lines Code                21
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.19

ch081.ExprD:
  Lines                      3
  Lines Blank                0
  Lines Code                 3
  Lines Comment              1
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.33

ch081.IntEvalV:
  Lines                     13
  Lines Blank                2
  Lines Code                11
  Lines Comment              0
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

ch081.LtSubstV:
  Lines                     33
  Lines Blank                3
  Lines Code                27
  Lines Comment              4
  Average Lines              7
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         3
  Ratio Comment/Code      0.15

                                                                     Page 589
                              Class Metrics Report
===============================================================================
ch081.LtSubstV1:
  Lines                     21
  Lines Blank                0
  Lines Code                19
  Lines Comment              2
  Average Lines              9
  Average Lines Comment      1
  Average Complexity         2
  Maximum Complexity         3
  Ratio Comment/Code      0.11

ch081.LtSubstV2:
  Lines                     21
  Lines Blank                0
  Lines Code                19
  Lines Comment              2
  Average Lines              9
  Average Lines Comment      1
  Average Complexity         2
  Maximum Complexity         3
  Ratio Comment/Code      0.11

ch081.PieD:
  Lines                      7
  Lines Blank                1
  Lines Code                 3
  Lines Comment              4
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.33

ch081.Plus:
  Lines                     16
  Lines Blank                2
  Lines Code                12
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch081.Prod:
  Lines                     14
  Lines Blank                0
  Lines Code                12
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

                                                                     Page 590
                              Class Metrics Report
===============================================================================
ch081.RemV:
  Lines                     19
  Lines Blank                0
  Lines Code                16
  Lines Comment              5
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.31

ch081.SetD:
  Lines                     14
  Lines Blank                1
  Lines Code                13
  Lines Comment              0
  Average Lines              7
  Average Lines Comment      0
  Average Complexity         2
  Maximum Complexity         2
  Ratio Comment/Code      0.00

ch081.SetEvalV:
  Lines                     16
  Lines Blank                0
  Lines Code                13
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.23

ch081.SubstD:
  Lines                     17
  Lines Blank                2
  Lines Code                13
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.15

ch081.SubstV:
  Lines                     20
  Lines Blank                0
  Lines Code                19
  Lines Comment              1
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.05

                                                                     Page 591
                              Class Metrics Report
===============================================================================
ch081.SubstV1:
  Lines                     18
  Lines Blank                2
  Lines Code                14
  Lines Comment              2
  Average Lines              6
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.14

ch081.SubstVExt:
  Lines                     23
  Lines Blank                2
  Lines Code                19
  Lines Comment              2
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.11

ch081.TestPieD:
  Lines                      5
  Lines Blank                0
  Lines Code                 5
  Lines Comment              0
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

ch081.Top:
  Lines                     19
  Lines Blank                2
  Lines Code                15
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.13

ch09.CartesianPt2:
  Lines                     21
  Lines Blank                2
  Lines Code                11
  Lines Comment              8
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.73

                                                                     Page 592
                              Class Metrics Report
===============================================================================
ch09.Circle:
  Lines                     14
  Lines Blank                2
  Lines Code                10
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.30

ch09.HasPtV:
  Lines                     24
  Lines Blank                3
  Lines Code                17
  Lines Comment              4
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.24

ch09.ManHattanPt2:
  Lines                     23
  Lines Blank                0
  Lines Code                15
  Lines Comment              8
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.53

ch09.PointDCloserSimplify:
  Lines                     21
  Lines Blank                1
  Lines Code                17
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.18

ch09.ShadowCartesian:
  Lines                     18
  Lines Blank                3
  Lines Code                13
  Lines Comment              2
  Average Lines              5
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.15

                                                                     Page 593
                              Class Metrics Report
===============================================================================
ch09.ShapeD:
  Lines                      3
  Lines Blank                0
  Lines Code                 3
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch09.Square:
  Lines                     12
  Lines Blank                0
  Lines Code                10
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.30

ch09.Test:
  Lines                      7
  Lines Blank                1
  Lines Code                 6
  Lines Comment              0
  Average Lines              4
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

ch09.Trans:
  Lines                     14
  Lines Blank                0
  Lines Code                12
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.25

ch09.Union:
  Lines                     15
  Lines Blank                1
  Lines Code                12
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

                                                                     Page 594
                              Class Metrics Report
===============================================================================
ch09.UnionHasPtV:
  Lines                     11
  Lines Blank                2
  Lines Code                 8
  Lines Comment              1
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.13

ch10.AnchovyFish:
  Lines                     14
  Lines Blank                2
  Lines Code                10
  Lines Comment              3
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.30

ch10.Bot:
  Lines                     10
  Lines Blank                3
  Lines Code                 6
  Lines Comment              1
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch10.FishD:
  Lines                      3
  Lines Blank                0
  Lines Code                 3
  Lines Comment              0
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      0.00

ch10.LtSubstV:
  Lines                     33
  Lines Blank                3
  Lines Code                27
  Lines Comment              4
  Average Lines              7
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         3
  Ratio Comment/Code      0.15

                                                                     Page 595
                              Class Metrics Report
===============================================================================
ch10.Mian:
  Lines                     10
  Lines Blank                0
  Lines Code                 9
  Lines Comment              1
  Average Lines              8
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.11

ch10.OccursV:
  Lines                     25
  Lines Blank                4
  Lines Code                18
  Lines Comment              3
  Average Lines              5
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.17

ch10.PieD:
  Lines                      7
  Lines Blank                1
  Lines Code                 3
  Lines Comment              4
  Average Lines              0
  Average Lines Comment      0
  Average Complexity         0
  Maximum Complexity         0
  Ratio Comment/Code      1.33

ch10.PiemanM:
  Lines                     41
  Lines Blank                6
  Lines Code                29
  Lines Comment              6
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.21

ch10.RemV:
  Lines                     19
  Lines Blank                0
  Lines Code                16
  Lines Comment              5
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.31

                                                                     Page 596
                              Class Metrics Report
===============================================================================
ch10.SalmonFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ch10.SubstV:
  Lines                     20
  Lines Blank                0
  Lines Code                19
  Lines Comment              1
  Average Lines              5
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         2
  Ratio Comment/Code      0.05

ch10.Top:
  Lines                     17
  Lines Blank                3
  Lines Code                12
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      1
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.17

ch10.TunaFish:
  Lines                      9
  Lines Blank                2
  Lines Code                 6
  Lines Comment              2
  Average Lines              4
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.33

ReCall.Stranger:
  Lines                     35
  Lines Blank                5
  Lines Code                22
  Lines Comment              8
  Average Lines              6
  Average Lines Comment      2
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.36

                                                                     Page 597
                              Class Metrics Report
===============================================================================
ReCall.Stranger.askQuestion.(Anon_1):
  Lines                     10
  Lines Blank                0
  Lines Code                 5
  Lines Comment              5
  Average Lines              8
  Average Lines Comment      5
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      1.00

ReCall.Test:
  Lines                     16
  Lines Blank                2
  Lines Code                 9
  Lines Comment              5
  Average Lines             14
  Average Lines Comment      5
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.56

ReCall.Wang:
  Lines                     46
  Lines Blank                5
  Lines Code                22
  Lines Comment             19
  Average Lines              8
  Average Lines Comment      4
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.86

ReCall.Wang.askQuestion.(Anon_1):
  Lines                     10
  Lines Blank                0
  Lines Code                 5
  Lines Comment              5
  Average Lines              8
  Average Lines Comment      5
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      1.00

ReCall.Ye:
  Lines                     43
  Lines Blank                7
  Lines Code                18
  Lines Comment             18
  Average Lines             40
  Average Lines Comment     18
  Average Complexity         5
  Maximum Complexity         5
  Ratio Comment/Code      1.00

                                                                     Page 598
                              Class Metrics Report
===============================================================================
YeRestaurant.Cai.Apple:
  Lines                      6
  Lines Blank                0
  Lines Code                 6
  Lines Comment              0
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

YeRestaurant.Cai.Banana:
  Lines                      6
  Lines Blank                0
  Lines Code                 6
  Lines Comment              0
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

YeRestaurant.Cai.HongShaoRou:
  Lines                      6
  Lines Blank                0
  Lines Code                 6
  Lines Comment              0
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

YeRestaurant.Cai.QingJiaoRouSi:
  Lines                      6
  Lines Blank                0
  Lines Code                 6
  Lines Comment              0
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

YeRestaurant.Cai.SuanTaiChaoRou:
  Lines                      6
  Lines Blank                0
  Lines Code                 6
  Lines Comment              0
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

                                                                     Page 599
                              Class Metrics Report
===============================================================================
YeRestaurant.Cai.TangCuLiYu:
  Lines                      6
  Lines Blank                0
  Lines Code                 6
  Lines Comment              0
  Average Lines              3
  Average Lines Comment      0
  Average Complexity         1
  Maximum Complexity         1
  Ratio Comment/Code      0.00

YeRestaurant.Restaurant:
  Lines                    100
  Lines Blank               11
  Lines Code                53
  Lines Comment             36
  Average Lines             17
  Average Lines Comment      3
  Average Complexity         2
  Maximum Complexity         6
  Ratio Comment/Code      0.68

                                                                     Page 600
                            Class OO Metrics Report
===============================================================================
ch01.Base:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 1

ch01.CartesianPt:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 1

ch01.LayerD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch01.ManHattanPt:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch01.MoreThanOne:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 1

                                                                     Page 601
                            Class OO Metrics Report
===============================================================================
ch01.NumD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch01.Pepper:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch01.PointD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch01.Sage:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch01.Salt:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

                                                                     Page 602
                            Class OO Metrics Report
===============================================================================
ch01.Seasoning:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         4
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch01.Slice:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 1

ch01.Test:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch01.TestMain:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch01.Thyme:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

                                                                     Page 603
                            Class OO Metrics Report
===============================================================================
ch01.Zero:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch02.Brass:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch02.CartesianPt:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch02.CartesianPt1:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch02.CartesianPt2:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

                                                                     Page 604
                            Class OO Metrics Report
===============================================================================
ch02.Copper:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch02.Dagger:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch02.Gold:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch02.Holder:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            18
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch02.KaoRou:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         6
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

                                                                     Page 605
                            Class OO Metrics Report
===============================================================================
ch02.KaoRouChuan:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         3
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch02.KaoRouPlates:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         5
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch02.Lamb:
  LCOM   (Percent Lack of Cohesion)        66
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            19
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch02.Main:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         9
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch02.ManHattanPt:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

                                                                     Page 606
                            Class OO Metrics Report
===============================================================================
ch02.ManHattanPt1:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch02.ManHattanPt2:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch02.MoreThanOne:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 1

ch02.NumD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch02.Onion:
  LCOM   (Percent Lack of Cohesion)        25
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            20
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

                                                                     Page 607
                            Class OO Metrics Report
===============================================================================
ch02.Pepper:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            18
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch02.PointD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch02.PointDCloser:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch02.PointDCloserSimplify:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch02.Radish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            18
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

                                                                     Page 608
                            Class OO Metrics Report
===============================================================================
ch02.Sabre:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch02.Shallot:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            18
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch02.Shrimp:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            18
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch02.Silver:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch02.Skewer:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            18
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

                                                                     Page 609
                            Class OO Metrics Report
===============================================================================
ch02.Sword:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch02.Test:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         5
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch02.TestTYangRouChuan:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         7
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch02.Tomato:
  LCOM   (Percent Lack of Cohesion)        50
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            20
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

ch02.Wood:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

                                                                     Page 610
                            Class OO Metrics Report
===============================================================================
ch02.YangRouChuan:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         5
  NOC    (Count of Derived Classes)         4
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 4

ch02.Zero:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch02.Zucchini:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            18
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch03.Anchovy:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            19
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

ch03.Cheese:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            19
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

                                                                     Page 611
                            Class OO Metrics Report
===============================================================================
ch03.Crust:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            18
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch03.Olive:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            19
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

ch03.PizzaD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         6
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch03.Sausage:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            19
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

ch03.Spinach:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            19
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

                                                                     Page 612
                            Class OO Metrics Report
===============================================================================
ch04.IsVegetarianV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 4

ch04.Lamb:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch04.Onion:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch04.OnlyOnionsV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 4

ch04.Skewer:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

                                                                     Page 613
                            Class OO Metrics Report
===============================================================================
ch04.Tomato:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch04.YangRouChuan:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         4
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch05.AnchovyFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch05.Bot:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch05.Bot1:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

                                                                     Page 614
                            Class OO Metrics Report
===============================================================================
ch05.FishD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         3
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch05.MoreThanOne:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 2

ch05.NumD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch05.PieD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch05.PieDGeneral:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 1

                                                                     Page 615
                            Class OO Metrics Report
===============================================================================
ch05.RemAV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch05.RemFishInt:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         5
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch05.RemFishV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch05.RemFishV1:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch05.RemV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

                                                                     Page 616
                            Class OO Metrics Report
===============================================================================
ch05.SalmonFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch05.Top:
  LCOM   (Percent Lack of Cohesion)        16
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch05.Top1:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch05.TunaFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch05.Zero:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

                                                                     Page 617
                            Class OO Metrics Report
===============================================================================
ch051.AnchovyFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch051.Bot:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch051.FishD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         3
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch051.PieD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch051.RemFishInt:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         5
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

                                                                     Page 618
                            Class OO Metrics Report
===============================================================================
ch051.RemFishV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch051.RemV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch051.SalmonFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch051.SubstFishV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch051.SubstIntV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

                                                                     Page 619
                            Class OO Metrics Report
===============================================================================
ch051.SubstV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch051.Top:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch051.TunaFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch06.AnchovyFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch06.Bot:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

                                                                     Page 620
                            Class OO Metrics Report
===============================================================================
ch06.FishD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         3
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch06.PieD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch06.RemV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch06.SalmonFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch06.SubstV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

                                                                     Page 621
                            Class OO Metrics Report
===============================================================================
ch06.Top:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch06.TunaFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch061.AnchovyFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch061.Bot:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch061.FishD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         3
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

                                                                     Page 622
                            Class OO Metrics Report
===============================================================================
ch061.PieD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch061.RemV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch061.SalmonFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch061.SubstV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch061.Top:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

                                                                     Page 623
                            Class OO Metrics Report
===============================================================================
ch061.TunaFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch062.Bot:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch062.LtSubstV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      3
  WMC    (Count of Methods)                 3

ch062.PieD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch062.RemV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

                                                                     Page 624
                            Class OO Metrics Report
===============================================================================
ch062.SubstV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch062.Top:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch07.Apple:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch07.BHasFruitV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch07.BIsFlatV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

                                                                     Page 625
                            Class OO Metrics Report
===============================================================================
ch07.BIsSplitV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch07.Bud:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            18
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch07.Fig:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch07.Flat:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         5
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            19
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 4

ch07.FruitD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         5
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

                                                                     Page 626
                            Class OO Metrics Report
===============================================================================
ch07.IHeightV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch07.IOccursV:
  LCOM   (Percent Lack of Cohesion)        50
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

ch07.Lemon:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch07.Peach:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch07.Pear:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

                                                                     Page 627
                            Class OO Metrics Report
===============================================================================
ch07.Split:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            19
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 4

ch07.TreeD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         3
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch07.TSubstsV:
  LCOM   (Percent Lack of Cohesion)        50
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         6
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 4

ch071.Apple:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch071.Bud:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

                                                                     Page 628
                            Class OO Metrics Report
===============================================================================
ch071.Fig:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch071.Flat:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch071.FruitD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         5
  RFC    (Count of All Methods)            12
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 0

ch071.HasFruitV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch071.IHeightV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

                                                                     Page 629
                            Class OO Metrics Report
===============================================================================
ch071.IOccursV:
  LCOM   (Percent Lack of Cohesion)        50
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

ch071.IsFlatV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch071.IsSplitV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch071.Lemon:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch071.Peach:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

                                                                     Page 630
                            Class OO Metrics Report
===============================================================================
ch071.Pear:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch071.Split:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch071.TreeD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         3
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch071.TSubstsV:
  LCOM   (Percent Lack of Cohesion)        50
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         6
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 4

ch08.Add:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            22
  NIM    (Count of Instance Methods)        5
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 5

                                                                     Page 631
                            Class OO Metrics Report
===============================================================================
ch08.Const:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 2

ch08.Diff:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch08.Empty:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            21
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 4

ch08.ExprD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         4
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch08.IntEvalV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         1
  RFC    (Count of All Methods)            19
  NIM    (Count of Instance Methods)        7
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 7

                                                                     Page 632
                            Class OO Metrics Report
===============================================================================
ch08.Plus:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch08.Prod:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch08.SetD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        5
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 5

ch08.SetEvalV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            22
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch0801That.Bot:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

                                                                     Page 633
                            Class OO Metrics Report
===============================================================================
ch0801That.LtSubstV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      3
  WMC    (Count of Methods)                 3

ch0801That.PieDUpdate:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch0801That.RemV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch0801That.SubstV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch0801That.TestThat:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         8
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

                                                                     Page 634
                            Class OO Metrics Report
===============================================================================
ch0801That.Top:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch081.Add:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            22
  NIM    (Count of Instance Methods)        5
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 5

ch081.Bot:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch081.Const:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 2

ch081.Diff:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

                                                                     Page 635
                            Class OO Metrics Report
===============================================================================
ch081.Empty:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            21
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 4

ch081.EvalV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            19
  NIM    (Count of Instance Methods)        7
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 7

ch081.ExprD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         4
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch081.IntEvalV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            22
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch081.LtSubstV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      3
  WMC    (Count of Methods)                 3

                                                                     Page 636
                            Class OO Metrics Report
===============================================================================
ch081.LtSubstV1:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 2

ch081.LtSubstV2:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 2

ch081.PieD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch081.Plus:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch081.Prod:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

                                                                     Page 637
                            Class OO Metrics Report
===============================================================================
ch081.RemV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch081.SetD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        5
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 5

ch081.SetEvalV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            22
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 3

ch081.SubstD:
  LCOM   (Percent Lack of Cohesion)        50
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch081.SubstV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

                                                                     Page 638
                            Class OO Metrics Report
===============================================================================
ch081.SubstV1:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            17
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch081.SubstVExt:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         1
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch081.TestPieD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         6
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch081.Top:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch09.CartesianPt2:
  LCOM   (Percent Lack of Cohesion)        50
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         1
  RFC    (Count of All Methods)            18
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

                                                                     Page 639
                            Class OO Metrics Report
===============================================================================
ch09.Circle:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 2

ch09.HasPtV:
  LCOM   (Percent Lack of Cohesion)        25
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         1
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

ch09.ManHattanPt2:
  LCOM   (Percent Lack of Cohesion)        66
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            19
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch09.PointDCloserSimplify:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 4

ch09.ShadowCartesian:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             3
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            20
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

                                                                     Page 640
                            Class OO Metrics Report
===============================================================================
ch09.ShapeD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         4
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch09.Square:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 2

ch09.Test:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch09.Trans:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch09.Union:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

                                                                     Page 641
                            Class OO Metrics Report
===============================================================================
ch09.UnionHasPtV:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            18
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch10.AnchovyFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 2

ch10.Bot:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch10.FishD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         0
  NOC    (Count of Derived Classes)         3
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch10.LtSubstV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      3
  WMC    (Count of Methods)                 3

                                                                     Page 642
                            Class OO Metrics Report
===============================================================================
ch10.Mian:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         8
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch10.OccursV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

ch10.PieD:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         2
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch10.PiemanM:
  LCOM   (Percent Lack of Cohesion)        16
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)        10
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            18
  NIM    (Count of Instance Methods)        6
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 6

ch10.RemV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 3

                                                                     Page 643
                            Class OO Metrics Report
===============================================================================
ch10.SalmonFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ch10.SubstV:
  LCOM   (Percent Lack of Cohesion)        33
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 3

ch10.Top:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            15
  NIM    (Count of Instance Methods)        2
  NIV    (Count of Instance Variables)      2
  WMC    (Count of Methods)                 2

ch10.TunaFish:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             2
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         1
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            14
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ReCall.Stranger:
  LCOM   (Percent Lack of Cohesion)        75
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         6
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

                                                                     Page 644
                            Class OO Metrics Report
===============================================================================
ReCall.Stranger.askQuestion.(Anon_1):
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ReCall.Test:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         4
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        0
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ReCall.Wang:
  LCOM   (Percent Lack of Cohesion)        75
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         6
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        4
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

ReCall.Wang.askQuestion.(Anon_1):
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         3
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

ReCall.Ye:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)         6
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

                                                                     Page 645
                            Class OO Metrics Report
===============================================================================
YeRestaurant.Cai.Apple:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

YeRestaurant.Cai.Banana:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

YeRestaurant.Cai.HongShaoRou:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

YeRestaurant.Cai.QingJiaoRouSi:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

YeRestaurant.Cai.SuanTaiChaoRou:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

                                                                     Page 646
                            Class OO Metrics Report
===============================================================================
YeRestaurant.Cai.TangCuLiYu:
  LCOM   (Percent Lack of Cohesion)         0
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            2
  CBO    (Count of Coupled Classes)         2
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            13
  NIM    (Count of Instance Methods)        1
  NIV    (Count of Instance Variables)      0
  WMC    (Count of Methods)                 1

YeRestaurant.Restaurant:
  LCOM   (Percent Lack of Cohesion)        50
  DIT    (Max Inheritance Tree)             1
  IFANIN (Count of Base Classes)            1
  CBO    (Count of Coupled Classes)        16
  NOC    (Count of Derived Classes)         0
  RFC    (Count of All Methods)            16
  NIM    (Count of Instance Methods)        3
  NIV    (Count of Instance Variables)      1
  WMC    (Count of Methods)                 4

                                                                     Page 647
                           Uninitialized Items Report

  Def: Items that have not been given an initial value at point of definition.
===============================================================================

Stranger.java                                                 Line
    Stranger.ye                                                  4

Wang.java                                                     Line
    Wang.ye                                                      7

Restaurant.java                                               Line
    foodClassName                                               65
    temp                                                        67
    temp                                                        91

LayerD.java                                                   Line
    Base.o1                                                     16
    Slice.s1                                                    27

NumD.java                                                     Line
    MoreThanOne.predecessor                                     45

PointD.java                                                   Line
    CartesianPt.x                                               12
    CartesianPt.y                                               13
    ManHattanPt.x                                               24
    ManHattanPt.y                                               25

KaoRou.java                                                   Line
    Holder.o                                                    22
    Pepper.kaoroujia                                            94
    Radish.kaoroujia                                            76
    Shallot.kaoroujia                                           40
    Shrimp.kaoroujia                                            58
    Zucchini.kaoroujia                                         112

NumD.java                                                     Line
    MoreThanOne.predecessor                                     45

PointD.java                                                   Line
    CartesianPt.x                                               21
    CartesianPt.y                                               22
    ManHattanPt.x                                               38
    ManHattanPt.y                                               39

PointDCloser.java                                             Line
    CartesianPt1.x                                              16
    CartesianPt1.y                                              17
    ManHattanPt1.x                                              39
    ManHattanPt1.y                                              40

PointDCloserSimplify.java                                     Line
    CartesianPt2.x                                              23
    CartesianPt2.y                                              24
    ManHattanPt2.x                                              42
    ManHattanPt2.y                                              43
                                                                     Page 648
                           Uninitialized Items Report

  Def: Items that have not been given an initial value at point of definition.
===============================================================================

YangRouChuan.java                                             Line
    Lamb.y                                                      72
    Onion.s1                                                    45
    Tomato.y                                                    94

PizzaD.java                                                   Line
    Anchovy.p                                                   98
    Cheese.p                                                    39
    Olive.p                                                     69
    Sausage.p                                                  129
    Spinach.p                                                  166

YangRouChuan.java                                             Line
    Lamb.y                                                      91
    Onion.s1                                                    68
    Tomato.y                                                   113

PieD.java                                                     Line
    Top.r                                                      160
    Top.t                                                      159

NumD.java                                                     Line
    MoreThanOne.predecessor                                     47

PieD.java                                                     Line
    Top.r                                                       96
    Top.t                                                       95

PieDGeneral.java                                              Line
    Top1.r                                                      70
    Top1.t                                                      69

PieD.java                                                     Line
    Bot.r                                                       95
    Bot.t                                                       94
    RemV.o                                                      43
    SubstV.n                                                    63
    SubstV.o                                                    64
    Top.r                                                      118
    Top.t                                                      117

PieD.java                                                     Line
    LtSubstV.c                                                  54
    LtSubstV.n                                                  55
    LtSubstV.o                                                  56
    RemV.o                                                      11
    SubstV.n                                                    32
    SubstV.o                                                    33
    Top.r                                                      107
    Top.t                                                      106

PieD.java                                                     Line
    Top.r                                                      160
    Top.t                                                      159
                                                                     Page 649
                           Uninitialized Items Report

  Def: Items that have not been given an initial value at point of definition.
===============================================================================

TreeD.java                                                    Line
    Flat.f                                                      22
    Flat.t                                                      23
    IOccursV.a                                                 166
    Split.l                                                     44
    Split.t                                                     45
    TSubstsV.n                                                 202
    TSubstsV.o                                                 203

TreeD.java                                                    Line
    Flat.f                                                      33
    Flat.t                                                      34
    IOccursV.a                                                 199
    Split.l                                                     65
    Split.t                                                     66
    TSubstsV.n                                                 240
    TSubstsV.o                                                 241

PieDUpdate.java                                               Line
    LtSubstV.c                                                  92
    LtSubstV.n                                                  93
    LtSubstV.o                                                  94
    RemV.o                                                      49
    SubstV.n                                                    70
    SubstV.o                                                    71
    Top.r                                                       26
    Top.t                                                       25

ExprD.java                                                    Line
    Const.c                                                    109
    Diff.l                                                      78
    Diff.r                                                      79
    Plus.l                                                      62
    Plus.r                                                      63
    Prod.l                                                      93
    Prod.r                                                      94

PieD.java                                                     Line
    LtSubstV.c                                                  54
    LtSubstV.n                                                  55
    LtSubstV.o                                                  56
    RemV.o                                                      11
    SubstV.n                                                    32
    SubstV.o                                                    33
    Top.r                                                      110
    Top.t                                                      109

SetD.java                                                     Line
    Add.i                                                       50
    Add.s                                                       51

SubstD.java                                                   Line
    LtSubstV1.c                                                 43
    SubstD.n                                                     6
                                                                     Page 650
                           Uninitialized Items Report

  Def: Items that have not been given an initial value at point of definition.
===============================================================================
    SubstD.o                                                     7

SubstVExt.java                                                Line
    LtSubstV2.c                                                 31
    SubstVExt.n                                                  6
    SubstVExt.o                                                  7

ExprD.java                                                    Line
    Const.c                                                    103
    Diff.l                                                      72
    Diff.r                                                      73
    Plus.l                                                      56
    Plus.r                                                      57
    Prod.l                                                      87
    Prod.r                                                      88

SetD.java                                                     Line
    Add.i                                                       50
    Add.s                                                       51

PointDCloserSimplify.java                                     Line
    CartesianPt2.x                                              33
    CartesianPt2.y                                              34
    ManHattanPt2.x                                              57
    ManHattanPt2.y                                              58
    PointDCloserSimplify.x                                       9
    PointDCloserSimplify.y                                      10

ShadowCartesian.java                                          Line
    ShadowCartesian.tx                                           9
    ShadowCartesian.ty                                          10

ShapeD.java                                                   Line
    Circle.r                                                    16
    HasPtV.p                                                    60
    Square.s                                                    30
    Trans.q                                                     43
    Trans.s                                                     44

Union.java                                                    Line
    Union.s                                                      4
    Union.t                                                      5

PieD.java                                                     Line
    LtSubstV.c                                                  56
    LtSubstV.n                                                  57
    LtSubstV.o                                                  58
    RemV.o                                                      13
    SubstV.n                                                    34
    SubstV.o                                                    35
    Top.r                                                      109
    Top.t                                                      108

PiemanM.java                                                  Line
    OccursV.a                                                   54
                                                                     Page 651
                          Unused Objects and Functions

Def: A variable that is not read from, written to after declaration, 
or passed to a function, function parameters that are unused in the function, 
and functions that have no invocations. 
===============================================================================

Test.java                                                                     Line
    args - Parameter                                                             4
      Declared in: ReCall.Test.main(String[] args)()

Restaurant.java                                                               Line
    args - Parameter                                                            97
      Declared in: YeRestaurant.Restaurant.main(String[] args)()

LayerD.java                                                                   Line
    Base.Base - Public Constructor                                              17
    Base.o1 - Variable                                                          16
    Slice.s1 - Variable                                                         27
    Slice.Slice - Public Constructor                                            28

NumD.java                                                                     Line
    MoreThanOne.MoreThanOne - Public Constructor                                46
    MoreThanOne.predecessor - Variable                                          45

PointD.java                                                                   Line
    CartesianPt.CartesianPt - Public Constructor                                14
    CartesianPt.x - Variable                                                    12
    CartesianPt.y - Variable                                                    13

Test.java                                                                     Line
    args - Parameter                                                             5
      Declared in: ch01.Test.main(String[] args)()

TestMain.java                                                                 Line
    args - Parameter                                                             4
      Declared in: ch01.TestMain.main(String[] args)()

KaoRou.java                                                                   Line
    Holder.Holder - Public Constructor                                          23
    Pepper.Pepper - Public Constructor                                          95
    Radish.Radish - Public Constructor                                          77
    Shallot.Shallot - Public Constructor                                        41
    Shrimp.Shrimp - Public Constructor                                          59
    Zucchini.Zucchini - Public Constructor                                     113

Main.java                                                                     Line
    args - Parameter                                                             4
      Declared in: ch02.Main.main(String[] args)()

NumD.java                                                                     Line
    MoreThanOne.MoreThanOne - Public Constructor                                46
    MoreThanOne.predecessor - Variable                                          45

PointDCloser.java                                                             Line
    CartesianPt1.CartesianPt1 - Public Constructor                              18
    CartesianPt1.closerTo0 - Method                                             30

PointDCloserSimplify.java                                                     Line
    CartesianPt2.CartesianPt2 - Public Constructor                              25
    ManHattanPt2.closerTo0 - Method                                             55
                                                                     Page 652
                          Unused Objects and Functions

Def: A variable that is not read from, written to after declaration, 
or passed to a function, function parameters that are unused in the function, 
and functions that have no invocations. 
===============================================================================
    ManHattanPt2.ManHattanPt2 - Public Constructor                              44
    PointDCloserSimplify.closerTo0 - Method                                     13

Test.java                                                                     Line
    args - Parameter                                                             5
      Declared in: ch02.Test.main(String[] args)()

TestTYangRouChuan.java                                                        Line
    args - Parameter                                                             5
      Declared in: ch02.TestTYangRouChuan.main(String[] args)()

YangRouChuan.java                                                             Line
    Lamb.y - Variable                                                           72
    YangRouChuan.YangRouChuan - Public Constructor                               9

YangRouChuan.java                                                             Line
    y - Parameter                                                               27
      Declared in: ch04.IsVegetarianV.forLamb(YangRouChuan y)()
    Lamb.Lamb - Public Constructor                                              92
    Onion.Onion - Public Constructor                                            70
    y - Parameter                                                               12
      Declared in: ch04.OnlyOnionsV.forLamb(YangRouChuan y)()
    y - Parameter                                                               15
      Declared in: ch04.OnlyOnionsV.forTomato(YangRouChuan y)()
    Tomato.Tomato - Public Constructor                                         114

PieD.java                                                                     Line
    RemFishInt.forBot - Method                                                  58
    f - Parameter                                                               58
      Declared in: ch051.RemFishInt.forBot(FishD f)()
    RemFishInt.forTop - Method                                                  62
    RemFishV.forBot - Method                                                    43
    f - Parameter                                                               43
      Declared in: ch051.RemFishV.forBot(FishD f)()
    RemFishV.forTop - Method                                                    47
    f - Parameter                                                               74
      Declared in: ch051.RemV.forBot(Object f)()
    SubstFishV.forBot - Method                                                  90
    n - Parameter                                                               90
      Declared in: ch051.SubstFishV.forBot(FishD n,FishD o)()
    o - Parameter                                                               90
      Declared in: ch051.SubstFishV.forBot(FishD n,FishD o)()
    SubstFishV.forTop - Method                                                  94
    SubstIntV.forBot - Method                                                  105
    n - Parameter                                                              105
      Declared in: ch051.SubstIntV.forBot(Integer n,Integer o)()
    o - Parameter                                                              105
      Declared in: ch051.SubstIntV.forBot(Integer n,Integer o)()
    SubstIntV.forTop - Method                                                  109
    n - Parameter                                                              119
      Declared in: ch051.SubstV.forBot(Object n,Object o)()
    o - Parameter                                                              119
      Declared in: ch051.SubstV.forBot(Object n,Object o)()
                                                                     Page 653
                          Unused Objects and Functions

Def: A variable that is not read from, written to after declaration, 
or passed to a function, function parameters that are unused in the function, 
and functions that have no invocations. 
===============================================================================

NumD.java                                                                     Line
    MoreThanOne.MoreThanOne - Public Constructor                                48

PieD.java                                                                     Line
    f - Parameter                                                               85
      Declared in: ch05.Bot.remFish(FishD f)()
    RemAV.forBot - Method                                                       42
    RemFishV.forBot - Method                                                    55
    f - Parameter                                                               55
      Declared in: ch05.RemFishV.forBot(FishD f)()

PieDGeneral.java                                                              Line
    RemFishInt.forBot - Method                                                  22
    f - Parameter                                                               22
      Declared in: ch05.RemFishInt.forBot(FishD f)()
    RemFishInt.forTop - Method                                                  26
    RemFishV1.forBot - Method                                                    7
    f - Parameter                                                                7
      Declared in: ch05.RemFishV1.forBot(FishD f)()
    RemFishV1.forTop - Method                                                   11
    f - Parameter                                                               38
      Declared in: ch05.RemV.forBot(Object f)()

PieD.java                                                                     Line
    RemV.RemV - Public Constructor                                              44
    SubstV.SubstV - Public Constructor                                          65

PieD.java                                                                     Line
    RemV.RemV - Public Constructor                                              12
    SubstV.SubstV - Public Constructor                                          34

PieD.java                                                                     Line
    f - Parameter                                                               74
      Declared in: ch06.RemV.forBot(Object f)()
    n - Parameter                                                              119
      Declared in: ch06.SubstV.forBot(Object n,Object o)()
    o - Parameter                                                              119
      Declared in: ch06.SubstV.forBot(Object n,Object o)()

TreeD.java                                                                    Line
    ask - Parameter                                                             11
      Declared in: ch071.Bud.accept(TreeVisitorI ask)()
    f - Parameter                                                              127
      Declared in: ch071.HasFruitV.forFlat(FruitD f,TreeD t)()
    t - Parameter                                                              127
      Declared in: ch071.HasFruitV.forFlat(FruitD f,TreeD t)()
    f - Parameter                                                              149
      Declared in: ch071.IHeightV.forFlat(FruitD f,TreeD t)()
    IOccursV.IOccursV - Public Constructor                                     167
    f - Parameter                                                               75
      Declared in: ch071.IsFlatV.forFlat(FruitD f,TreeD t)()
    l - Parameter                                                               81
      Declared in: ch071.IsFlatV.forSplit(TreeD l,TreeD t)()
                                                                     Page 654
                          Unused Objects and Functions

Def: A variable that is not read from, written to after declaration, 
or passed to a function, function parameters that are unused in the function, 
and functions that have no invocations. 
===============================================================================
    t - Parameter                                                               81
      Declared in: ch071.IsFlatV.forSplit(TreeD l,TreeD t)()
    f - Parameter                                                              100
      Declared in: ch071.IsSplitV.forFlat(FruitD f,TreeD t)()
    t - Parameter                                                              100
      Declared in: ch071.IsSplitV.forFlat(FruitD f,TreeD t)()
    TreeVisitorI.forBud - Abstract Method                                       61
    TSubstsV.TSubstsV - Public Constructor                                     204

TreeD.java                                                                    Line
    f - Parameter                                                              161
      Declared in: ch07.BHasFruitV.forFlat(FruitD f,TreeD t)()
    t - Parameter                                                              161
      Declared in: ch07.BHasFruitV.forFlat(FruitD f,TreeD t)()
    f - Parameter                                                              107
      Declared in: ch07.BIsFlatV.forFlat(FruitD f,TreeD t)()
    l - Parameter                                                              113
      Declared in: ch07.BIsFlatV.forSplit(TreeD l,TreeD t)()
    t - Parameter                                                              113
      Declared in: ch07.BIsFlatV.forSplit(TreeD l,TreeD t)()
    f - Parameter                                                              130
      Declared in: ch07.BIsSplitV.forFlat(FruitD f,TreeD t)()
    t - Parameter                                                              130
      Declared in: ch07.BIsSplitV.forFlat(FruitD f,TreeD t)()
    f - Parameter                                                              182
      Declared in: ch07.IHeightV.forFlat(FruitD f,TreeD t)()
    IOccursV.IOccursV - Public Constructor                                     200
    TSubstsV.TSubstsV - Public Constructor                                     242

PieDUpdate.java                                                               Line
    that - Parameter                                                           102
      Declared in: ch0801That.LtSubstV.forBot(Bot that)()
    that - Parameter                                                            55
      Declared in: ch0801That.RemV.forBot(Bot that)()
    that - Parameter                                                            77
      Declared in: ch0801That.SubstV.forBot(Bot that)()

TestThat.java                                                                 Line
    args - Parameter                                                             4
      Declared in: ch0801That.TestThat.main(String[] args)()

ExprD.java                                                                    Line
    Const.Const - Public Constructor                                           110
    Diff.Diff - Public Constructor                                              80
    Plus.Plus - Public Constructor                                              64
    Prod.Prod - Public Constructor                                              95

PieD.java                                                                     Line
    RemV.RemV - Public Constructor                                              12
    SubstV.SubstV - Public Constructor                                          34

SetD.java                                                                     Line
    s - Parameter                                                               34
      Declared in: ch081.Empty.diff(SetD s)()
                                                                     Page 655
                          Unused Objects and Functions

Def: A variable that is not read from, written to after declaration, 
or passed to a function, function parameters that are unused in the function, 
and functions that have no invocations. 
===============================================================================
    i - Parameter                                                               22
      Declared in: ch081.Empty.mem(Integer i)()
    s - Parameter                                                               40
      Declared in: ch081.Empty.prod(SetD s)()

SubstD.java                                                                   Line
    SubstV1.SubstV1 - Public Constructor                                        25

SubstVExt.java                                                                Line
    LtSubstV2.LtSubstV2 - Public Constructor                                    32

TestPieD.java                                                                 Line
    args - Parameter                                                             4
      Declared in: ch081.TestPieD.main(String[] args)()

ExprD.java                                                                    Line
    Const.Const - Public Constructor                                           104
    Diff.Diff - Public Constructor                                              74
    Plus.Plus - Public Constructor                                              58
    Prod.Prod - Public Constructor                                              89

SetD.java                                                                     Line
    s - Parameter                                                               34
      Declared in: ch08.Empty.diff(SetD s)()
    i - Parameter                                                               22
      Declared in: ch08.Empty.mem(Integer i)()
    s - Parameter                                                               40
      Declared in: ch08.Empty.prod(SetD s)()

PointDCloserSimplify.java                                                     Line
    PointDCloserSimplify.closerTo0 - Method                                     19
    PointDCloserSimplify.minus - Method                                         23

ShadowCartesian.java                                                          Line
    ShadowCartesian.ShadowCartesian - Public Constructor                        11

ShapeD.java                                                                   Line
    Circle.Circle - Public Constructor                                          17
    Square.Square - Public Constructor                                          31
    Trans.Trans - Public Constructor                                            45

Test.java                                                                     Line
    args - Parameter                                                             5
      Declared in: ch09.Test.main(String[] args)()

Union.java                                                                    Line
    Union.Union - Public Constructor                                             6
    UnionHasPtV.forUnion - Public Method                                        30
    UnionHasPtV.UnionHasPtV - Public Constructor                                25

Mian.java                                                                     Line
    args - Parameter                                                             4
      Declared in: ch10.Mian.main(String[] args)()
                                                                     Page 656
                          Unused Objects and Functions

Def: A variable that is not read from, written to after declaration, 
or passed to a function, function parameters that are unused in the function, 
and functions that have no invocations. 
===============================================================================

PiemanM.java                                                                  Line
    PiemanI.remTop - Abstract Method                                             6
                                                                     Page 657
                             Unused Objects Report
===============================================================================

Test.java
    ReCall.Test.main.args                  4

Restaurant.java
    YeRestaurant.Restaurant.main.args     97

LayerD.java
    ch01.Base.o1                          16
    ch01.Slice.s1                         27

NumD.java
    ch01.MoreThanOne.predecessor          45

PointD.java
    ch01.CartesianPt.x                    12
    ch01.CartesianPt.y                    13

Test.java
    ch01.Test.main.args                    5

TestMain.java
    ch01.TestMain.main.args                4

Main.java
    ch02.Main.main.args                    4

NumD.java
    ch02.MoreThanOne.predecessor          45

Test.java
    ch02.Test.main.args                    5

TestTYangRouChuan.java
    ch02.TestTYangRouChuan.main.args       5

YangRouChuan.java
    ch02.Lamb.y                           72

YangRouChuan.java
    ch04.IsVegetarianV.forLamb.y          27
    ch04.OnlyOnionsV.forLamb.y            12
    ch04.OnlyOnionsV.forTomato.y          15

PieD.java
    ch051.RemFishInt.forBot.f             58
    ch051.RemFishV.forBot.f               43
    ch051.RemV.forBot.f                   74
    ch051.SubstFishV.forBot.n             90
    ch051.SubstFishV.forBot.o             90
    ch051.SubstIntV.forBot.n             105
    ch051.SubstIntV.forBot.o             105
    ch051.SubstV.forBot.n                119
    ch051.SubstV.forBot.o                119
                                                                     Page 658
                             Unused Objects Report
===============================================================================

PieD.java
    ch05.Bot.remFish.f                    85
    ch05.RemFishV.forBot.f                55

PieDGeneral.java
    ch05.RemFishInt.forBot.f              22
    ch05.RemFishV1.forBot.f                7
    ch05.RemV.forBot.f                    38

PieD.java
    ch06.RemV.forBot.f                    74
    ch06.SubstV.forBot.n                 119
    ch06.SubstV.forBot.o                 119

TreeD.java
    ch071.Bud.accept.ask                  11
    ch071.HasFruitV.forFlat.f            127
    ch071.HasFruitV.forFlat.t            127
    ch071.IHeightV.forFlat.f             149
    ch071.IsFlatV.forFlat.f               75
    ch071.IsFlatV.forSplit.l              81
    ch071.IsFlatV.forSplit.t              81
    ch071.IsSplitV.forFlat.f             100
    ch071.IsSplitV.forFlat.t             100

TreeD.java
    ch07.BHasFruitV.forFlat.f            161
    ch07.BHasFruitV.forFlat.t            161
    ch07.BIsFlatV.forFlat.f              107
    ch07.BIsFlatV.forSplit.l             113
    ch07.BIsFlatV.forSplit.t             113
    ch07.BIsSplitV.forFlat.f             130
    ch07.BIsSplitV.forFlat.t             130
    ch07.IHeightV.forFlat.f              182

PieDUpdate.java
    ch0801That.LtSubstV.forBot.that      102
    ch0801That.RemV.forBot.that           55
    ch0801That.SubstV.forBot.that         77

TestThat.java
    ch0801That.TestThat.main.args          4

SetD.java
    ch081.Empty.diff.s                    34
    ch081.Empty.mem.i                     22
    ch081.Empty.prod.s                    40

TestPieD.java
    ch081.TestPieD.main.args               4

SetD.java
    ch08.Empty.diff.s                     34
    ch08.Empty.mem.i                      22
    ch08.Empty.prod.s                     40
                                                                     Page 659
                             Unused Objects Report
===============================================================================

Test.java
    ch09.Test.main.args                    5

Mian.java
    ch10.Mian.main.args                    4
                                                                     Page 660
                              Unused Types Report
===============================================================================

Test.java
    ReCall.Test                          3

Apple.java
    YeRestaurant.Cai.Apple               5

Banana.java
    YeRestaurant.Cai.Banana              5

HongShaoRou.java
    YeRestaurant.Cai.HongShaoRou         5

QingJiaoRouSi.java
    YeRestaurant.Cai.QingJiaoRouSi       5

SuanTaiChaoRou.java
    YeRestaurant.Cai.SuanTaiChaoRou      5

TangCuLiYu.java
    YeRestaurant.Cai.TangCuLiYu          5

LayerD.java
    ch01.Base                           14
    ch01.Slice                          25

NumD.java
    ch01.MoreThanOne                    43
    ch01.Zero                           37

PointD.java
    ch01.CartesianPt                    11

Seasoning.java
    ch01.Pepper                         14
    ch01.Sage                           16
    ch01.Salt                           13
    ch01.Thyme                          15

Test.java
    ch01.Test                            3

TestMain.java
    ch01.TestMain                        3

KaoRou.java
    ch02.Holder                         20
    ch02.Pepper                         92
    ch02.Radish                         74
    ch02.Shallot                        38
    ch02.Shrimp                         56
    ch02.Zucchini                      110

KaoRouChuan.java
    ch02.Dagger                         13
    ch02.Sabre                          17
                                                                     Page 661
                              Unused Types Report
===============================================================================
    ch02.Sword                          21

KaoRouPlates.java
    ch02.Brass                          21
    ch02.Copper                         25
    ch02.Gold                           13
    ch02.Silver                         17
    ch02.Wood                           28

Main.java
    ch02.Main                            3

NumD.java
    ch02.MoreThanOne                    43
    ch02.Zero                           37

PointDCloserSimplify.java
    ch02.ManHattanPt2                   41

Test.java
    ch02.Test                            3

TestTYangRouChuan.java
    ch02.TestTYangRouChuan               3

YangRouChuan.java
    ch04.Lamb                           89
    ch04.Onion                          67
    ch04.Skewer                         49
    ch04.Tomato                        111

PieD.java
    ch051.RemFishInt                    57
    ch051.RemFishV                      42
    ch051.SubstFishV                    89
    ch051.SubstIntV                    104

PieDGeneral.java
    ch05.RemFishInt                     21
    ch05.RemFishV1                       6

PieD.java
    ch062.RemV                          10
    ch062.SubstV                        31

TreeD.java
    ch071.HasFruitV                    119
    ch071.IHeightV                     140
    ch071.IOccursV                     164
    ch071.IsFlatV                       66
    ch071.IsSplitV                      91
    ch071.TSubstsV                     200

TreeD.java
    ch07.BHasFruitV                    153
    ch07.BIsFlatV                       98
                                                                     Page 662
                              Unused Types Report
===============================================================================
    ch07.BIsSplitV                     121
    ch07.IHeightV                      173
    ch07.IOccursV                      197
    ch07.TSubstsV                      238

TestThat.java
    ch0801That.TestThat                  3

ExprD.java
    ch081.Const                        108
    ch081.Diff                          77
    ch081.IntEvalV                      39
    ch081.Plus                          60
    ch081.Prod                          92

PieD.java
    ch081.SubstV                        31

SetD.java
    ch081.SetEvalV                      97

SubstD.java
    ch081.SubstV1                       23

SubstVExt.java
    ch081.LtSubstV2                     30

TestPieD.java
    ch081.TestPieD                       3

ExprD.java
    ch08.Const                         102
    ch08.Diff                           71
    ch08.Plus                           54
    ch08.Prod                           86

SetD.java
    ch08.SetEvalV                       96

ShadowCartesian.java
    ch09.ShadowCartesian                 8

ShapeD.java
    ch09.Circle                         14
    ch09.Square                         29
    ch09.Trans                          42

Test.java
    ch09.Test                            3

Union.java
    ch09.Union                           3
    ch09.UnionHasPtV                    23

Mian.java
    ch10.Mian                            3
                                                                     Page 663
                          Unused Program Units Report
===============================================================================

LayerD.java
    ch01.Base.Base(Object _o)                                            17
    ch01.Slice.Slice(LayerD _s)                                          28

NumD.java
    ch01.MoreThanOne.MoreThanOne(NumD _d)                                46

PointD.java
    ch01.CartesianPt.CartesianPt(int _x,int _y)                          14

KaoRou.java
    ch02.Holder.Holder(Object _o)                                        23
    ch02.Pepper.Pepper(KaoRou kaoroujia)                                 95
    ch02.Radish.Radish(KaoRou kaoroujia)                                 77
    ch02.Shallot.Shallot(KaoRou kaoroujia)                               41
    ch02.Shrimp.Shrimp(KaoRou kaoroujia)                                 59
    ch02.Zucchini.Zucchini(KaoRou kaoroujia)                            113

NumD.java
    ch02.MoreThanOne.MoreThanOne(NumD _d)                                46

PointDCloser.java
    ch02.CartesianPt1.CartesianPt1(int _x,int _y)                        18
    ch02.CartesianPt1.closerTo0(CartesianPt1 p1)                         30

PointDCloserSimplify.java
    ch02.CartesianPt2.CartesianPt2(int _x,int _y)                        25
    ch02.ManHattanPt2.closerTo0(CartesianPt p1)                          55
    ch02.ManHattanPt2.ManHattanPt2(int _x,int _y)                        44
    ch02.PointDCloserSimplify.closerTo0(CartesianPt2 p1)                 13

YangRouChuan.java
    ch02.YangRouChuan.YangRouChuan                                        9

YangRouChuan.java
    ch04.Lamb.Lamb(YangRouChuan _y)                                      92
    ch04.Onion.Onion(YangRouChuan _s)                                    70
    ch04.Tomato.Tomato(YangRouChuan _y)                                 114

PieD.java
    ch051.RemFishInt.forBot(FishD f)                                     58
    ch051.RemFishInt.forTop(Object t,PieD r,Integer f)                   62
    ch051.RemFishV.forBot(FishD f)                                       43
    ch051.RemFishV.forTop(Object t,PieD r,FishD f)                       47
    ch051.SubstFishV.forBot(FishD n,FishD o)                             90
    ch051.SubstFishV.forTop(Object t,PieD r,FishD n,FishD o)             94
    ch051.SubstIntV.forBot(Integer n,Integer o)                         105
    ch051.SubstIntV.forTop(Object t,PieD r,Integer n,Integer o)         109

NumD.java
    ch05.MoreThanOne.MoreThanOne(NumD _d)                                48

PieD.java
    ch05.RemAV.forBot                                                    42
    ch05.RemFishV.forBot(FishD f)                                        55
                                                                     Page 664
                          Unused Program Units Report
===============================================================================

PieDGeneral.java
    ch05.RemFishInt.forBot(FishD f)                                      22
    ch05.RemFishInt.forTop(Object t,PieDGeneral r,Integer f)             26
    ch05.RemFishV1.forBot(FishD f)                                        7
    ch05.RemFishV1.forTop(Object t,PieDGeneral r,FishD f)                11

PieD.java
    ch061.RemV.RemV(Object _o)                                           44
    ch061.SubstV.SubstV(Object _n,Object _o)                             65

PieD.java
    ch062.RemV.RemV(Object _o)                                           12
    ch062.SubstV.SubstV(Object _n,Object _o)                             34

TreeD.java
    ch071.IOccursV.IOccursV(FruitD _a)                                  167
    ch071.TreeVisitorI.forBud                                            61
    ch071.TSubstsV.TSubstsV(FruitD _n,FruitD _o)                        204

TreeD.java
    ch07.IOccursV.IOccursV(FruitD _a)                                   200
    ch07.TSubstsV.TSubstsV(FruitD _n,FruitD _o)                         242

ExprD.java
    ch081.Const.Const(Object _c)                                        110
    ch081.Diff.Diff(ExprD _l,ExprD _r)                                   80
    ch081.Plus.Plus(ExprD _l,ExprD _r)                                   64
    ch081.Prod.Prod(ExprD _l,ExprD _r)                                   95

PieD.java
    ch081.RemV.RemV(Object _o)                                           12
    ch081.SubstV.SubstV(Object _n,Object _o)                             34

SubstD.java
    ch081.SubstV1.SubstV1(Object _n,Object _o)                           25

SubstVExt.java
    ch081.LtSubstV2.LtSubstV2(int c,Object _n,Object _o)                 32

ExprD.java
    ch08.Const.Const(Object _c)                                         104
    ch08.Diff.Diff(ExprD _l,ExprD _r)                                    74
    ch08.Plus.Plus(ExprD _l,ExprD _r)                                    58
    ch08.Prod.Prod(ExprD _l,ExprD _r)                                    89

PointDCloserSimplify.java
    ch09.PointDCloserSimplify.closerTo0(CartesianPt2 p1)                 19
    ch09.PointDCloserSimplify.minus(PointDCloserSimplify p)              23

ShadowCartesian.java
    ch09.ShadowCartesian.ShadowCartesian(int _x,int _y,int _tx,int _ty)  11

ShapeD.java
    ch09.Circle.Circle(int _r)                                           17
    ch09.Square.Square(int _s)                                           31
                                                                     Page 665
                          Unused Program Units Report
===============================================================================
    ch09.Trans.Trans(PointDCloserSimplify _q,ShapeD _s)                  45

Union.java
    ch09.Union.Union(ShapeD _s,ShapeD _t)                                 6
    ch09.UnionHasPtV.forUnion(ShapeD s,ShapeD t)                         30
    ch09.UnionHasPtV.UnionHasPtV(CartesianPt2 _p)                        25

PiemanM.java
    ch10.PiemanI.remTop(Object t)                                         6
